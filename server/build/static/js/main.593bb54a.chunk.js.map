{"version":3,"sources":["constants/index.ts","API.ts","utils/styles.ts","utils/util.ts","views/chart-panel/line-chart-section/index.tsx","views/chart-panel/histogram-chart-section/index.tsx","views/chart-panel/box-chart-section/index.tsx","views/chart-panel/terrestrial-heatmap-chart/index.tsx","views/cart-panel/analyze-regression-section/two-view-section/index.tsx","views/cart-panel/analyze-regression-section/three-view-section/index.tsx","components/Button/MinusAddon.tsx","components/Select/index.tsx","components/Button/PlusAddon.tsx","views/cart-panel/analyze-regression-section/charts-libs-section/selected-chart-section/index.tsx","views/cart-panel/analyze-regression-section/charts-libs-section/index.tsx","components/Button/OptionAddon.tsx","views/cart-panel/analyze-regression-section/index.tsx","views/cart-panel/index.tsx","views/chart-panel/index.tsx","utils/axios.ts","views/caesar/analyze-regression-section/TwoViewChart/index.tsx","views/caesar/analyze-regression-section/ThreeViewChart/index.tsx","components/Button/DashAddon.tsx","views/caesar/analyze-regression-section/MultiCharts/LineChart.tsx","views/caesar/analyze-regression-section/MultiCharts/HistogramChart.tsx","views/caesar/analyze-regression-section/MultiCharts/BoxChart.tsx","views/caesar/analyze-regression-section/MultiCharts/SelectedChart.tsx","views/caesar/analyze-regression-section/MultiCharts/index.tsx","views/caesar/analyze-regression-section/Header/ProcessModal/CreateSystemModal.tsx","views/caesar/analyze-regression-section/Header/ProcessModal/CustomAccordion.tsx","views/caesar/analyze-regression-section/Header/ProcessModal/SystemDetails.tsx","views/caesar/analyze-regression-section/Header/ProcessModal/ModelDetails.tsx","views/caesar/analyze-regression-section/Header/ProcessModal/NewData.tsx","views/caesar/analyze-regression-section/Header/ProcessModal/index.tsx","views/caesar/analyze-regression-section/Header/ConfirmModal.tsx","views/caesar/analyze-regression-section/Header/index.tsx","views/caesar/analyze-regression-section/index.tsx","views/caesar/index.tsx","views/auth-panel/NoMatch.tsx","App.tsx","index.tsx"],"names":["BASE_URL","MENU_ITEMS","as_needed_handoff","id","dataset","name","maximum_powee_handoff","INIT_PARAMS","getItems","params","a","axios","post","res","Error","getPlotItems","get","getCartItems","getSystems","getSystemVersion","getFileId","changeDB","processing","formData","config","headers","useStyles","makeStyles","theme","authcard","marginTop","minWidth","padding","spacing","link","paddingRight","color","textDecoration","cartCard","cartCardContent","paddingLeft","overflowX","height","backgroundColor","grey","chartCard","searchSelect","textAlignLast","tooltip","maxWidth","dialogDeep","palette","dashDialogDeep","dialogModify","dialogCloseBtn","position","right","top","zIndex","contentSection","maxHeight","overflow","label","fontSize","formControl","margin","useWindowSize","useState","width","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","LineChartSection","props","size","data","x","source","xTraces","y","yTraces","type","mode","marker","avgTraces","layout","title","showlegend","legend","orientation","xanchor","font","family","l","b","r","t","pad","xaxis","dataType","titlefont","showgrid","zerolinecolor","zerolinewidth","yaxis","displayModeBar","HistogramChartSection","split","join","BoxChartSection","boxpoints","INIT_SOURCE","heatmap","intrpl","TerrestrialHeatMap","setMode","setSource","then","catch","Grid","container","justify","alignItems","item","md","z","zeroline","range","tickmode","tick0","dtick","lat","lon","mapbox","center","style","zoom","mapboxAccessToken","hoverinfo","Box","borderColor","border","borderRadius","Button","variant","onClick","e","currentTarget","marginRight","TwoViewSection","checked","setChecked","setConfig","plot_rows","surface_rows","unpack","rows","key","map","row","configData","inclination","parseInt","inc","new_plot_rows","filter","new_surface_rows","show_surface","show_scatter","line","dot","autosize","hovermode","yAxisLabel","onHover","event","target","cursor","onUnhover","onDoubleClick","ThreeViewSection","opacity","alt","value","parseFloat","reset","scene","aspectratio","camera","eye","up","Math","max","zaxis","zAxisLabel","min","MinusAddon","IconButton","onSelected","Divider","Selection","Menu","anchorEl","keepMounted","open","Boolean","onClose","onAnchorEl","Constants","el","MenuItem","selected","includes","PlusAddon","createData","SelectedChartSection","textAlign","Typography","Table","aria-label","TableHead","TableRow","TableCell","TableBody","component","scope","ChartsLibsSection","setSelected","setAnchorEl","handleSelected","prevState","length","idx","dset","dataSet","Fragment","Card","marginLeft","CardContent","traces","Object","keys","OptionAddon","isOpen","setIsOpen","classes","left","className","isDash","onChart","plot_value","filename","Date","now","viewMethod","onViewMethod","fullWidth","flexItem","FormControl","InputLabel","Select","labelId","onChange","onInc","defaultValue","disabled","incs","Tooltip","gutterBottom","dangerouslySetInnerHTML","__html","placement","resetPlot","INIT_CHECK_STATUS","INIT_FILE_ID","AnalyzeRegressionSection","setViewMethod","setDataSet","systems","setSystems","versions","setVersions","setDot","fileId","setFileId","setTraces","setReset","version","forEach","ctype","gaps","durations","avgs","push","err","user_altitude","user_inclination","system","altitude","handleClick","points","minHeight","ToggleButtonGroup","preventDefault","onDataType","ToggleButton","onSystem","system_name","system_id","onVersion","onChecked","equation","maxAltitude","isLegend","isSub","Transition","React","forwardRef","ref","Slide","direction","CartPanel","dataSource","setDataSource","setSystem","setVersion","setInclination","setIncs","setDataType","isLoading","setIsLoading","setMaxAltitude","text","setText","metric","tmp","uniqueArray","Set","sort","Dialog","TransitionComponent","paper","CssBaseline","Close","DialogContent","dividers","m","selectedItem","INIT_MENUS","TabPanel","children","index","other","role","hidden","aria-labelledby","p","a11yProps","ChartPanel","tab","setTab","useTheme","Container","CardHeader","action","AppBar","Tabs","val","indicatorColor","textColor","Tab","axis","onChangeIndex","axiosConfig","baseURL","timeout","axiosInstance","create","interceptors","response","use","error","Promise","reject","isChart","replace","Number","DashAddon","setTitle","csvTitle","xTrace","yTrace","avgTrace","onIndex","onSubChart","LineChart","isSubChart","BoxChart","SelectedChart","HistogramChart","MultiCharts","subChart","setSubChart","setIndex","PaperProps","CreateSystemModel","setValue","TextField","required","DialogActions","Accordion","withStyles","root","boxShadow","borderBottom","display","expanded","MuiAccordion","AccordionSummary","marginBottom","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","INIT_STATE","threshold","attrVersion","SystemDetails","values","setValues","setOpen","attrVersions","setAttrVersions","fetchSystem","find","SYSTEM_ID","SYSTEM_NAME","fetchData","SYSTEM_VERSION","SYSTEM_ATTRIBUTE_VERSION_ID","handleClose","handleChange","onChangeSystem","handleCreateVersion","square","aria-controls","INIT_VALUES","beam","model","ModelDetails","beams","setBeams","models","setModels","isNew","setIsNew","fetchModels","fetchBeams","MODEL_ID","BEAM_TYPE_STK","handleCreateModel","NewData","element","document","getElementById","click","accept","files","onChangeUploadedItems","blue","uploadedItems","align","ProcessModal","setExpanded","setUploadedItems","listening","setListening","EventSource","onmessage","parsedData","JSON","parse","nests","concat","aria-describedby","DialogTitle","disableTypography","file","status","FormData","append","statement","ConfrimModal","onChangeAgree","des","DialogContentText","autoFocus","colors","systemForm","versionForm","space","uploadBtn","HeaderSection","setModel","isModal","setModal","isAgree","setAgree","setDisabled","feature","setFeature","enqueueSnackbar","useSnackbar","handleDelete","handleAlldelete","handleMigrate","db","handleOpen","getAttribute","onRefresh","onSetDB","disableHoverListener","arrow","clsx","viewStyle","setDB","count","setCount","setIsChart","chartEl","useRef","isRefresh","database","getComputedStyle","current","Header","fontWeight","Caesar","setIsRefresh","NoMatch","to","App","dense","maxSnack","exact","path","CartDashPanel","ReactDOM","render"],"mappings":"mdAGaA,EAAW,sBAEXC,EAA2B,CACtCC,kBAAmB,CACjB,CAAEC,GAAI,EAAGC,QAAS,WAAYC,KAAM,eACpC,CAAEF,GAAI,EAAGC,QAAS,WAAYC,KAAM,mBACpC,CAAEF,GAAI,EAAGC,QAAS,qBAAsBC,KAAM,gBAC9C,CAAEF,GAAI,EAAGC,QAAS,qBAAsBC,KAAM,qBAEhDC,sBAAuB,CACrB,CAAEH,GAAI,EAAGC,QAAS,MAAOC,KAAM,eAC/B,CAAEF,GAAI,EAAGC,QAAS,MAAOC,KAAM,mBAC/B,CAAEF,GAAI,EAAGC,QAAS,gBAAiBC,KAAM,gBACzC,CAAEF,GAAI,EAAGC,QAAS,gBAAiBC,KAAM,sBAIhCE,EACD,IADCA,EAKE,EALFA,EAWJ,IC5BIC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEaC,IAAMC,KAAKZ,EAAW,iBAAkBS,GAFrD,cAEdI,EAFc,yBAGbA,GAHa,sCAKd,IAAIC,MAAJ,MALc,yDAAH,sDASRC,EAAY,uCAAG,4BAAAL,EAAA,+EAESC,IAAMK,IAAIhB,EAAW,iBAF9B,cAElBa,EAFkB,yBAGjBA,GAHiB,sCAKlB,IAAIC,MAAJ,MALkB,yDAAH,qDASZG,EAAY,uCAAG,WAAOR,GAAP,eAAAC,EAAA,+EAESC,IAAMK,IAAIhB,EAAW,gBAAiB,CAAES,WAFjD,cAElBI,EAFkB,yBAGjBA,GAHiB,sCAKlB,IAAIC,MAAJ,MALkB,yDAAH,sDASZI,EAAU,uCAAG,4BAAAR,EAAA,+EAEWC,IAAMK,IAAIhB,EAAW,oBAFhC,cAEhBa,EAFgB,yBAGfA,GAHe,sCAKhB,IAAIC,MAAJ,MALgB,yDAAH,qDASVK,EAAgB,uCAAG,WAAOV,GAAP,eAAAC,EAAA,+EAEKC,IAAMC,KACrCZ,EAAW,oBACXS,GAJ0B,cAEtBI,EAFsB,yBAMrBA,GANqB,sCAQtB,IAAIC,MAAJ,MARsB,yDAAH,sDAYhBM,EAAS,uCAAG,WAAOX,GAAP,eAAAC,EAAA,+EAEYC,IAAMK,IAAIhB,EAAW,mBAAoB,CAAES,WAFvD,cAEfI,EAFe,yBAGdA,GAHc,sCAKf,IAAIC,MAAJ,MALe,yDAAH,sDAsDTO,EAAQ,uCAAG,WAAOZ,GAAP,eAAAC,EAAA,+EAEaC,IAAMK,IAAIhB,EAAW,iBAAkB,CACtES,WAHkB,cAEdI,EAFc,yBAKbA,GALa,sCAOd,IAAIC,MAAJ,MAPc,yDAAH,sDAsCRQ,EAAU,uCAAG,WAAOC,GAAP,iBAAAb,EAAA,sEAEhBc,EAAS,CACbC,QAAS,CACP,eAAgB,wBAJE,SAOWd,IAAMC,KACrCZ,EAAW,kBACXuB,EACAC,GAVoB,cAOhBX,EAPgB,yBAYfA,GAZe,sCAchB,IAAIC,MAAJ,MAdgB,yDAAH,sD,SC5DRY,EAhFGC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,UAAW,OACXC,SAAU,OACVC,QAASJ,EAAMK,QAAQ,IAGzBC,KAAM,CACJC,aAAcP,EAAMK,QAAQ,GAC5BG,MAAO,UACPC,eAAgB,QAGlBC,SAAU,CACRN,QAAS,GAGXO,gBAAiB,CACfJ,aAAc,EACdK,YAAa,EACbC,UAAW,SACXC,OAAQ,OACRC,gBAAiBC,IAAK,KAGxBC,UAAW,CACTb,QAASJ,EAAMK,QAAQ,IAGzBa,aAAc,CACZC,cAAe,UAGjBC,QAAS,CACPC,SAAU,SAGZC,WAAY,CACVnB,SAAU,kBACVW,OAAQ,kBACRO,SAAU,kBACVN,gBAAiBf,EAAMuB,QAAQP,KAAK,MAGtCQ,eAAgB,CACdV,OAAQ,kBACRX,SAAU,kBACVkB,SAAU,kBACVN,gBAAiBf,EAAMuB,QAAQP,KAAK,MAGtCS,aAAc,CACZtB,SAAU,kBACVkB,SAAU,mBAGZK,eAAgB,CACdC,SAAU,WACVC,MAAO5B,EAAMK,QAAQ,GACrBwB,IAAK7B,EAAMK,QAAQ,GACnBG,MAAOR,EAAMuB,QAAQP,KAAK,KAC1Bc,OAAQ,KAGVC,eAAgB,CACdhB,gBAAiBC,IAAK,KACtBF,OAAQ,OACRkB,UAAW,OACXC,SAAU,QAGZC,MAAO,CACLC,SAAU,IAGZC,YAAa,CACXC,OAAQrC,EAAMK,QAAQ,Q,iBC7EnB,SAASiC,KAAiB,IAAD,EACMC,mBAAS,CAC3CC,WAAOC,EACP3B,YAAQ2B,IAHoB,mBACvBC,EADuB,KACXC,EADW,KAmB9B,OAbAC,qBAAU,WACR,SAASC,IACPF,EAAc,CACZH,MAAOM,OAAOC,WACdjC,OAAQgC,OAAOE,cAMnB,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIH,EC0DMS,OA1Ef,SAA0BC,GACxB,IAAMC,EAAOf,KAEb,OACE,kBAAC,IAAD,CACEgB,KAAM,CACJ,CACEC,EAAGH,EAAMI,OAAOC,QAChBC,EAAGN,EAAMI,OAAOG,QAChBlF,KAAM,qBACNmF,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEtD,MAAO,QAEnB,CACE+C,EAAGH,EAAMI,OAAOC,QAChBC,EAAGN,EAAMI,OAAOO,UAChBtF,KAAM,kBACNmF,KAAM,UACNE,OAAQ,CAAEtD,MAAO,UAGrBwD,OAAQ,CACNC,MAAM,MAAD,OAAQb,EAAMI,OAAOS,MAArB,QACLzB,MAAoB,IAAba,EAAKb,MACZ0B,YAAY,EACZC,OAAQ,CACNC,YAAa,IACbC,QAAS,SACTC,KAAM,CACJC,OAAQ,aACRlB,KAAM,GACN7C,MAAO,SAGX6B,OAAQ,CACNmC,EAAG,GACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,MAAO,CACLZ,MACqB,aAAnBb,EAAM0B,SACF,wBACA,mBACNC,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLlB,MACqB,aAAnBb,EAAM0B,SACF,2BACA,sBACNC,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,IAGnBtF,OAAQ,CAAEwF,gBAAgB,MCXjBC,OA1Df,SAA+BjC,GAC7B,IAAMC,EAAOf,KAEb,OACE,kBAAC,IAAD,CACEgB,KAAM,CACJ,CACEC,EAAGH,EAAMK,QACThF,KAAM,WACNmF,KAAM,cAGVI,OAAQ,CACNC,MAAM,MAAD,OAAQb,EAAMa,MAAMqB,MAAM,KAAKC,KAAK,KAApC,QACL/C,MAAoB,IAAba,EAAKb,MACZ0B,YAAY,EACZC,OAAQ,CACNC,YAAa,IACbC,QAAS,SACTC,KAAM,CACJC,OAAQ,aACRlB,KAAM,GACN7C,MAAO,SAGX6B,OAAQ,CACNmC,EAAG,GACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,MAAO,CACLZ,MAAO,WACPc,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLlB,MAAO,aACPc,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,IAGnBtF,OAAQ,CAAEwF,gBAAgB,MCdjBI,OAvCf,SAAyBpC,GACvB,IAAMC,EAAOf,KAEb,OACE,kBAAC,IAAD,CACEgB,KAAM,CACJ,CACEI,EAAGN,EAAMK,QACTgC,UAAW,MACXhH,KAAM,GACNmF,KAAM,QAGVI,OAAQ,CACNC,MAAM,MAAD,OAAQb,EAAMa,MAAMqB,MAAM,KAAK,GAA/B,mBACL9C,MAAoB,IAAba,EAAKb,MACZH,OAAQ,CACNmC,EAAG,GACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPO,MAAO,CACLlB,MAAO,WACPc,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,IAGnBtF,OAAQ,CAAEwF,gBAAgB,MCjC1BM,GAAc,CAClBC,QAAS,GACTC,OAAQ,IAkLKC,OA/Kf,WAA+B,IAAD,EACJtD,mBAAS,WADL,mBACrBsB,EADqB,KACfiC,EADe,OAEAvD,mBAASmD,IAFT,mBAErBlC,EAFqB,KAEbuC,EAFa,KAW5B,OAPAnD,qBAAU,WACRzD,IACG6G,MAAK,SAAC/G,GACL8G,EAAU9G,EAAIqE,SAEf2C,OAAM,kBAAMF,EAAUL,SACxB,IAED,oCACE,kBAACQ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAChC,YAATxC,EACC,oCACE,kBAACqC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEjD,KAAM,CACJ,CACEC,EAAGC,EAAOmC,QAAQpC,EAClBG,EAAGF,EAAOmC,QAAQjC,EAClB8C,EAAGhD,EAAOmC,QAAQa,EAClB5C,KAAM,YAGVI,OAAQ,CACNxB,MAAO,IACP1B,OAAQ,IACRmD,MAAO,GACPY,MAAO,CACLZ,MAAO,kBACPwC,UAAU,EACVC,MAAO,EAAE,IAAK,KACdC,SAAU,SACVC,OAAQ,IACRC,MAAO,IAET1B,MAAO,CACLlB,MAAO,iBACPwC,UAAU,EACVC,MAAO,EAAE,GAAI,IACbC,SAAU,SACVC,OAAQ,GACRC,MAAO,QAKf,kBAACX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEjD,KAAM,CACJ,CACEwD,IAAKtD,EAAOmC,QAAQpC,EACpBwD,IAAKvD,EAAOmC,QAAQjC,EACpB8C,EAAGhD,EAAOmC,QAAQa,EAClB5C,KAAM,kBAGVI,OAAQ,CACNxB,MAAO,IACP1B,OAAQ,IACRmD,MAAO,GACP+C,OAAQ,CACNC,OAAQ,CAAEF,IAAK,GAAID,IAAK,IACxBI,MAAO,WACPC,KAAM,IAGVvH,OAAQ,CACNwH,kBACE,sGAMV,oCACE,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEjD,KAAM,CACJ,CACEC,EAAGC,EAAOoC,OAAOrC,EACjBG,EAAGF,EAAOoC,OAAOlC,EACjB8C,EAAGhD,EAAOoC,OAAOY,EACjB5C,KAAM,YAGVI,OAAQ,CACNxB,MAAO,IACP1B,OAAQ,IACRmD,MAAO,GACPY,MAAO,CACLZ,MAAO,kBACPwC,UAAU,EACVC,MAAO,EAAE,IAAK,KACdC,SAAU,SACVC,OAAQ,IACRC,MAAO,IAET1B,MAAO,CACLlB,MAAO,iBACPwC,UAAU,EACVC,MAAO,EAAE,GAAI,IACbC,SAAU,SACVC,OAAQ,GACRC,MAAO,QAKf,kBAACX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEjD,KAAM,CACJ,CACEwD,IAAKtD,EAAOoC,OAAOrC,EACnBwD,IAAKvD,EAAOoC,OAAOrC,EACnBiD,EAAGhD,EAAOoC,OAAOY,EACjB5C,KAAM,gBACNyD,UAAW,SAGfrD,OAAQ,CACNxB,MAAO,IACP1B,OAAQ,IACRmD,MAAO,GACP+C,OAAQ,CACNC,OAAQ,CAAEF,IAAK,GAAID,IAAK,IACxBI,MAAO,WACPC,KAAM,IAGVvH,OAAQ,CACNwH,kBACE,uGAOd,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACe,EAAA,EAAD,CACEC,YAAY,eACZC,OAAQ,EACRC,aAAc,EACdrH,QAAS,EACT8G,MAAO,CAAEpF,OAAQ,MAEjB,kBAAC4F,EAAA,EAAD,CACEjJ,KAAK,UACLkJ,QAAQ,YACRtE,KAAK,QACL7C,MAAM,UACNoH,QAAS,SAACC,GAAD,OAAO/B,EAAQ+B,EAAEC,cAAcrJ,OACxCyI,MAAO,CAAE1E,MAAO,MAAOuF,YAAa,OAEnC,oBAEH,kBAACL,EAAA,EAAD,CACEjJ,KAAK,SACLkJ,QAAQ,YACRtE,KAAK,QACL7C,MAAM,UACNoH,QAAS,SAACC,GAAD,OAAO/B,EAAQ+B,EAAEC,cAAcrJ,OACxCyI,MAAO,CAAE1E,MAAO,QAEf,oB,6GCaEwF,OA3Lf,SAAwB5E,GAAa,IAAD,EACJb,mBAASa,EAAM6E,SADX,mBAC3BA,EAD2B,KAClBC,EADkB,OAEN3F,mBAAS,IAFH,mBAE3B3C,EAF2B,KAEnBuI,EAFmB,KAG5B9E,EAAYf,KACZ8F,EAAYhF,EAAMgF,UAClBC,EAAejF,EAAMiF,aAE3BzF,qBAAU,WACRsF,EAAW9E,EAAM6E,WAChB,CAAC7E,EAAM6E,UAEV,IAAMK,EAAS,SAACC,EAAkBC,GAChC,OAAOD,EAAKE,KAAI,SAAUC,GACxB,OAAOA,EAAIF,OA4If,OAxIA5F,qBAAU,WACR,IAAI+F,EAAkB,GAChBC,EAAcC,SAASzF,EAAM0F,KAC7BC,EAAgBX,EAAUY,QAC9B,SAACN,GAAD,OAAcA,EAAIE,cAAgBA,KAE9BK,EAAmBZ,EAAaW,QACpC,SAACN,GAAD,OAAcA,EAAIE,cAAgBA,MAEP,IAAzBX,EAAQiB,eAAkD,IAAzBjB,EAAQkB,aAC3CR,EAAa,CACX,CACEpF,EAAG+E,EAAOS,EAAe,YACzBrF,EAAG4E,EAAOS,EAAe,SACzBtK,KAAM,aACNoF,KAAM,UACND,KAAM,UACNpD,MAAO,qBAET,CACE+C,EAAG+E,EAAOW,EAAkB,YAC5BvF,EAAG4E,EAAOW,EAAkB,SAC5BxK,KAAM,cACNoF,KAAM,QACNuF,KAAM,CACJ5I,MAAO,qBAGX,CACE+C,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAKa,IAAzB4E,EAAQiB,eACiB,IAAzBjB,EAAQkB,aAERR,EAAa,CACX,CACEpF,EAAG+E,EAAOS,EAAe,YACzBrF,EAAG4E,EAAOS,EAAe,SACzBtK,KAAM,aACNoF,KAAM,UACND,KAAM,UACNpD,MAAO,qBAET,CACE+C,EAAG,GACHG,EAAG,GACHG,KAAM,UACND,KAAM,WAER,CACEL,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAKa,IAAzB4E,EAAQiB,eACiB,IAAzBjB,EAAQkB,aAERR,EAAa,CACX,CACEpF,EAAG+E,EAAOW,EAAkB,YAC5BvF,EAAG4E,EAAOW,EAAkB,SAC5BxK,KAAM,cACNoF,KAAM,QACNuF,KAAM,CACJ5I,MAAO,qBAGX,CACE+C,EAAG,GACHG,EAAG,GACHG,KAAM,UACND,KAAM,WAER,CACEL,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAKa,IAAzB4E,EAAQiB,eACiB,IAAzBjB,EAAQkB,eAERR,EAAa,CACX,CACEpF,EAAG,GACHG,EAAG,GACHG,KAAM,SAER,CACEN,EAAG,GACHG,EAAG,GACHG,KAAM,UACND,KAAM,WAER,CACEL,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAMd8E,EAAUQ,KACT,CAACV,EAASG,EAAWC,EAAcjF,EAAM0F,IAAK1F,EAAMiG,MAGrD,kBAAC,IAAD,CACE/F,KAAM1D,EACNoE,OAAQ,CACNsF,UAAU,EACVpF,YAAY,EACZqF,UAAW,UACX/G,MAAc,IAAPa,EACPvC,OAAe,IAAPuC,EACRhB,OAAQ,CACNmC,EAAG,GACHE,EAAG,GACHD,EAAG,GACHE,EAAG,IAELE,MAAO,CACLZ,MAAM,8BAAD,OAAgCb,EAAM0F,IAAtC,QACLlF,KAAM,SACN6C,UAAU,GAEZtB,MAAO,CACLlB,MAAOb,EAAMoG,WACb5F,KAAM,SACN6C,UAAU,IAGdgD,QAAS,SAAC5B,GAAD,OAAaA,EAAE6B,MAAMC,OAAOzC,MAAM0C,OAAS,WACpDC,UAAW,SAAChC,GAAD,OAAaA,EAAE6B,MAAMC,OAAOzC,MAAM0C,OAAS,aACtDhC,QAAS,SAACC,GAAD,OAAOzE,EAAMwE,QAAQC,IAC9BiC,cAAe,kBAAM1G,EAAMwE,cC6BlBmC,OAnNf,SAA0B3G,GAAa,IAAD,EACNb,mBAASa,EAAM6E,SADT,mBAC7BA,EAD6B,KACpBC,EADoB,OAER3F,mBAAS,IAFD,mBAE7B3C,EAF6B,KAErBuI,EAFqB,KAG9B9E,EAAYf,KACZ8F,EAAYhF,EAAMgF,UAClBC,EAAejF,EAAMiF,aAE3BzF,qBAAU,WACRsF,EAAW9E,EAAM6E,WAChB,CAAC7E,EAAM6E,UAEV,IAAMK,EAAS,SAACC,EAAkBC,GAChC,OAAOD,EAAKE,KAAI,SAAUC,GACxB,OAAOA,EAAIF,OAoIf,OAhIA5F,qBAAU,WACR,IAAI+F,EAAkB,IACO,IAAzBV,EAAQiB,eAAkD,IAAzBjB,EAAQkB,aAC3CR,EAAa,CACX,CACEpF,EAAG+E,EAAOF,EAAW,YACrB1E,EAAG4E,EAAOF,EAAW,eACrB5B,EAAG8B,EAAOF,EAAW,SACrB3J,KAAM,aACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,oBACP6C,KAAM,IAGV,CACEE,EAAG+E,EAAOD,EAAc,YACxB3E,EAAG4E,EAAOD,EAAc,eACxB7B,EAAG8B,EAAOD,EAAc,SACxB5J,KAAM,gBACNuL,QAAS,GACTpG,KAAM,SACNpD,MAAO,oBAET,CACE+C,EAAG,CAACH,EAAM6G,KACVvG,EAAG,CAACN,EAAM0F,KACVtC,EAAG,CAACpD,EAAM8G,OACVzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAIsB,IAAzB4E,EAAQiB,eAAmD,IAAzBjB,EAAQkB,aACnDR,EAAa,CACX,CACEpF,EAAG+E,EAAOF,EAAW,YACrB1E,EAAG4E,EAAOF,EAAW,eACrB5B,EAAG8B,EAAOF,EAAW,SACrB3J,KAAM,aACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,oBACP6C,KAAM,IAGV,CACEE,EAAG,CAACH,EAAM6G,KACVvG,EAAG,CAACN,EAAM0F,KACVtC,EAAG,CAACpD,EAAM8G,OACVzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAIsB,IAAzB4E,EAAQiB,eAAkD,IAAzBjB,EAAQkB,aAClDR,EAAa,CACX,CACEpF,EAAG+E,EAAOD,EAAc,YACxB3E,EAAG4E,EAAOD,EAAc,eACxB7B,EAAG8B,EAAOD,EAAc,SACxB5J,KAAM,gBACNuL,QAAS,GACTpG,KAAM,SACNpD,MAAO,oBAET,CACE+C,EAAG,CAACH,EAAM6G,KACVvG,EAAG,CAACN,EAAM0F,KACVtC,EAAG,CAACpD,EAAM8G,OACVzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAIsB,IAAzB4E,EAAQiB,eAAmD,IAAzBjB,EAAQkB,eACnDR,EAAa,CACX,CACEpF,EAAG,GACHG,EAAG,GACH8C,EAAG,GACH5C,KAAM,UAER,CACEL,EAAG,GACHG,EAAG,GACH8C,EAAG,GACH3C,KAAM,UACND,KAAM,aAER,CACEL,EAAG,CAAC4G,WAAW/G,EAAM6G,MACrBvG,EAAG,CAACyG,WAAW/G,EAAM0F,MACrBtC,EAAG,CAAC2D,WAAW/G,EAAM8G,QACrBzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAMd8E,EAAUQ,KACT,CAACV,EAASG,EAAWC,EAAcjF,EAAMgH,MAAOhH,EAAM6G,IAAK7G,EAAM0F,IAAK1F,EAAM8G,QAG7E,kBAAC,IAAD,CACE5G,KAAM1D,EACNoE,OAAQ,CACNsF,UAAU,EACV9G,MAAc,IAAPa,EACPvC,OAAe,IAAPuC,EACRhB,OAAQ,CACNmC,EAAG,EACHE,EAAG,EACHD,EAAG,EACHE,EAAG,GAEL0F,MAAO,CACLC,YAAa,CACX/G,EAAG,GACHG,EAAG,GACH8C,EAAG,IAEL+D,OAAQ,CACNtD,OAAQ,CACN1D,EAAG,EACHG,EAAG,EACH8C,EAAG,GAELgE,IAAK,CACHjH,EAAG,GACHG,EAAG,GACH8C,EAAG,IAELiE,GAAI,CACFlH,EAAG,EACHG,EAAG,EACH8C,EAAG,IAGP3B,MAAO,CACLZ,MAAO,gBACPL,KAAM,SACN8C,MAAO,CAACgE,KAAKC,IAAL,MAAAD,KAAI,aAAQpC,EAAOD,EAAc,cAAc,GACvD5B,UAAU,GAEZtB,MAAO,CACLlB,MAAO,oBACPL,KAAM,SACN8C,MAAO,CAAC,GAAI,GACZD,UAAU,GAEZmE,MAAO,CACL3G,MAAOb,EAAMyH,WACbjH,KAAM,SACN8C,MAAO,CACLgE,KAAKI,IAAL,MAAAJ,KAAI,aAAQpC,EAAOD,EAAc,WACjCqC,KAAKC,IAAL,MAAAD,KAAI,aAAQpC,EAAOD,EAAc,YAEnC5B,UAAU,IAGdvC,YAAY,GAEd0D,QAAS,SAACC,GAAD,OAAOzE,EAAMwE,QAAQC,IAC9BiC,cAAe,kBAAM1G,EAAMwE,c,+BCzLlBmD,OAjBf,SAAoB3H,GAClB,OACE,kBAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACY,MAAO,CAAE1E,MAAO,OACzB,kBAACwI,GAAA,EAAD,CAAYpD,QAAS,kBAAMxE,EAAM6H,WAAW7H,EAAM7E,MAChD,kBAAC,KAAD,QAGJ,kBAAC2H,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAE1E,MAAO,QACjC,kBAAC0I,GAAA,EAAD,U,+BCSKC,OAtBf,SAAmB/H,GACjB,OACE,kBAACgI,GAAA,EAAD,CACEC,SAAUjI,EAAMiI,SAChBC,aAAW,EACXC,KAAMC,QAAQpI,EAAMiI,UACpBI,QAAS,kBAAMrI,EAAMsI,WAAW,QAE/BC,EAAA,kBAA0ClD,KAAI,SAACmD,GAAD,OAC7C,kBAACC,EAAA,EAAD,CACEtN,GAAIqN,EAAGrN,GACPiK,IAAKoD,EAAGrN,GACRqJ,QAAS,kBAAMxE,EAAM6H,WAAWW,EAAGrN,KACnC2I,MAAO,CAAEnG,gBAAiBqC,EAAM0I,SAASC,SAASH,EAAGrN,IAAMyC,IAAK,KAAO,KAEtE4K,EAAGnN,WCQCuN,OAvBf,SAAmB5I,GACjB,OACE,kBAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACY,MAAO,CAAE1E,MAAO,OACzB,kBAACwI,GAAA,EAAD,CAAYpD,QAAS,SAACC,GAAD,OAAOzE,EAAMsI,WAAW7D,EAAEC,iBAC7C,kBAAC,KAAD,OAEF,kBAAC,GAAD,CACEgE,SAAU1I,EAAM0I,SAChBT,SAAUjI,EAAMiI,SAChBK,WAAY,SAACxB,GAAD,OAAgB9G,EAAMsI,WAAWxB,IAC7Ce,WAAY,SAACf,GAAD,OAAgB9G,EAAM6H,WAAWf,OAGjD,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAE1E,MAAO,QACjC,kBAAC0I,GAAA,EAAD,U,kDCNV,SAASe,GAAWxN,EAAcyL,GAChC,MAAO,CAAEzL,OAAMyL,SAGjB,IAAM3B,GAAO,CACX0D,GAAW,gBAAiB,MAC5BA,GAAW,oBAAqB,MAChCA,GAAW,eAAgB,MAC3BA,GAAW,oBAAqB,MAChCA,GAAW,gBAAiB,MAC5BA,GAAW,2BAA4B,MACvCA,GAAW,yBAA0B,OA0CxBC,OAvCf,SAA8B9I,GAC5B,OACE,oCACgB,IAAbA,EAAM7E,IACL,kBAAC2H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAEiF,UAAW,WACrC,kBAACC,EAAA,EAAD,CAAYzE,QAAQ,MAApB,gBAEF,kBAACzB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC8F,GAAA,EAAD,CAAOC,aAAW,eAAejJ,KAAK,SACpC,kBAACkJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sBACA,kBAACA,GAAA,EAAD,gBAGJ,kBAACC,GAAA,EAAD,KACGnE,GAAKE,KAAI,SAACC,GAAD,OACR,kBAAC8D,GAAA,EAAD,CAAUhE,IAAKE,EAAIjK,MACjB,kBAACgO,GAAA,EAAD,CAAWE,UAAU,KAAKC,MAAM,OAC7BlE,EAAIjK,MAEP,kBAACgO,GAAA,EAAD,KAAY/D,EAAIwB,eAQhB,IAAb9G,EAAM7E,IACL,kBAAC,GAAD,CAAkBiF,OAAQJ,EAAME,KAAMwB,SAAU1B,EAAM0B,WAE1C,IAAb1B,EAAM7E,IAAY,kBAAC,GAA0B6E,EAAME,MACtC,IAAbF,EAAM7E,IAAY,kBAAC,GAAoB6E,EAAME,QCWrCuJ,OAlEf,SAA2BzJ,GAAa,IAAD,EACLb,mBAAS,CAAC,EAAG,EAAG,IADX,mBAC9BuJ,EAD8B,KACpBgB,EADoB,OAELvK,mBAAS,MAFJ,mBAE9B8I,EAF8B,KAEpB0B,EAFoB,KAI/BC,EAAiB,SAACzO,EAASqF,GAC1BkI,EAASC,SAASxN,IAAgB,QAATqF,EAEV,WAATA,GACTkJ,EAAYhB,EAAS9C,QAAO,SAAC1C,GAAD,OAAeA,IAAS/H,MAFpDuO,GAAY,SAACG,GAAD,6BAAwBA,GAAxB,CAAmC1O,OAIjDwO,EAAY,OAGd,OACE,oCACuB,IAApBjB,EAASoB,QACR,kBAAC,GAAD,CACEtJ,KAAM,EACNkI,SAAUA,EACVT,SAAUA,EACVK,WAAY,SAACxB,GAAD,OAAgB6C,EAAY7C,IACxCe,WAAY,SAACf,GAAD,OAAgB8C,EAAe9C,EAAO,UAGrD4B,EAASrD,KAAI,SAACnC,EAAW6G,GACxB,IAAIC,EAAOzB,EAAqBvI,EAAMiK,SAAS/G,GAAM9H,QACrD,OACE,kBAAC,IAAM8O,SAAP,CAAgB9E,IAAKlC,GACnB,kBAAC,GAAD,CACE/H,GAAI+H,EACJ1C,KAAM,EACNkI,SAAUA,EACVT,SAAUA,EACVK,WAAY,SAACxB,GAAD,OAAgB6C,EAAY7C,IACxCe,WAAY,SAACf,GAAD,OAAgB8C,EAAe9C,EAAO,aAEpD,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACgH,EAAA,EAAD,CAAMrG,MAAO,CAAEsG,WAAY,SAAUzF,YAAa,WAChD,kBAAC0F,EAAA,EAAD,KACGrK,EAAMsK,OAAON,IACZO,OAAOC,KAAKxK,EAAMsK,OAAON,IAAOF,OAAS,GACvC,kBAAC,GAAD,CACE3O,GAAI+H,EACJhD,KAAMF,EAAMsK,OAAON,GACnBtI,SAAU1B,EAAM0B,cAM3BqI,IAAQrB,EAASoB,OAAS,GACzB,kBAAC,GAAD,CACEtJ,KAAM,EACNkI,SAAUA,EACVT,SAAUA,EACVK,WAAY,SAACxB,GAAD,OAAgB6C,EAAY7C,IACxCe,WAAY,SAACf,GAAD,OAAgB8C,EAAe9C,EAAO,gB,mFC+InD2D,OAzLf,SAAsBzK,GAAa,IAAD,EACJb,oBAAS,GADL,mBACzBuL,EADyB,KACjBC,EADiB,KAE1BC,EAAUlO,IAEhB,OACE,kBAACoG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CACEO,UAAU,IACVzF,MAAO,CACLiF,UAAW,MACXxK,SAAU,WACVsM,KAAM,GACNpM,IAAK,KAGP,kBAACmJ,GAAA,EAAD,CACE3H,KAAK,QACLuE,QAAS,kBAAMmG,GAAWD,IAC1BI,UAAU,YACVhH,MAAO,CAAE/E,SAAU,KAJrB,gBAOG2L,EAAS,kBAAC,KAAD,MAAqB,kBAAC,KAAD,SAIrC,kBAAC5H,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACdnD,EAAM+K,QACL,kBAACjI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACyE,GAAA,EAAD,CACE9D,MAAO,CACL9G,QAAS,EACTuB,SAAU,WACVC,MAAO,GACPC,IAAK,IAEP+F,QAAS,kBAAMxE,EAAMgL,YAErB,kBAAC,KAAD,OAEF,kBAACpD,GAAA,EAAD,CACE9D,MAAO,CACL9G,QAAS,EACTuB,SAAU,WACVC,MAAO,GACPC,IAAK,KAGP,kBAAC,WAAD,CACEyB,KAAMF,EAAMI,OAAO6K,WACnBC,SAAQ,eAAUC,KAAKC,MAAf,QACRN,UAAU,kBACVvE,OAAO,UAEP,kBAACyC,EAAA,EAAD,CAAYO,UAAU,IAAIhF,QAAQ,SAC/B,UAMVmG,GACC,kBAAC5H,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACe,EAAA,EAAD,CACEC,YAAY,eACZC,OAAQ,EACRC,aAAc,EACdrH,QAAS,GAET,kBAAC8F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACL,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,aACRC,WAAW,SACXhG,QAAS,GAET,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACmB,EAAA,EAAD,CACEnJ,GAAI6E,EAAMQ,KACVnF,KAAK,UACLkJ,QAAQ,WACRtE,KAAK,QACL6D,MAAO,CACLnG,gBACuB,YAArBqC,EAAMqL,WACFzN,IAAK,KACL,WAER4G,QAAS,SAACC,GAAD,OAAOzE,EAAMsL,aAAa7G,IACnC8G,WAAS,GAER,OAGL,kBAACzI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACmB,EAAA,EAAD,CACEjJ,KAAK,UACLkJ,QAAQ,WACRtE,KAAK,QACL6D,MAAO,CACLnG,gBACuB,YAArBqC,EAAMqL,WACFzN,IAAK,KACL,WAER4G,QAAS,SAACC,GAAD,OAAOzE,EAAMsL,aAAa7G,IACnC8G,WAAS,GAER,OAGL,kBAACzI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,MAGnB,kBAAC2E,GAAA,EAAD,CAAS9G,YAAY,WAAWwK,UAAQ,IACxC,kBAAC1I,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGW,MAAO,CAAEa,YAAa,KACtC,kBAAC8G,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,CAAYvQ,GAAG,qCAAf,eACA,kBAACwQ,EAAA,EAAD,CACEC,QAAQ,oBACRzQ,GAAG,oBACH2L,MAAO9G,EAAM0F,IACbmG,SAAU,SAACpH,GAAD,OAAOzE,EAAM8L,MAAMrH,EAAE8B,OAAOO,QACtChI,MAAM,cACNiN,aAAa,GACbC,SAA+B,YAArBhM,EAAMqL,YAEhB,kBAAC5C,EAAA,EAAD,CAAU3B,MAAM,GAAGkF,UAAQ,GACzB,qCAEDhM,EAAMiM,KAAK5G,KAAI,SAACnC,GAAD,OACd,kBAACuF,EAAA,EAAD,CAAUrD,IAAG,sBAAiBlC,GAAQ4D,MAAO5D,GAC1CA,SAMX,kBAAC4E,GAAA,EAAD,CAAS9G,YAAY,WAAWwK,UAAQ,IACxC,kBAAC1I,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC+I,GAAA,EAAD,CACErL,MACE,kBAACmI,EAAA,EAAD,CACEmD,cAAY,EACZ5C,UAAU,IACVhF,QAAQ,QACR6H,wBAAyB,CACvBC,OAAQ,mBAIdC,UAAU,YACV1B,QAAS,CAAE5M,QAAS4M,EAAQ5M,UAE5B,8BACE,kBAACsG,EAAA,EAAD,CACEnJ,GAAI6E,EAAMQ,KACVnF,KAAK,QACLkJ,QAAQ,WACRtE,KAAK,QACL+L,SAA+B,YAArBhM,EAAMqL,WAChB7G,QAAS,kBAAMxE,EAAMuM,aACrBhB,WAAS,GAER,iBC5KjBiB,GAAoB,CACxB1G,cAAc,EACdC,cAAc,GAGV0G,GAAe,CAAC,CAAEtR,GAAI,MAAQ,CAAEA,GAAI,OA+S3BuR,OA7Sf,SAAkC1M,GAAa,IAAD,EACRb,mBAAS,WADD,mBACrCkM,EADqC,KACzBsB,EADyB,OAEdxN,mBAAS,qBAFK,mBAErC8K,EAFqC,KAE5B2C,EAF4B,OAGdzN,mBAAS,IAHK,mBAGrC0N,EAHqC,KAG5BC,EAH4B,OAIZ3N,mBAAS,IAJG,mBAIrC4N,EAJqC,KAI3BC,EAJ2B,OAKtB7N,mBAAS,CAAEgB,EAAGH,EAAM6G,IAAKvG,EAAGN,EAAM8G,QALZ,mBAKrCb,EALqC,KAKhCgH,EALgC,OAMhB9N,mBAASsN,IANO,mBAMrCS,EANqC,KAM7BC,EAN6B,OAOdhO,mBAASqN,IAPK,mBAOrC3H,EAPqC,KAO5BC,EAP4B,OAQhB3F,mBAAS,IARO,mBAQrCmL,EARqC,KAQ7B8C,EAR6B,OASlBjO,oBAAS,GATS,mBASrC6H,EATqC,KAS9BqG,EAT8B,QAUZlO,oBAAS,GAVG,qBAUrCuJ,GAVqC,MAU3BgB,GAV2B,MAWtCkB,GAAUlO,IACVsI,GAAYhF,EAAME,KAAK+K,WACvBhG,GAA2B,GAC3BwC,GAAazH,EAAME,KAAKpB,MAE9BU,qBAAU,WACJ0N,EAAOpD,OAAS,GAClBtO,EAAS,CACPkG,SAAU1B,EAAM0B,SAChBwL,OAAQA,EACRI,QAAStN,EAAMsN,UAEd1K,MAAK,SAAC/G,GACL0O,OAAOC,KAAK3O,EAAIqE,MAAMqN,SAAQ,SAAC/E,GAC7B,IAAIgF,EAAgB3R,EAAIqE,KAAKsI,GAAT,KAChBiF,EAAmB,GACnBC,EAAwB,GACxBC,EAAmB,GAGT,SAAVH,GACF3R,EAAIqE,KAAKsI,GAAT,KAAqB+E,SAAQ,SAACrK,EAAkB6G,GAC9C0D,EAAKG,KAAK7D,EAAM,GAChB2D,EAAUE,KAAK1K,EAAK,IACpByK,EAAKC,KAAK1K,EAAK,OAGjBkK,GAAU,SAACvD,GAAD,mBAAC,eACNA,GADK,kBAEPrB,EAAK,CACJnI,QAASoN,EACTlN,QAASmN,EACT/M,UAAWgN,EACXnN,KAAMgN,EACN3M,MAAOhF,EAAIqE,KAAKsI,GAAT,aAGQ,cAAVgF,GACTJ,GAAU,SAACvD,GAAD,mBAAC,eACNA,GADK,kBAEPrB,EAAK,CACJnI,QAASxE,EAAIqE,KAAKsI,GAAT,KACThI,KAAMgN,EACN3M,MAAOhF,EAAIqE,KAAKsI,GAAT,kBAMhB3F,OAAM,WACLuK,EAAU,SAEf,CAACpN,EAAM0B,SAAU1B,EAAMsN,QAASJ,IAEnC1N,qBAAU,WACRtD,IACG0G,MAAK,SAAC/G,GAAD,OAAciR,EAAWjR,EAAIqE,SAClC2C,OAAM,SAACgL,GAAD,OAAcf,EAAW,SACjC,IAEHtN,qBAAU,WACR,GAA0B,KAAtBQ,EAAMwF,YAAoB,CAC5B,IAAM/J,EAAS,CACbqS,cAAe7H,EAAI9F,EACnB4N,iBAAkB/N,EAAMwF,YACxBwI,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,SAGjBlR,EAAUX,GACPmH,MAAK,SAAC/G,GAAD,OAAcsR,EAAUtR,EAAIqE,SACjC2C,OAAM,SAACgL,GAAD,OAAcV,EAAU,UAElC,CAACnN,EAAMwF,YAAaS,EAAKjG,EAAMgO,OAAQhO,EAAMsN,UAEhD9N,qBAAU,WACRyN,EAAO,CACL9M,EAAGH,EAAME,KAAK+K,WAAW,GAAGgD,SAC5B3N,EAAGN,EAAME,KAAK+K,WAAW,GAAGnE,UAE7B,CAAC9G,EAAME,OAEVV,qBAAU,WACa,KAAjBQ,EAAMgO,QACR7R,EAAiB,CAAE6R,OAAQhO,EAAMgO,SAC9BpL,MAAK,SAAC/G,GAAD,OAAcmR,EAAYnR,EAAIqE,SACnC2C,OAAM,SAACgL,GAAD,OAAcb,EAAY,SAEpC,CAAChN,EAAMgO,SAEV,IAaME,GAAc,SAAC5H,GACnB,GAAIA,EAAO,CACT,IAAM7K,EAAS,CACbqS,cAAexH,EAAM6H,OAAO,GAAGhO,EAC/B4N,iBAAkB/N,EAAM0F,IACxBsI,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,SAGjBL,EAAO,CAAE9M,EAAGmG,EAAM6H,OAAO,GAAGhO,EAAGG,EAAGgG,EAAM6H,OAAO,GAAG7N,IAClDlE,EAAUX,GACPmH,MAAK,SAAC/G,GAAD,OAAcsR,EAAUtR,EAAIqE,SACjC2C,OAAM,SAACgL,GAAD,OAAcV,EAAU,OAEnCzD,IAAY,IAGd,OACE,kBAAC5G,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,aACRC,WAAW,SACXhG,QAAS,EACT6G,MAAO,CACLnG,gBAAiBC,IAAK,KACtBwQ,UAAW,SAGb,kBAACtL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGW,MAAO,CAAEsG,WAAY,KACrC,kBAACiE,GAAA,EAAD,CAAmBvH,MAAOmD,EAAS4B,SAvClB,SAACvF,GAC1BA,EAAMgI,iBADmC,MAEpBhI,EAAM5B,cAAnBvJ,EAFiC,EAEjCA,GAAIE,EAF6B,EAE7BA,KAEZuR,EAAWzR,GACX6E,EAAMuO,WAAWlT,KAmCP,kBAACmT,GAAA,EAAD,CACErT,GAAG,oBACHE,KAAK,WACLyL,MAAM,oBACN7G,KAAK,SAJP,mBAQA,kBAACuO,GAAA,EAAD,CACErT,GAAG,wBACHE,KAAK,MACLyL,MAAM,wBACN7G,KAAK,SAJP,qBAUJ,kBAAC6C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGW,MAAO,CAAEsG,WAAY,SACrC,kBAACqB,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,GAAQ5L,YACnBuM,WAAS,EACTS,SAAyB,YAAfX,GAEV,kBAACK,GAAA,EAAD,CAAYvQ,GAAG,qCAAf,UACA,kBAACwQ,EAAA,EAAD,CACEC,QAAQ,oCACRzQ,GAAG,8BACH2L,MAAO9G,EAAMgO,OACbnC,SAAU,SAACpH,GAAD,OAAOzE,EAAMyO,SAAShK,EAAE8B,OAAOO,QACzCiF,aAAa,GACbjN,MAAM,UAEN,kBAAC2J,EAAA,EAAD,CAAU3B,MAAM,GAAGkF,UAAQ,GACzB,qCAEDa,EAAQxH,KAAI,SAACnC,GAAD,OACX,kBAACuF,EAAA,EAAD,CAAUrD,IAAKlC,EAAKwL,YAAa5H,MAAO5D,EAAKyL,WAC1CzL,EAAKwL,mBAMhB,kBAAC5L,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,GAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,CAAYvQ,GAAG,qCAAf,WACA,kBAACwQ,EAAA,EAAD,CACEC,QAAQ,oCACRzQ,GAAG,8BACH2L,MAAO9G,EAAMsN,QACbzB,SAAU,SAACpH,GAAD,OAAOzE,EAAM4O,UAAUnK,EAAE8B,OAAOO,QAC1CiF,aAAa,GACbjN,MAAM,WAEN,kBAAC2J,EAAA,EAAD,CAAU3B,MAAM,GAAGkF,UAAQ,GACzB,qCAEDe,EAAS1H,KAAI,SAACnC,GAAD,OACZ,kBAACuF,EAAA,EAAD,CAAUrD,IAAG,kBAAalC,EAAK6J,UAAYjG,MAAO5D,EAAK6J,UACpD7J,EAAK6J,kBAQpB,kBAACjK,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAEiF,UAAW,SAAUxK,SAAU,aACzD,kBAACyK,EAAA,EAAD,CAAYzE,QAAQ,MACL,sBAAZ0F,EAAA,+EAIH,kBAAC,GAAD,CACE7J,OAAQJ,EAAME,KACd2E,QAASA,EACTwG,WAAYA,EACZ3F,IAAK1F,EAAMwF,YACXyG,KAAMjM,EAAMiM,KACZlB,QAAQ,EACRe,MAAO,SAAChF,GAAD,OAAgB9G,EAAM8L,MAAMhF,IACnC+H,UAtIY,SAACvI,GAAgB,IAAD,EACRA,EAAM5B,cAAxBrJ,EAD0B,EAC1BA,KAAMwJ,EADoB,EACpBA,QACdC,GAAW,SAAC+E,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCxO,EAAOwJ,QAqI7C0H,UAAW,kBAAMc,GAAUrG,IAC3BsE,aAAc,SAAC7G,GAAD,OAAYkI,EAAclI,EAAEC,cAAcrJ,UAW5D,kBAACyH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACgH,EAAA,EAAD,CAAMrG,MAAO,CAAEsG,WAAY,SAAUzF,YAAa,WAChD,kBAAC0F,EAAA,EAAD,KACkB,YAAfgB,EACC,kBAACvI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEjD,KAAMF,EAAMI,OACZ0O,SAAU9O,EAAM8O,SAChBC,YAAa/O,EAAM+O,YACnBlI,IAAK7G,EAAM6G,IACXnB,IAA2B,KAAtB1F,EAAMwF,YAAqBxF,EAAMwF,YAAcxF,EAAM0F,IAC1DoB,MAAO9G,EAAM8G,MACbE,MAAOA,EACPgI,UAAU,EACVC,OAAO,EACPjK,UAAWhF,EAAMI,OAAO6K,WACxBhG,aAAcA,GACdwC,WAAYA,GACZ5C,QAASA,EACTL,QAAS0J,MAIb,kBAACpL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEjD,KAAMF,EAAME,KACZ4O,SAAU9O,EAAM8O,SAChBC,YAAa/O,EAAM+O,YACnBlI,IAAK7G,EAAM6G,IACXnB,IAA2B,KAAtB1F,EAAMwF,YAAqBxF,EAAMwF,YAAcxF,EAAM0F,IAC1DoB,MAAO9G,EAAM8G,MACbkI,UAAU,EACVC,OAAO,EACPjK,UAAWA,GACXC,aAAcA,GACdmB,WAAYqB,GACZxB,IAAKA,EACLpB,QAASA,EACTL,QAAS0J,SAOpBxF,IAAY,qCACZ6B,OAAOC,KAAKF,GAAQR,OAAS,GAC5B,kBAAC,GAAD,CAAmBQ,OAAQA,EAAQL,QAASA,EAASvI,SAAU1B,EAAM0B,aCjTvEnG,GACM,IADNA,GAKS,EALTA,GAWG,IAGH2T,GAAaC,IAAMC,YAAW,SAClCpP,EACAqP,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASrP,OA0IhCwP,OAvIf,SAAmBxP,GAAa,IAAD,EACDb,mBAAS,IADR,mBACtBiB,EADsB,KACduC,EADc,OAEOxD,mBAAS,IAFhB,mBAEtBsQ,EAFsB,KAEVC,EAFU,OAGDvQ,mBAAS,GAHR,mBAGtB6O,EAHsB,KAGd2B,EAHc,OAICxQ,mBAAS,GAJV,mBAItBmO,EAJsB,KAIbsC,EAJa,OAKSzQ,mBAAS,IALlB,mBAKtBqG,EALsB,KAKTqK,EALS,OAML1Q,mBAAS,IANJ,mBAMtB8M,EANsB,KAMhB6D,EANgB,OAOG3Q,mBAAS,YAPZ,mBAOtBuC,EAPsB,KAOZqO,EAPY,OAQK5Q,oBAAS,GARd,mBAQtB6Q,EARsB,KAQXC,EARW,OASS9Q,mBAAS,GATlB,mBAStB4P,EATsB,KASTmB,EATS,OAUL/Q,mBAAS,IAVJ,mBAUtBgR,EAVsB,KAUhBC,EAVgB,KAYvBC,EADW,mBACOnO,MAAM,KAAK,GAE7B0I,EAAUlO,IA+DhB,OA7DA8C,qBAAU,WACR4Q,EAAQ,IACRnU,EAAa,CACXuE,KANgB,UAOhBwN,OAAQA,EACRV,QAASA,EACT5L,aAECkB,MAAK,SAAC/G,GAUL,GATA8G,EAAU9G,EAAIqE,KAAKA,MACnBwP,EAAc7T,EAAIqE,KAAKA,MACvBgQ,EAAerU,EAAIqE,KAAK6O,aACxBqB,EAAQvU,EAAIqE,KAAKiQ,MAMb5F,OAAOC,KAAK3O,EAAIqE,KAAKA,MAAMyI,SAAS,cAAe,CACrD,IAAI2H,EAAMzU,EAAIqE,KAAKA,KAAK+K,WAAW5F,KACjC,SAACnC,GAAD,OAAeA,EAAI,eAEjBqN,EAAuB,aAAO,IAAIC,IAAIF,IAC1CR,EAAQS,EAAYE,YAWvB7N,MAAK,WACJqN,GAAa,QAEhB,CAACjC,EAAQV,EAAS5L,IAErBlC,qBAAU,WACR,GAAI+K,OAAOC,KAAKiF,GAAY9G,SAAS,cAAe,CAClD,IAAIzI,EAAOuP,EAAWxE,WAAWrF,QAC/B,SAAC1C,GAAD,OAAeA,EAAKsC,cAAgBA,KAEtC7C,GAAU,SAACkH,GAAD,mBAAC,eAAyBA,GAA1B,IAAqCoB,WAAY/K,UAE5D,CAACsF,EAAaiK,IAgBf,kBAACiB,GAAA,EAAD,CACEvI,KAAMnI,EAAM0K,OACZiG,oBAAqBzB,GACrB7G,QAAS,kBAAMrI,EAAMqI,WACrBuC,QAAS,CAAEgG,MAAOhG,EAAQ1M,aAE1B,kBAAC2S,EAAA,EAAD,MACA,kBAAC,KAAD,KACE,kBAAC7H,EAAA,EAAD,CAAYO,UAAU,SAAShF,QAAQ,MACpC,0BAEH,kBAACqD,GAAA,EAAD,CACEsB,aAAW,QACX4B,UAAWF,EAAQtM,eACnBkG,QAAS,kBAAMxE,EAAMqI,YAErB,kBAACyI,GAAA,EAAD,QAGJ,kBAACC,GAAA,EAAD,CACEC,UAAU,EACVlN,MAAO,CAAE3G,aAAc,EAAGK,YAAa,EAAGC,UAAW,WAErD,kBAACqF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,KACX6M,GAEE,kBAAC,GAAD,CACElB,SAAU,SAAC3O,EAAQG,EAAQ2Q,GAAjB,OAAqC9Q,GAC/C4O,YAAaA,EACblI,IAAKtL,GACLmK,IAAKnK,GACLuL,MAAOvL,GACP2E,KAAME,EACNA,OAAQqP,EACR/N,SAAUA,EACVwP,aAAcb,EACdF,KAAMA,EACNnC,OAAQA,EACRV,QAASA,EACT9H,YAAaA,EACbyG,KAAMA,EACNH,MAAO,SAAChF,GAAD,OAAgB+I,EAAe/I,IACtC2H,SAAU,SAAC3H,GAAD,OAAgB6I,EAAU7I,IACpC8H,UAAW,SAAC9H,GAAD,OAAgB8I,EAAW9I,IACtCyH,WAAY,SAACzH,GAAD,OAAgBiJ,EAAYjJ,WCpIpDqK,GAAa,CACjB,CAAEhW,GAAI,oBAAqBE,KAAM,iCACjC,CAAEF,GAAI,wBAAyBE,KAAM,oCAGjC+V,GAAW,SAACpR,GAAgB,IACxBqR,EAAqCrR,EAArCqR,SAAUvK,EAA2B9G,EAA3B8G,MAAOwK,EAAoBtR,EAApBsR,MAAUC,EADJ,YACcvR,EADd,8BAG/B,OACE,uCACEwR,KAAK,WACLC,OAAQ3K,IAAUwK,EAClBnW,GAAE,8BAAyBmW,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GAEHzK,IAAUwK,GAAS,kBAACpN,EAAA,EAAD,CAAKyN,EAAG,GAAIN,KAWtC,SAASO,GAAUN,GACjB,MAAO,CACLnW,GAAG,kBAAD,OAAoBmW,GACtB,gBAAgB,uBAAhB,OAAwCA,IA6K7BO,OAzKf,WAAuB,IAAD,EACQ1S,mBAAS,IADjB,mBACbmL,EADa,KACL8C,EADK,OAEQjO,oBAAS,GAFjB,mBAEbuL,EAFa,KAELC,EAFK,OAGYxL,mBAAS,QAHrB,mBAGbuJ,EAHa,KAGHgB,EAHG,OAIEvK,mBAAS,GAJX,mBAIb2S,EAJa,KAIRC,EAJQ,KAKdnV,EAAQoV,cACRpH,EAAUlO,IA+ChB,OA7CA8C,qBAAU,WACS,SAAbkJ,GACFlN,EAASkN,GACN9F,MAAK,SAAC/G,GACL0O,OAAOC,KAAK3O,EAAIqE,MAAMqN,SAAQ,SAAC/E,GAC7B,IAAIgF,EAAgB3R,EAAIqE,KAAKsI,GAAT,KAChBiF,EAAmB,GACnBC,EAAwB,GACxBC,EAAmB,GAGT,SAAVH,GACF3R,EAAIqE,KAAKsI,GAAT,KAAqB+E,SAAQ,SAACrK,EAAkB6G,GAC9C0D,EAAKG,KAAK7D,EAAM,GAChB2D,EAAUE,KAAK1K,EAAK,IACpByK,EAAKC,KAAK1K,EAAK,OAGjBkK,GAAU,SAACvD,GAAD,mBAAC,eACNA,GADK,kBAEPrB,EAAK,CACJnI,QAASoN,EACTlN,QAASmN,EACT/M,UAAWgN,EACXnN,KAAMgN,EACN3M,MAAOhF,EAAIqE,KAAKsI,GAAT,aAGQ,cAAVgF,GACTJ,GAAU,SAACvD,GAAD,mBAAC,eACNA,GADK,kBAEPrB,EAAK,CACJnI,QAASxE,EAAIqE,KAAKsI,GAAT,KACThI,KAAMgN,EACN3M,MAAOhF,EAAIqE,KAAKsI,GAAT,kBAMhB3F,OAAM,WACLuK,EAAU,SAEf,CAAC1E,IAGF,oCACE,kBAAC5F,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACkP,EAAA,EAAD,CAAW1I,UAAU,OAAOtL,SAAS,MACnC,kBAAC4S,EAAA,EAAD,MACA,kBAAC1G,EAAA,EAAD,CAAMW,UAAWF,EAAQ/M,WACvB,kBAACqU,EAAA,EAAD,CACErR,MACE,kBAACmI,EAAA,EAAD,CAAYO,UAAU,KAAKhF,QAAQ,KAAKuG,UAAU,OAAlD,8CAIFqH,OACE,kBAAC7N,EAAA,EAAD,CACEC,QAAQ,YACRnH,MAAM,UACNoH,QAAS,kBAAMmG,GAAU,KAExB,gBAIP,kBAACN,EAAA,EAAD,CAAaS,UAAU,aACrB,kBAACsH,EAAA,EAAD,CAAQ7T,SAAS,SAASnB,MAAM,WAC9B,kBAACiV,EAAA,EAAD,CACEvL,MAAOgL,EACPjG,SAAU,SAACpH,EAAG6N,GAAJ,OAAYP,EAAOO,IAC7BC,eAAe,UACfC,UAAU,UACVjO,QAAQ,YACR2E,aAAW,2BAEX,kBAACuJ,EAAA,EAAD,eAAK3T,MAAM,6BAAgC8S,GAAU,KACrD,kBAACa,EAAA,EAAD,eAAK3T,MAAM,YAAe8S,GAAU,OAGxC,kBAAC,IAAD,CACEc,KAA0B,QAApB9V,EAAM2S,UAAsB,YAAc,IAChD+B,MAAOQ,EACPa,cAAe,SAACrB,GAAD,OAAgBS,EAAOT,KAEtC,kBAAC,GAAD,CAAUxK,MAAOgL,EAAKR,MAAO,GAC3B,kBAACxO,EAAA,EAAD,CACEC,WAAS,EACT9F,QAAS,EACT+F,QAAQ,SACRC,WAAW,UAEX,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACwI,EAAA,EAAD,CACEtQ,KAAK,GACLyL,MAAO4B,EACPmD,SAAU,SAACpH,GAAD,OAAYiF,EAAYjF,EAAE8B,OAAOO,QAC3CgE,UAAWF,EAAQ9M,aACnBgG,MAAoB,SAAb4E,EAAsB,CAAEtL,MAAOQ,IAAK,MAAS,GACpDmO,aAAa,GACbR,WAAS,GAET,kBAAC9C,EAAA,EAAD,CACE3B,MAAM,OACNhD,MAAO,CAAE8C,QAAS,KAClBoF,UAAQ,GAEP,yBAEFmF,GAAW9L,KAAI,SAACnC,GAAD,OACd,kBAACuF,EAAA,EAAD,CAAU3B,MAAO5D,EAAK/H,GAAIiK,IAAKlC,EAAK/H,IACjC+H,EAAK7H,WAKd,kBAACyH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACdoH,OAAOC,KAAKF,GAAQjF,KAAI,SAACnC,GAAD,OACvB,kBAACJ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGiC,IAAKlC,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAAC9F,QAAS,GACA,SAAtBqN,EAAOpH,GAAM1C,MACZ,kBAACsC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACE/C,OAAQkK,EAAOpH,GACfxB,SAAQ,cAIS,cAAtB4I,EAAOpH,GAAM1C,MACZ,oCACE,kBAACsC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAA0BmH,EAAOpH,KAEpC,kBAACJ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAoBmH,EAAOpH,aAS5C,kBAAC,GAAD,CAAU4D,MAAOgL,EAAKR,MAAO,GAC3B,kBAACxO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,cAShB,kBAAC,GAAD,CAAWuH,OAAQA,EAAQrC,QAAS,kBAAMsC,GAAU,Q,SClOpDiI,GAAc,CAClBC,QAAS7X,EACT8X,QAAS,KAGLC,GAAgBpX,IAAMqX,OAAOJ,IAEnCG,GAAcE,aAAaC,SAASC,KAClC,SAACD,GAAD,OAAcA,KACd,SAACE,GAAD,OACEC,QAAQC,OAAQF,EAAMF,UAAYE,EAAMF,SAAShT,MAAS,2BAG/C6S,UCkKAnO,GA/KuB,SAAC5E,GAAgB,IAAD,EACtBb,mBAASa,EAAM6E,SADO,mBAC7CA,EAD6C,KACpCC,EADoC,OAExB3F,mBAAS,IAFe,mBAE7C3C,EAF6C,KAErCuI,EAFqC,KAG9CC,EAAYhF,EAAMgF,UAClBC,EAAejF,EAAMiF,aAE3BzF,qBAAU,WACRsF,EAAW9E,EAAM6E,WAChB,CAAC7E,EAAM6E,UAEV,IAAMK,EAAS,SAACC,EAAkBC,GAAnB,OAAgCD,EAAKE,KAAI,SAACC,GAAD,OAAcA,EAAIF,OA+H1E,OA7HA5F,qBAAU,WACR,IAAI+F,EAAkB,GAChBC,EAAcC,SAASzF,EAAM0F,KAC7BC,EAAgBX,EAAUY,QAAO,SAACN,GAAD,OAAcA,EAAIE,cAAgBA,KACnEK,EAAmBZ,EAAaW,QACpC,SAACN,GAAD,OAAcA,EAAIE,cAAgBA,MAEP,IAAzBX,EAAQiB,eAAkD,IAAzBjB,EAAQkB,aAC3CR,EAAa,CACX,CACEpF,EAAG+E,EAAOS,EAAe,YACzBrF,EAAG4E,EAAOS,EAAe,SACzBtK,KAAM,aACNoF,KAAM,UACND,KAAM,UACNpD,MAAO,qBAET,CACE+C,EAAG+E,EAAOW,EAAkB,YAC5BvF,EAAG4E,EAAOW,EAAkB,SAC5BxK,KAAM,cACNoF,KAAM,QACNuF,KAAM,CACJ5I,MAAO,qBAGX,CACE+C,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAIsB,IAAzB4E,EAAQiB,eAAmD,IAAzBjB,EAAQkB,aACnDR,EAAa,CACX,CACEpF,EAAG+E,EAAOS,EAAe,YACzBrF,EAAG4E,EAAOS,EAAe,SACzBtK,KAAM,aACNoF,KAAM,UACND,KAAM,UACNpD,MAAO,qBAET,CACE+C,EAAG,GACHG,EAAG,GACHG,KAAM,UACND,KAAM,WAER,CACEL,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAIsB,IAAzB4E,EAAQiB,eAAkD,IAAzBjB,EAAQkB,aAClDR,EAAa,CACX,CACEpF,EAAG+E,EAAOW,EAAkB,YAC5BvF,EAAG4E,EAAOW,EAAkB,SAC5BxK,KAAM,cACNoF,KAAM,QACNuF,KAAM,CACJ5I,MAAO,qBAGX,CACE+C,EAAG,GACHG,EAAG,GACHG,KAAM,UACND,KAAM,WAER,CACEL,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAIsB,IAAzB4E,EAAQiB,eAAmD,IAAzBjB,EAAQkB,eACnDR,EAAa,CACX,CACEpF,EAAG,GACHG,EAAG,GACHG,KAAM,SAER,CACEN,EAAG,GACHG,EAAG,GACHG,KAAM,UACND,KAAM,WAER,CACEL,EAAG,CAACH,EAAMiG,IAAI9F,GACdG,EAAG,CAACN,EAAMiG,IAAI3F,GACdjF,KAAM,OACNoF,KAAM,UACND,KAAM,UACNE,OAAQ,CACNtD,MAAO,MACP6C,KAAM,OAMd8E,EAAUQ,KACT,CAACV,EAASG,EAAWC,EAAcjF,EAAM0F,IAAK1F,EAAMiG,MAGrD,kBAAC,IAAD,CACE/F,KAAM1D,EACNoE,OAAQ,CACNsF,UAAU,EACVpF,YAAY,EACZqF,UAAW,UACX/G,MAAOY,EAAMuT,QACwC,IAAjDxM,WAAW/G,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACO,GAAjDzM,WAAW/G,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAC9C9V,OAAQsC,EAAMuT,QACwC,IAAlDxM,WAAW/G,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KACO,GAAlDzM,WAAW/G,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KAC/CvU,OAAQ,CACNmC,EAAG,GACHE,EAAG,GACHD,EAAG,GACHE,EAAG,IAELE,MAAO,CACLZ,MAAM,YAAD,OAAcb,EAAM6G,IAApB,6BAA4C7G,EAAM0F,IAAlD,QACLlF,KAAM,SACN6C,UAAU,GAEZtB,MAAO,CACLlB,MAAOb,EAAMoG,WACb5F,KAAM,SACN6C,UAAU,IAGdgD,QAAS,SAAC5B,GAAD,OAAaA,EAAE6B,MAAMC,OAAOzC,MAAM0C,OAAS,WACpDC,UAAW,SAAChC,GAAD,OAAaA,EAAE6B,MAAMC,OAAOzC,MAAM0C,OAAS,aACtDhC,QAAS,SAACC,GAAD,OAAOzE,EAAMwE,QAAQC,IAC9BiC,cAAe,kBAAM1G,EAAMwE,cCsDlBmC,GAhOyB,SAAC3G,GAAgB,IAAD,EAC1Bb,mBAAS,IADiB,mBAC/C3C,EAD+C,KACvCuI,EADuC,KAGhDG,EAAS,SAACC,EAAkBC,GAChC,OAAOD,EAAKE,KAAI,SAAUC,GACxB,OAAOA,EAAIF,OAqJf,OAjJA5F,qBAAU,WACR,IAAI+F,EAAkB,IACa,IAA/BvF,EAAM6E,QAAQiB,eAAwD,IAA/B9F,EAAM6E,QAAQkB,aACvDR,EAAa,CACX,CACEpF,EAAG+E,EAAOlF,EAAMgF,UAAW,YAC3B1E,EAAG4E,EAAOlF,EAAMgF,UAAW,eAC3B5B,EAAG8B,EAAOlF,EAAMgF,UAAW,SAC3B3J,KAAM,aACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,oBACP6C,KAAM,IAGV,CACEE,EAAG+E,EAAOlF,EAAMiF,aAAc,YAC9B3E,EAAG4E,EAAOlF,EAAMiF,aAAc,eAC9B7B,EAAG8B,EAAOlF,EAAMiF,aAAc,SAC9B5J,KAAM,gBACNuL,QAAS,GACTpG,KAAM,SACNpD,MAAO,oBAET,CACE+C,EAAG,CAACH,EAAM6G,KACVvG,EAAG,CAACN,EAAM0F,KACVtC,EAAG,CAACpD,EAAM8G,OACVzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAKmB,IAA/BD,EAAM6E,QAAQiB,eACiB,IAA/B9F,EAAM6E,QAAQkB,aAEdR,EAAa,CACX,CACEpF,EAAG+E,EAAOlF,EAAMgF,UAAW,YAC3B1E,EAAG4E,EAAOlF,EAAMgF,UAAW,eAC3B5B,EAAG8B,EAAOlF,EAAMgF,UAAW,SAC3B3J,KAAM,aACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,oBACP6C,KAAM,IAGV,CACEE,EAAG,CAACH,EAAM6G,KACVvG,EAAG,CAACN,EAAM0F,KACVtC,EAAG,CAACpD,EAAM8G,OACVzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAKmB,IAA/BD,EAAM6E,QAAQiB,eACiB,IAA/B9F,EAAM6E,QAAQkB,aAEdR,EAAa,CACX,CACEpF,EAAG+E,EAAOlF,EAAMiF,aAAc,YAC9B3E,EAAG4E,EAAOlF,EAAMiF,aAAc,eAC9B7B,EAAG8B,EAAOlF,EAAMiF,aAAc,SAC9B5J,KAAM,gBACNuL,QAAS,GACTpG,KAAM,SACNpD,MAAO,oBAET,CACE+C,EAAG,CAACH,EAAM6G,KACVvG,EAAG,CAACN,EAAM0F,KACVtC,EAAG,CAACpD,EAAM8G,OACVzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAKmB,IAA/BD,EAAM6E,QAAQiB,eACiB,IAA/B9F,EAAM6E,QAAQkB,eAEdR,EAAa,CACX,CACEpF,EAAG,GACHG,EAAG,GACH8C,EAAG,GACH5C,KAAM,UAER,CACEL,EAAG,GACHG,EAAG,GACH8C,EAAG,GACH3C,KAAM,UACND,KAAM,aAER,CACEL,EAAG,CAAC4G,WAAW/G,EAAM6G,MACrBvG,EAAG,CAACyG,WAAW/G,EAAM0F,MACrBtC,EAAG,CAAC2D,WAAW/G,EAAM8G,QACrBzL,KAAM,OACNoF,KAAM,UACND,KAAM,YACNoG,QAAS,EACTlG,OAAQ,CACNtD,MAAO,MACP6C,KAAM,MAMd8E,EAAUQ,KACT,CACDvF,EAAM6E,QACN7E,EAAMgF,UACNhF,EAAMiF,aACNjF,EAAMgH,MACNhH,EAAM6G,IACN7G,EAAM0F,IACN1F,EAAM8G,QAIN,kBAAC,IAAD,CACE5G,KAAM1D,EACNoE,OAAQ,CACNsF,UAAU,EACV9G,MAAOY,EAAMuT,QACoC,IAA7CE,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACO,GAA7CC,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAC1C9V,OAAQsC,EAAMuT,QACoC,GAA9CE,OAAOzT,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KACO,GAA9CC,OAAOzT,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KAC3CvU,OAAQ,CACNmC,EAAG,EACHE,EAAG,EACHD,EAAG,EACHE,EAAG,GAEL0F,MAAO,CACLC,YAAa,CACX/G,EAAG,GACHG,EAAG,GACH8C,EAAG,IAEL+D,OAAQ,CACNtD,OAAQ,CACN1D,EAAG,EACHG,EAAG,EACH8C,EAAG,GAELgE,IAAK,CACHjH,EAAG,GACHG,EAAG,GACH8C,EAAG,IAELiE,GAAI,CACFlH,EAAG,EACHG,EAAG,EACH8C,EAAG,IAGP3B,MAAO,CACLZ,MAAO,gBACPL,KAAM,SACN8C,MAAO,CAACgE,KAAKC,IAAL,MAAAD,KAAI,aAAQpC,EAAOlF,EAAMiF,aAAc,cAAc,GAC7D5B,UAAU,GAEZtB,MAAO,CACLlB,MAAO,oBACPL,KAAM,SACN8C,MAAO,CAAC,GAAI,GACZD,UAAU,GAEZmE,MAAO,CACL3G,MAAOb,EAAMyH,WACbjH,KAAM,SACN8C,MAAO,CACLgE,KAAKI,IAAL,MAAAJ,KAAI,aAAQpC,EAAOlF,EAAMiF,aAAc,WACvCqC,KAAKC,IAAL,MAAAD,KAAI,aAAQpC,EAAOlF,EAAMiF,aAAc,YAEzC5B,UAAU,IAGdvC,YAAY,GAEd0D,QAAS,SAACC,GAAD,OAAOzE,EAAMwE,QAAQC,IAC9BiC,cAAe,kBAAM1G,EAAMwE,c,qBC7GlBkP,GApGkB,SAAC1T,GAAgB,IAAD,EACXb,mBAAwB,IADb,mBACxCsQ,EADwC,KAC5BC,EAD4B,OAErBvQ,mBAAiB,IAFI,mBAExC0B,EAFwC,KAEjC8S,EAFiC,KA6B/C,OAzBAnU,qBAAU,WACR,GAAIQ,EAAMI,OAAQ,CAChB,IAAIF,EAAmB,GACnB0T,EAAmB5T,EAAMI,OAAOS,MAAMqB,MAAM,KAAKC,KAAK,KAGxDjC,EADwB,SAAtBF,EAAMI,OAAOI,KACRR,EAAMI,OAAOC,QAAQgF,KAAI,SAACnC,EAAc6G,GAC7C,MAAO,CACL8J,OAAQ3Q,EACR4Q,OAAQ9T,EAAMI,OAAOG,QAAQwJ,GAC7BgK,SAAU/T,EAAMI,OAAOO,UAAUoJ,OAI9B/J,EAAMI,OAAOC,QAAQgF,KAAI,SAACnC,GAC/B,MAAO,CACL2Q,OAAQ3Q,MAIdyQ,EAASC,GACTlE,EAAcxP,MAEf,CAACF,EAAMI,SAGR,kBAAC0C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,aACRC,WAAW,SACXa,MAAO,CAAEvF,SAAU,aAEnB,kBAACuE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACyE,GAAA,EAAD,CACEzM,GAAI6E,EAAMsR,MACV9M,QAAS,SAACC,GACRzE,EAAMsI,WAAW7D,EAAEC,eACnB1E,EAAMgU,QAAQvP,EAAEC,cAAcvJ,KAEhC2I,MAAO,CAAE9G,QAAS,IAElB,kBAAC,KAAD,OAEF,kBAAC,GAAD,CACE0L,SAAU1I,EAAM0I,SAChBT,SAAUjI,EAAMiI,SAChBK,WAAY,SAACxB,GAAD,OAAgB9G,EAAMsI,WAAWxB,IAC7Ce,WAAY,SAACf,GAAD,OAAgB9G,EAAM6H,WAAWf,OAGjD,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,KACf,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACyE,GAAA,EAAD,CACE9D,MAAO,CACL9G,QAAS,EACTuB,SAAU,WACVC,MAAO,EACPC,IAAK,IAEP+F,QAAS,kBAAMxE,EAAMiU,WAAWjU,EAAMsR,SAEtC,kBAAC,KAAD,OAEF,kBAAC1J,GAAA,EAAD,CACE9D,MAAO,CACL9G,QAAS,EACTuB,SAAU,WACVC,MAAO,GACPC,IAAK,KAGNuB,EAAMI,QACL,kBAAC,WAAD,CACEF,KAAMuP,EACNvE,SAAQ,UAAKrK,EAAL,YAAcsK,KAAKC,MAAnB,QACRN,UAAU,kBACVvE,OAAO,UAEP,kBAACyC,EAAA,EAAD,CAAYO,UAAU,IAAIhF,QAAQ,SAC/B,SAILvE,EAAMI,QACN,kBAAC4I,EAAA,EAAD,CAAYO,UAAU,IAAIhF,QAAQ,SAC/B,YCnBF2P,GAjFkB,SAAClU,GAChC,OACE,kBAAC,IAAD,CACEE,KAAM,CACJ,CACEC,EAAGH,EAAMI,OAAOC,QAChBC,EAAGN,EAAMI,OAAOG,QAChBlF,KAAM,qBACNmF,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEtD,MAAO,QAEnB,CACE+C,EAAGH,EAAMI,OAAOC,QAChBC,EAAGN,EAAMI,OAAOO,UAChBtF,KAAM,kBACNmF,KAAM,UACNE,OAAQ,CAAEtD,MAAO,UAGrBwD,OAAQ,CACNC,MAAO,CACLsP,KAAK,MAAD,OAAQnQ,EAAMI,OAAOS,MAArB,QACJK,KAAM,CACJC,OAAQ,SACRlB,KAAM,KAGVb,MAAOY,EAAMmU,WACoC,IAA7CV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACO,IAA7CC,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAC1C9V,OAAQsC,EAAMmU,WACmC,IAA7CV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACQ,GAA9CC,OAAOzT,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KAC3C1S,YAAY,EACZC,OAAQ,CACNC,YAAa,IACbC,QAAS,SACTC,KAAM,CACJC,OAAQ,aACRlB,KAAM,GACN7C,MAAO,SAGX6B,OAAQ,CACNmC,EAAG,GACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,MAAO,CACLZ,MACqB,aAAnBb,EAAM0B,SAA0B,wBAA0B,mBAC5DC,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLlB,MACqB,aAAnBb,EAAM0B,SACF,2BACA,sBACNC,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,IAGnBtF,OAAQ,CAAEwF,gBAAgB,MCTjBC,GAnE8B,SAACjC,GAC5C,OACE,kBAAC,IAAD,CACEE,KAAM,CACJ,CACEC,EAAGH,EAAMI,OAAOC,QAChBhF,KAAM,WACNmF,KAAM,cAGVI,OAAQ,CACNC,MAAO,CACLsP,KAAK,MAAD,OAAQnQ,EAAMI,OAAOS,MAAMqB,MAAM,KAAKC,KAAK,KAA3C,QACJjB,KAAM,CACJC,OAAQ,SACRlB,KAAM,KAGVb,MAAOY,EAAMmU,WACoC,IAA7CV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACO,GAA7CC,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAC1C9V,OAAQsC,EAAMmU,WACmC,IAA7CV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACQ,GAA9CC,OAAOzT,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KAC3C1S,YAAY,EACZC,OAAQ,CACNC,YAAa,IACbC,QAAS,SACTC,KAAM,CACJC,OAAQ,aACRlB,KAAM,GACN7C,MAAO,SAGX6B,OAAQ,CACNmC,EAAG,GACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,MAAO,CACLZ,MAAO,WACPc,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLlB,MAAO,aACPc,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,IAGnBtF,OAAQ,CAAEwF,gBAAgB,MCdjBoS,GAhDiB,SAACpU,GAC/B,OACE,kBAAC,IAAD,CACEE,KAAM,CACJ,CACEI,EAAGN,EAAMI,OAAOC,QAChBgC,UAAW,MACXhH,KAAM,GACNmF,KAAM,QAGVI,OAAQ,CACNC,MAAO,CACLsP,KAAK,MAAD,OAAQnQ,EAAMI,OAAOS,MAAMqB,MAAM,KAAK,GAAtC,mBACJhB,KAAM,CACJC,OAAQ,SACRlB,KAAM,KAGVb,MAAOY,EAAMmU,WACoC,IAA7CV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACO,IAA7CC,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAC1C9V,OAAQsC,EAAMmU,WACmC,IAA7CV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KACQ,GAA9CC,OAAOzT,EAAMC,KAAKvC,OAAO8V,QAAQ,KAAM,KAC3CvU,OAAQ,CACNmC,EAAG,GACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPO,MAAO,CACLlB,MAAO,WACPc,UAAW,CACT1B,KAAM,GACN7C,MAAO,WAETwE,UAAU,EACVC,cAAe,UACfC,cAAe,IAGnBtF,OAAQ,CAAEwF,gBAAgB,MC1B1B6G,GAA6D,SACjExN,EACAyL,GAEA,MAAO,CAAEzL,OAAMyL,UAGX3B,GAAO,CACX0D,GAAW,gBAAiB,MAC5BA,GAAW,oBAAqB,MAChCA,GAAW,eAAgB,MAC3BA,GAAW,oBAAqB,MAChCA,GAAW,gBAAiB,MAC5BA,GAAW,2BAA4B,MACvCA,GAAW,yBAA0B,OAqExBwL,GAlEsB,SAACrU,GACpC,IAAMC,EAAOf,KAEb,OACE,oCACgB,IAAbc,EAAM7E,IACL,kBAAC2H,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,SACRC,WAAW,SACXa,MAAO,CACLpG,OAAQuC,EAAKb,MAASY,EAAMmU,WAAa,OAAsB,IAAblU,EAAKb,MAAgB,OACvEP,SAAU,SAGZ,kBAACiE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC6F,EAAA,EAAD,CAAYzE,QAAQ,KAAKT,MAAO,CAAEiF,UAAW,WAA7C,eAGA,kBAACE,GAAA,EAAD,CAAOC,aAAW,eAAejJ,KAAK,SACpC,kBAACkJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sBACA,kBAACA,GAAA,EAAD,gBAGJ,kBAACC,GAAA,EAAD,KACGnE,GAAKE,KAAI,SAACC,GAAD,OACR,kBAAC8D,GAAA,EAAD,CAAUhE,IAAKE,EAAIjK,MACjB,kBAACgO,GAAA,EAAD,CAAWE,UAAU,KAAKC,MAAM,OAC7BlE,EAAIjK,MAEP,kBAACgO,GAAA,EAAD,KAAY/D,EAAIwB,eAQhB,IAAb9G,EAAM7E,IACL,kBAAC,GAAD,CACEiF,OAAQJ,EAAME,KACdwB,SAAU1B,EAAM0B,SAChBzB,KAAMD,EAAMC,KACZkU,WAAYnU,EAAMmU,aAGR,IAAbnU,EAAM7E,IACL,kBAACmZ,GAAD,CACElU,OAAQJ,EAAME,KACdD,KAAMD,EAAMC,KACZkU,WAAYnU,EAAMmU,aAGR,IAAbnU,EAAM7E,IACL,kBAAC,GAAD,CACEiF,OAAQJ,EAAME,KACdD,KAAMD,EAAMC,KACZkU,WAAYnU,EAAMmU,eC3EtBjF,GAAaC,IAAMC,YAAW,SAClCpP,EACAqP,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASrP,OA+HhCuU,GA5HoB,SAACvU,GAK7B,IAAD,EAC4Bb,mBAAmB,CAAC,EAAG,EAAG,IADtD,mBACGuJ,EADH,KACagB,EADb,OAE4BvK,mBAAS,MAFrC,mBAEG8I,EAFH,KAEa0B,EAFb,OAG4BxK,mBAAwB,MAHpD,mBAGGqV,EAHH,KAGaC,EAHb,OAIwBtV,oBAAS,GAJjC,mBAIGuL,EAJH,KAIWC,EAJX,OAKsBxL,mBAAiB,GALvC,mBAKGmS,EALH,KAKUoD,EALV,KAME9J,EAAUlO,IAYhB,OACE,oCACGgM,EAASrD,KAAI,SAACnC,EAAc6G,GAC3B,IAAIC,EAAO/O,EAAW+E,EAAMiK,SAAS/G,GAAM9H,QAE3C,OACE,kBAAC0H,EAAA,EAAD,CACEI,MAAI,EACJC,GAAI,EACJiC,IAAKlC,EACLY,MAAO,CACLtG,YAAa,OACbL,aAAc4M,EAAM,IAAM,EAAI,OAAS,WAGzC,kBAACI,EAAA,EAAD,CAAMrG,MAAO,CAAEpG,OAAO,QAAD,OAAUsC,EAAMC,KAAKvC,OAArB,aACnB,kBAAC2M,EAAA,EAAD,KACE,kBAAC,GAAD,CACE7J,KAAM,EACNkI,SAAUA,EACVT,SAAUA,EACVqJ,MAAOvH,EACP3J,OACEJ,EAAMsK,OAAON,IAASO,OAAOC,KAAKxK,EAAMsK,OAAON,IAAOF,OAAS,EAC3D9J,EAAMsK,OAAON,GACb,KAENgK,QAAS,SAAClN,GAAD,OAAgB4N,EAAS5N,IAClCwB,WAAY,SAACxB,GAAD,OAAgB6C,EAAY7C,IACxCe,WAAY,SAACf,GAAD,OAvCJ3L,EAuCmC2L,EAtCzD4C,EACEhB,EAASrD,KAAI,SAACnC,EAAW6G,GAEvB,OADIA,IAAQ0J,OAAOnC,KAAQpO,EAAO/H,GAC3B+H,WAGXyG,EAAY,MAPS,IAACxO,GAwCR8Y,WAAY,SAACnN,GACX2N,EAAY3N,GACZ6D,GAAU,MAGd,kBAAC7H,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACZnD,EAAMsK,OAAON,IAASO,OAAOC,KAAKxK,EAAMsK,OAAON,IAAOF,OAAS,GAC9D,kBAAC,GAAD,CACE3O,GAAI+H,EACJjD,KAAMD,EAAMC,KACZC,KAAMF,EAAMsK,OAAON,GACnBtI,SAAU1B,EAAM0B,SAChByS,YAAY,WAS3BzL,EAASoB,OAAS,IAAM,GAAK,kBAAChH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IAC/B,OAAbqR,GACC,kBAAC9D,GAAA,EAAD,CACEvI,KAAMuC,EACNiG,oBAAqBzB,GACrB7G,QAAS,kBAAMsC,GAAU,IACzBgK,WAAY,CACV7Q,MAAO,CACLpG,OAAqD,IAA7C+V,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAC9CvV,SAAuD,GAA7CwV,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,KAChDzW,SAAuD,GAA7C0W,OAAOzT,EAAMC,KAAKb,MAAMoU,QAAQ,KAAM,QAIpD,kBAAC3C,EAAA,EAAD,MACA,kBAAC,KAAD,KACE,kBAAC7H,EAAA,EAAD,CAAYO,UAAU,SAAShF,QAAQ,MACpCtJ,EAAW+E,EAAMiK,SAASuK,GAAUnZ,MAEvC,kBAACuM,GAAA,EAAD,CACEsB,aAAW,QACX4B,UAAWF,EAAQtM,eACnBkG,QAAS,kBAAMmG,GAAU,KAEzB,kBAACmG,GAAA,EAAD,QAGJ,6BACA,kBAACC,GAAA,EAAD,KACG/Q,EAAMsK,OAAOrP,EAAW+E,EAAMiK,SAASvB,EAAS8L,IAAWpZ,UAC1DmP,OAAOC,KACLxK,EAAMsK,OAAOrP,EAAW+E,EAAMiK,SAASvB,EAAS8L,IAAWpZ,UAC3D0O,OAAS,GACT,kBAAC,GAAD,CACE3O,GAAIuN,EAAS8L,GACbvU,KAAMD,EAAMC,KACZyB,SAAU1B,EAAM0B,SAChByS,YAAY,EACZjU,KACEF,EAAMsK,OAAOrP,EAAW+E,EAAMiK,SAASvB,EAAS8L,IAAWpZ,e,8IC5HzE8T,GAAaC,IAAMC,YAAW,SAClCpP,EACAqP,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASrP,OAgChC4U,GA7B6C,SAAC,GAAuB,IAArBzM,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAAc,EACvDlJ,mBAAiB,IADsC,mBAC1E2H,EAD0E,KACnE+N,EADmE,KAK3E3G,EAAW,uCAAG,4BAAAxS,EAAA,6DACZD,EAAS,CAAEuS,OAAQlH,GADP,SAEZnL,GAAMC,KAAK,qBAAsBH,GAFrB,OAGlBoZ,EAAS,IACTxM,IAJkB,2CAAH,qDAOjB,OACE,kBAACqI,GAAA,EAAD,CAAQvI,KAAMA,EAAMwI,oBAAqBzB,GAAYhH,aAAW,EAACG,QAASA,GACxE,kBAAC0I,GAAA,EAAD,KACE,kBAAC+D,GAAA,EAAD,CAAWhW,MAAM,SAASgI,MAAOA,EAAO+E,SAZzB,SAACvF,GAAD,OAAWuO,EAASvO,EAAM5B,cAAcoC,QAYSiO,UAAQ,KAE1E,kBAACC,GAAA,EAAD,KACE,kBAAC1Q,EAAA,EAAD,CAAQlH,MAAM,UAAUoH,QAAS6D,GAAjC,UAGA,kBAAC/D,EAAA,EAAD,CAAQlH,MAAM,UAAU4O,SAAUlF,EAAMgD,OAAS,EAAGtF,QAAS0J,GAA7D,S,sCCxCK+G,GAAYC,aAAW,CAClCC,KAAM,CACJ/Q,OAAQ,gCACRgR,UAAW,OACX,qBAAsB,CACpBC,aAAc,GAEhB,WAAY,CACVC,QAAS,QAEX,aAAc,CACZrW,OAAQ,SAGZsW,SAAU,IAdaL,CAetBM,MAEUC,GAAmBP,aAAW,CACzCC,KAAM,CACJxX,gBAAiB,qBACjB0X,aAAc,gCACdK,cAAe,EACftH,UAAW,GACX,aAAc,CACZA,UAAW,KAGfuH,QAAS,CACP,aAAc,CACZ1W,OAAQ,WAGZsW,SAAU,IAfoBL,CAgB7BU,MAEUC,GAAmBX,cAAW,SAACtY,GAAD,MAAY,CACrDuY,KAAM,CACJnY,QAASJ,EAAMK,QAAQ,OAFKiY,CAI5BY,MCDEC,GAAa,CACjBC,UAAW,GACXxV,KAAM,MACN8M,SAAU,EACV2I,aAAc,GAGVvZ,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CuY,KAAM,GACNnW,YAAa,CACXC,OAAQrC,EAAMK,QAAQ,IAExBiE,KAAM,CACJnC,SAAU,YA2PCmX,GAvPsC,SAAClW,GAAW,IAAD,EAClCb,mBAAsB4W,IADY,mBACvDI,EADuD,KAC/CC,EAD+C,OAEhCjX,mBAAoB,IAFY,mBAEvD0N,EAFuD,KAE9CC,EAF8C,OAGtC3N,oBAAkB,GAHoB,mBAGvDgJ,EAHuD,KAGjDkO,EAHiD,OAI9BlX,mBAAqB,IAJS,mBAIvD4N,EAJuD,KAI7CC,EAJ6C,OAKtB7N,mBAAyB,IALH,mBAKvDmX,EALuD,KAKzCC,EALyC,KAMxD3L,EAAkClO,KAExC8C,qBAAU,WACRgX,MACC,IAEHhX,qBAAU,WAAO,IAAD,EACRnE,EAAI,UAAGwR,EAAQ4J,MAAK,SAACvT,GAAD,OAAUA,EAAKwT,YAAc1W,EAAMgO,iBAAnD,aAAG,EAAyD2I,YAChEC,EAAS,uCAAG,gCAAAlb,EAAA,sEAERD,EAAS,CAAEkT,UAAW3O,EAAMgO,OAAQU,YAAarT,GAFzC,SAGSM,GAAMK,IAAI,2BAA4B,CAAEP,WAHjD,OAGRyX,EAHQ,OAIRpM,EAAQoM,EAAShT,KAAK4J,OAAS,EAAIoJ,EAAShT,KAAK,GAAG2W,gBAAkB,EAE5E7J,EAAYkG,EAAShT,MACrBkW,GAAU,SAACvM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyD,QAASxG,OAPrC,kDASdkG,EAAY,IATE,0DAAH,qDAYfhN,EAAMgO,OAAS,GAAK3S,GAAQub,MAC3B,CAAC5W,EAAMgO,OAAQnB,IAElBrN,qBAAU,WACR,IAAMoX,EAAS,uCAAG,gCAAAlb,EAAA,sEAERD,EAAS,CAAEuS,OAAQhO,EAAMgO,OAAQV,QAAS6I,EAAO7I,SAFzC,SAGS3R,GAAMK,IAAI,gCAAiC,CAAEP,WAHtD,OAGRyX,EAHQ,OAIRpM,EACJoM,EAAShT,KAAK4J,OAAS,EAAIoJ,EAAShT,KAAK,GAAG4W,6BAA+B,EAE7EP,EAAgBrD,EAAShT,MACzBkW,GAAU,SAACvM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCoM,YAAanP,OARzC,kDAUdyP,EAAgB,IAVF,0DAAH,qDAcfvW,EAAMgO,OAAS,GAAKmI,EAAO7I,QAAU,GAAKsJ,MACzC,CAAC5W,EAAMgO,OAAQmI,EAAO7I,QAASP,EAAUF,IAE5C,IAAMkK,EAAc,WAClBV,GAASlO,GACTqO,KAGIQ,EAAe,SAAC1Q,GAAW,IAAD,EACNA,EAAMC,OAAtBlL,EADsB,EACtBA,KAAMyL,EADgB,EAChBA,MACdsP,GAAU,SAACvM,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCxO,EAAOyL,QAG9C0P,EAAW,uCAAG,8BAAA9a,EAAA,+EAEOC,GAAMK,IAAI,2BAFjB,OAEVkX,EAFU,OAGVpM,EAAQoM,EAAShT,KAAK4J,OAAS,EAAIoJ,EAAShT,KAAK,GAAGwW,WAAa,EAEvE5J,EAAWoG,EAAShT,MACpBF,EAAMiX,eAAenQ,GANL,gDAQhBgG,EAAW,IARK,yDAAH,qDAYXoK,EAAmB,uCAAG,gCAAAxb,EAAA,2DACpBL,EADoB,UACbwR,EAAQ4J,MAAK,SAACvT,GAAD,OAAUA,EAAKwT,YAAc1W,EAAMgO,iBADnC,aACb,EAAyD2I,aAD5C,uBAGlBlb,EAAS,CAAEkT,UAAW3O,EAAMgO,OAAQU,YAAarT,GAH/B,SAIlBM,GAAMC,KAAK,sBAAuBH,GAJhB,OAKxB+a,IALwB,2CAAH,qDASzB,OACE,oCACE,kBAAC,GAAD,CACEW,QAAM,EACN5B,SAA6B,WAAnBvV,EAAMuV,SAChB1J,SAAU,kBAAM7L,EAAM6L,SAAS,YAE/B,kBAAC,GAAD,CAAkBuL,gBAAc,kBAAkBjc,GAAG,kBACnD,kBAAC6N,EAAA,EAAD,KAAa,sBAEf,kBAAC,GAAD,KACE,kBAAClG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAY8B,UAAWF,EAAQ1J,MAA/B,2BAEF,kBAAC4B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CACEtQ,KAAK,OACLyL,MAAOqP,EAAO3V,KACd1B,MAAM,YACNiN,aAAa,GACbF,SAAUmL,GAEV,kBAACvO,EAAA,EAAD,CAAU3B,MAAM,OAAhB,OACA,kBAAC2B,EAAA,EAAD,CAAU3B,MAAM,OAAhB,UAIN,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAY8B,UAAWF,EAAQ1J,MAA/B,uEAIF,kBAAC4B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACE7E,MAAO9G,EAAMgO,OACblP,MAAM,SACNiN,aAAa,GACbF,SAAU,SAACpH,GAAD,OAAYzE,EAAMiX,eAAexS,EAAE8B,OAAOO,SAEpD,kBAAC2B,EAAA,EAAD,CAAU3B,OAAQ,EAAGkF,UAAQ,GAA7B,iBACCa,EAAQxH,KAAI,SAACnC,GAAD,OACX,kBAACuF,EAAA,EAAD,CACE3B,MAAO5D,EAAKwT,UACZtR,IAAG,UAAKlC,EAAKyT,YAAV,YAAyBzT,EAAKwT,YAEhCxT,EAAKyT,gBAGV,kBAAClO,EAAA,EAAD,CAAU3B,OAAQ,EAAGtC,QAASuS,GAA9B,UAMN,kBAACjU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAY8B,UAAWF,EAAQ1J,MAA/B,0GAKF,kBAAC4B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACEtQ,KAAK,UACLyL,MAAOqP,EAAO7I,QACdxO,MAAM,UACNiN,aAAa,GACbC,SAA0B,QAAhBmK,EAAO3V,KACjBqL,SAAUmL,GAEV,kBAACvO,EAAA,EAAD,CAAU3B,OAAQ,EAAGkF,UAAQ,GAA7B,kBAGCe,EAAS1H,KAAI,SAACnC,GAAD,OACZ,kBAACuF,EAAA,EAAD,CACE3B,MAAO5D,EAAK2T,eACZzR,IAAG,kBAAapF,EAAMgO,OAAnB,YAA6B9K,EAAK2T,iBAEpC3T,EAAK2T,mBAGThK,EAAQ/C,OAAS,GAChB,kBAACrB,EAAA,EAAD,CAAU3B,OAAQ,EAAGtC,QAAS0S,GAA9B,UAOR,kBAACpU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAY8B,UAAWF,EAAQ1J,MAA/B,qDAIF,kBAAC4B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,0BACA,kBAACC,EAAA,EAAD,CACEtQ,KAAK,cACLyL,MAAOqP,EAAOF,YACdnX,MAAM,oBACNiN,aAAa,GACbF,SAAUmL,GAEV,kBAACvO,EAAA,EAAD,CAAU3B,OAAQ,EAAGkF,UAAQ,GAA7B,4BACCsK,EAAajR,KAAI,SAACnC,GAAD,OAChB,kBAACuF,EAAA,EAAD,CACE3B,MAAO5D,EAAK4T,4BACZ1R,IAAG,uBAAkBpF,EAAMgO,OAAxB,YAAkCmI,EAAO7I,QAAzC,YAAoDpK,EAAK4T,8BAE3D5T,EAAK4T,mCAMhB,kBAAChU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAY8B,UAAWF,EAAQ1J,MAA/B,0CAIF,kBAAC4B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC2R,GAAA,EAAD,CACEzZ,KAAK,YACLyD,MAAM,kBACNgI,MAAOqP,EAAOH,UACdzR,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBwB,KAAK,SACLqL,SAAUmL,EACVzL,WAAS,EACTwJ,UAAQ,QAMlB,kBAAC,GAAD,CAAmB5M,KAAMA,EAAME,QAAS0O,MC1QxCM,GAAc,CAAEC,KAAM,GAAIC,OAAQ,GAElC7a,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CuY,KAAM,GACNnW,YAAa,CACXC,OAAQrC,EAAMK,QAAQ,IAExBiE,KAAM,CACJnC,SAAU,YA2JCyY,GAvJoC,SAACxX,GAAW,IAAD,EAChCb,mBAAqBkY,IADW,mBACrDlB,EADqD,KAC7CC,EAD6C,OAElCjX,mBAAiB,IAFiB,mBAErDsY,EAFqD,KAE9CC,EAF8C,OAGhCvY,mBAAkB,IAHc,mBAGrDwY,EAHqD,KAG7CC,EAH6C,OAIlCzY,oBAAkB,GAJgB,mBAIrD0Y,EAJqD,KAI9CC,EAJ8C,KAKtDlN,EAAkClO,KAExC8C,qBAAU,WACRuY,IACAC,MACC,CAAChY,EAAMgO,SAEV,IAAMgJ,EAAe,SAAC1Q,GAAW,IAAD,EACNA,EAAMC,OAAtBlL,EADsB,EACtBA,KAAMyL,EADgB,EAChBA,MACdsP,GAAU,SAACvM,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCxO,EAAOyL,QAG9CiR,EAAW,uCAAG,gCAAArc,EAAA,sEAEVD,EAAS,CAAEuS,OAAQhO,EAAMgO,QAFf,SAGOrS,GAAMK,IAAI,yBAA0B,CAAEP,WAH7C,OAGVyX,EAHU,OAIVpM,EAAQoM,EAAShT,KAAK4J,OAAS,EAAIoJ,EAAShT,KAAK,GAAG+X,UAAY,EAEtEL,EAAU1E,EAAShT,MACnBkW,GAAU,SAACvM,GAAD,mBAAC,eAAoBA,GAArB,IAAgC0N,MAAOzQ,OACjD0P,IARgB,kDAUhBoB,EAAU,IAVM,0DAAH,qDAcXI,EAAU,uCAAG,8BAAAtc,EAAA,+EAEQC,GAAMK,IAAI,yBAFlB,OAETkX,EAFS,OAGTpM,EACJoM,EAAShT,KAAK4J,OAAS,GACvBoJ,EAAShT,KAAKuW,MAAK,SAACvT,GAAD,OAAgBkF,QAAQlF,EAAKgV,kBAAgBA,cAElER,EAASxE,EAAShT,MAClBkW,GAAU,SAACvM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyN,KAAMxQ,OAChD0P,IATe,kDAWfkB,EAAS,IAXM,0DAAH,qDAeVlB,EAAW,uCAAG,8BAAA9a,EAAA,sEACKC,GAAMK,IAAI,2BADf,OACZkX,EADY,OAEZpM,EAAQoM,EAAShT,KAAK4J,OAAS,EAAIoJ,EAAShT,KAAK,GAAGwW,WAAa,EACvE1W,EAAMiX,eAAenQ,GAHH,2CAAH,qDAMXqR,EAAiB,uCAAG,gCAAAzc,EAAA,2DAClB4b,EADkB,UACXK,EAAOlB,MAAK,SAACvT,GAAD,OAAUA,EAAK+U,WAAa9B,EAAOoB,gBADpC,aACX,EAAuDW,eAD5C,uBAGhBzc,EAAS,CAAEkT,UAAW3O,EAAMgO,OAAQsJ,QAHpB,SAIhB3b,GAAMC,KAAK,oBAAqBH,GAJhB,OAKtBsc,IACAD,GAAS,GANa,2CAAH,qDAUvB,OACE,kBAAC,GAAD,CACEX,QAAM,EACN5B,SAA6B,WAAnBvV,EAAMuV,SAChB1J,SAAU,kBAAM7L,EAAM6L,SAAS,YAE/B,kBAAC,GAAD,CAAkBuL,gBAAc,kBAAkBjc,GAAG,kBACnD,kBAAC6N,EAAA,EAAD,KAAa,qBAEf,kBAAC,GAAD,KACE,kBAAClG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAYlF,MAAO,CAAE/E,SAAU,SAA/B,oGAKF,kBAAC+D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,cACA,kBAACC,EAAA,EAAD,CACEtQ,KAAK,QACLyL,MAAOqP,EAAOoB,MACdzY,MAAM,QACNiN,aAAa,GACbF,SAAUmL,GAEV,kBAACvO,EAAA,EAAD,CAAU3B,OAAQ,EAAGkF,UAAQ,GAA7B,gBACC2L,EAAOtS,KAAI,SAACnC,GAAD,OACV,kBAACuF,EAAA,EAAD,CAAU3B,MAAO5D,EAAK+U,SAAU7S,IAAG,UAAKlC,EAAK+U,WAC1C/U,EAAK+U,aAGV,kBAACxP,EAAA,EAAD,CAAU3B,OAAQ,EAAGtC,QAAS2T,GAA9B,UAMN,kBAACrV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAYlF,MAAO,CAAE/E,SAAU,SAA/B,8BAIF,kBAAC+D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CACEtQ,KAAK,OACLyL,MAAOqP,EAAOmB,KACdxY,MAAM,eACNiN,aAAa,GACbF,SAAUmL,GAEV,kBAACvO,EAAA,EAAD,CAAU3B,MAAM,GAAGkF,UAAQ,GAA3B,eACCyL,EAAMpS,KAAI,SAACnC,GAAD,OACT,kBAACuF,EAAA,EAAD,CAAU3B,MAAO5D,EAAKgV,cAAe9S,IAAG,UAAKlC,EAAKgV,gBAC/ChV,EAAKgV,qBAMhB,kBAACpV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAYlF,MAAO,CAAE/E,SAAU,SAA/B,uDAIF,kBAAC+D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACmB,EAAA,EAAD,CAAQjJ,KAAK,aAAa4E,KAAK,QAAQsE,QAAQ,WAAWyH,UAAW6L,GAArE,mBC3FGO,GA7E8B,SAACpY,GAmB5C,OACE,kBAAC,GAAD,CACEmX,QAAM,EACN5B,SAA6B,WAAnBvV,EAAMuV,SAChB1J,SAAU,kBAAM7L,EAAM6L,SAAS,YAE/B,kBAAC,GAAD,CAAkBuL,gBAAc,kBAAkBjc,GAAG,kBACnD,kBAAC6N,EAAA,EAAD,KAAa,gBAEf,kBAAC,GAAD,KACE,kBAAClG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAYlF,MAAO,CAAE/E,SAAU,SAA/B,oEAIF,kBAAC+D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACmB,EAAA,EAAD,CACEjJ,KAAK,kBACL4E,KAAK,QACLsE,QAAQ,WACRC,QAvCa,SACvB8B,GAEAA,EAAMgI,iBACN,IAAM+J,EAA8BC,SAASC,eAAe,UAC5DF,GAAWA,EAAQG,UAoCR,gBAEH,2BACErd,GAAG,SACHqF,KAAK,OACLiY,OAAO,IACP5M,SAvCe,SAACvF,GAC1BA,EAAMgI,iBACN,IAAM+J,EAAUC,SAASC,eAAe,UAClCG,EAAsB,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAASK,MAEpCA,GAASA,EAAM,IACjB1Y,EAAM2Y,sBAAsBD,EAAM,KAkC1B5U,MAAO,CAAEwR,QAAS,WAGtB,kBAACxS,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACe,EAAA,EAAD,CACEE,OAAQ,EACRN,MAAO,CAAEpG,OAAQ,OAAQyG,YAAayU,KAAK,KAAM/Z,SAAU,SAE3D,kBAACoK,GAAA,EAAD,CAAOhJ,KAAK,QAAQiJ,aAAW,wBAC7B,kBAACI,GAAA,EAAD,KACGtJ,EAAM6Y,cAAcxT,KAAI,SAACC,GAAD,OACvB,kBAAC8D,GAAA,EAAD,CAAUhE,IAAKE,EAAIjK,MACjB,kBAACgO,GAAA,EAAD,CAAWE,UAAU,KAAKC,MAAM,OAC7BlE,EAAIjK,MAEP,kBAACgO,GAAA,EAAD,CAAWyP,MAAM,SAASxT,EAAIrF,kBChD9CiP,GAAaC,IAAMC,YAAW,SAClCpP,EACAqP,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASrP,OAsIhC+Y,GAnImC,SAAC/Y,GAAW,IAAD,EAC/Bb,oBAAkB,GADa,mBACpD6O,EADoD,KAC5C2B,EAD4C,OAE3BxQ,mBAAiB,UAFU,mBAEpDoW,EAFoD,KAE1CyD,EAF0C,OAGjB7Z,mBAAiB,IAHA,mBAGpD0Z,EAHoD,KAGrCI,EAHqC,OAIzB9Z,oBAAkB,GAJO,mBAIpD+Z,EAJoD,KAIzCC,EAJyC,OAK/Bha,mBAAqB,IALU,mBAKpDiB,EALoD,KAK5CuC,EAL4C,KAMrDiI,EAAkClO,IAExC8C,qBAAU,WACH0Z,IACY,IAAIE,YAAYpe,EAAW,eACnCqe,UAAY,SAAC/S,GAClB,IAAMgT,EAAaC,KAAKC,MAAMlT,EAAMpG,MACpCyC,GAAU,SAAC8W,GAAD,OAAWA,EAAMC,OAAOJ,OAGpCH,GAAa,MAEd,CAACD,EAAW9Y,IAaf,OACE,kBAACsQ,GAAA,EAAD,CACEvI,KAAMnI,EAAM0K,OACZiG,oBAAqBzB,GACrBhH,aAAW,EACXG,QAAS,kBAAMrI,EAAMqI,WACrBqJ,kBAAgB,qBAChBiI,mBAAiB,2BACjB/O,QAAS,CAAEgG,MAAOhG,EAAQvM,eAE1B,kBAACub,GAAA,EAAD,CACEC,mBAAiB,EACjB/V,MAAO,CAAEnG,gBAAiBib,KAAK,KAAMxb,MAAO,OAAQ2B,SAAU,KAFhE,qBAKE,kBAAC6I,GAAA,EAAD,CACEpD,QAAS,kBAAMxE,EAAMqI,WACrBvE,MAAO,CAAEvF,SAAU,WAAYC,MAAO,GAAIxB,QAAS,IAEnD,kBAAC,KAAD,CAAkB8G,MAAO,CAAE1G,MAAO,YAGtC,kBAAC2T,GAAA,EAAD,KACE,kBAACjO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEoS,SAAUA,EACVvH,OAAQA,EACRnC,SAAU,SAAC/E,GAAD,OAAmBkS,EAAYlS,IACzCmQ,eAAgB,SAACnQ,GAAD,OAAmB6I,EAAU7I,OAGjD,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACE6K,OAAQA,EACRuH,SAAUA,EACV0B,eAAgB,SAACnQ,GAAD,OAAmB6I,EAAU7I,IAC7C+E,SAAU,SAAC/E,GAAD,OAAmBkS,EAAYlS,OAG7C,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEoS,SAAUA,EACVsD,cAAeA,EACfhN,SAAU,SAAC/E,GAAD,OAAmBkS,EAAYlS,IACzC6R,sBAAuB,SAACmB,GAAD,OACrBb,GAAiB,SAACpP,GAAD,6BAAmBA,GAAnB,CAA8BiQ,aAMzD,kBAAChX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACe,EAAA,EAAD,CACEE,OAAQ,EACRN,MAAO,CACLpG,OAAQ,QACRC,gBAAiB,OACjBkB,SAAU,SAGZ,kBAACoK,GAAA,EAAD,CAAOhJ,KAAK,QAAQiJ,aAAW,gBAC7B,kBAACI,GAAA,EAAD,KACGlJ,EAAOiF,KAAI,SAACC,EAAcyE,GAAf,OACV,kBAACX,GAAA,EAAD,CAAUhE,IAAKE,EAAIjK,KAAO0O,GACxB,kBAACV,GAAA,EAAD,CACEE,UAAU,KACVC,MAAM,MACN1F,MAAO,CAAE1G,MAAO,OAAQiY,aAAc,IAErC/P,EAAIjK,MAEP,kBAACgO,GAAA,EAAD,CAAWyP,MAAM,QAAQhV,MAAO,CAAE1G,MAAO,OAAQiY,aAAc,IAC5D/P,EAAIrF,MAEP,kBAACoJ,GAAA,EAAD,CAAWyP,MAAM,QAAQhV,MAAO,CAAE1G,MAAO,OAAQiY,aAAc,IAC5D/P,EAAIyU,kBAUvB,kBAAC/E,GAAA,EAAD,KACE,kBAAC1Q,EAAA,EAAD,CAAQE,QAAS,kBAAMxE,EAAMqI,WAAWjL,MAAM,WAA9C,UAGA,kBAACkH,EAAA,EAAD,CAAQE,QAvGM,WAClB,IAAMjI,EAAW,IAAIyd,SAErBnB,EAActL,SAAQ,SAACuM,GACrBvd,EAAS0d,OAAO,SAAUH,MAG5Bxd,EAAWC,GACX4c,GAAa,IA+FqB/b,MAAM,WAApC,c,UCpJF8c,GAAY,CAChB,CAAE7e,KAAM,SAAUyL,MAAO,4CACzB,CAAEzL,KAAM,YAAayL,MAAO,2DAC5B,CAAEzL,KAAM,UAAWyL,MAAO,iEAGtBoI,GAAaC,IAAMC,YAAW,SAClCpP,EACAqP,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASrP,OAyChCma,GAtC6B,SAAC,GAKtC,IAJLhS,EAII,EAJJA,KACA9M,EAGI,EAHJA,KACAgN,EAEI,EAFJA,QACA+R,EACI,EADJA,cACI,EACsBjb,mBAAiB,IADvC,mBACG2H,EADH,KACU+N,EADV,KAGJrV,qBAAU,WACR,GAAInE,EAAM,CACR,IAAMgf,EAAMH,GAAUzD,MAAK,SAACjO,GAAD,OAAQA,EAAGnN,OAASA,KAC/CwZ,EAASwF,EAAIvT,UAEd,CAACzL,IAOJ,OACE,kBAACqV,GAAA,EAAD,CAAQvI,KAAMA,EAAME,QAASA,EAASsI,oBAAqBzB,IACzD,kBAAC0K,GAAA,EAAD,gBACA,kBAAC7I,GAAA,EAAD,KACE,kBAACuJ,GAAA,EAAD,KAAoBxT,IAEtB,kBAACkO,GAAA,EAAD,KACE,kBAAC1Q,EAAA,EAAD,CAAQE,QAAS6D,EAASjL,MAAM,WAAhC,UAGA,kBAACkH,EAAA,EAAD,CAAQE,QAfM,WAClB4V,IACA/R,KAakCjL,MAAM,UAAUmd,WAAS,GAAvD,SCjCF7d,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CuY,KAAM,CACJxX,gBAAiB6c,KAAO5c,KAAK,KAC7BwQ,UAAW,OAEbpP,YAAa,CACXC,OAAQrC,EAAMK,QAAQ,IAExBwd,WAAY,CACVrb,MAAO,OAETsb,YAAa,CACXtb,MAAO,MACPgL,WAAYxN,EAAMK,QAAQ,IAE5B0d,MAAO,CACLvQ,WAAYxN,EAAMK,QAAQ,IAE5B2d,UAAW,CACTjd,gBAAiB6c,KAAO5B,KAAK,KAC7Bxb,MAAO,OACPJ,QAAS,SACTqH,aAAc,OA0THwW,GAtTgB,SAAC7a,GAAgB,IAAD,EACnBb,oBAAkB,GADC,mBACtCoY,EADsC,KAC/BuD,EAD+B,OAEjB3b,mBAAmB,IAFF,mBAEtCwY,EAFsC,KAE9BC,EAF8B,OAGnBzY,oBAAkB,GAHC,mBAGtCuL,EAHsC,KAG9B2L,EAH8B,OAIjBlX,oBAAkB,GAJD,mBAItC4b,EAJsC,KAI7BC,EAJ6B,OAKjB7b,oBAAkB,GALD,mBAKtC8b,EALsC,KAK7BC,EAL6B,OAMb/b,oBAAkB,GANL,mBAMtC6M,EANsC,KAM5BmP,EAN4B,OAOfhc,mBAAwB,MAPT,mBAOtCic,EAPsC,KAO7BC,EAP6B,KAQrCC,EAAoBC,cAApBD,gBACF1Q,EAAUlO,KAEhB8C,qBAAU,WACJyb,IACc,WAAZG,EACFI,IACqB,cAAZJ,EACTK,IAEAC,IAEFL,EAAW,SAGZ,CAACJ,IAEJzb,qBAAU,WACR2b,EAAyB,eAAbnb,EAAM2b,MACjB,CAAC3b,EAAM2b,KAEVnc,qBAAU,WACRuY,MAEC,CAAC/X,EAAMgO,SAEV,IAAM4N,EAAa,kBAAMvF,GAAS3L,IAQ5BwD,EAAc,SAAC5H,GACnB,IAAMjL,EAAOiL,EAAM5B,cAAcmX,aAAa,QAC9CR,EAAWhgB,GACX2f,GAAUD,IAGNhD,EAAW,uCAAG,gCAAArc,EAAA,sEAEVD,EAAS,CAAEuS,OAAQhO,EAAMgO,QAFf,SAGOrS,GAAMK,IAAI,yBAA0B,CAAEP,WAH7C,OAGVyX,EAHU,OAIVqE,EAAQrE,EAAShT,KAAK4J,OAAS,EAAIoJ,EAAShT,KAAK,GAAG+X,UAAY,EAEtEL,EAAU1E,EAAShT,MACnB4a,EAASvD,GAPO,kDAShBK,EAAU,IATM,0DAAH,qDAaX4D,EAAY,uCAAG,4BAAA9f,EAAA,6DACbD,EAAS,CACbuS,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,QACfzG,IAAK7G,EAAM6G,IACXnB,IAAK1F,EAAM0F,IACXwH,OAAQlN,EAAMkN,QANG,kBAUXvR,GAAMC,KAAK,qBAAsBH,GAVtB,OAWjB6f,EAAgB,wCAAyC,CACvD/W,QAAS,YAZM,gDAejB+W,EAAgB,0BAA2B,CACzC/W,QAAS,UAhBM,yBAmBjBvE,EAAM8b,YAnBW,4EAAH,qDAuBZL,EAAe,uCAAG,4BAAA/f,EAAA,6DAChBD,EAAS,CACbuS,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,SAHK,kBAOd3R,GAAMC,KAAK,kBAAmBH,GAPhB,OAQpB6f,EAAgB,wDAAyD,CACvE/W,QAAS,YATS,gDAYpB+W,EAAgB,+BAAgC,CAC9C/W,QAAS,UAbS,yBAgBpBvE,EAAM8b,YAhBc,4EAAH,qDAoBfJ,EAAa,uCAAG,4BAAAhgB,EAAA,6DACdD,EAAS,CACbuS,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,SAHG,kBAOZ3R,GAAMC,KAAK,eAAgBH,GAPf,OAQlB6f,EAAgB,uBAAwB,CACtC/W,QAAS,YATO,gDAYlB+W,EAAgB,qBAAsB,CACpC/W,QAAS,UAbO,yBAgBlBvE,EAAM8b,YAhBY,4EAAH,qDAoBnB,OACE,oCACE,kBAAChZ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,aACRC,WAAW,SACXhG,QAAS,EACT6N,UAAWF,EAAQuK,MAEnB,kBAACrS,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG2H,UAAWF,EAAQ+P,OACnC,kBAAC7X,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6F,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACyE,GAAA,EAAD,CAAYpD,QAASoX,GACnB,kBAAC,KAAD,CAAiB7c,SAAS,QAAQ+L,UAAWF,EAAQgQ,cAGzD,kBAAC9X,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWF,EAAQ5L,YACnBuM,WAAS,GAET,kBAACG,GAAA,EAAD,CAAYvQ,GAAG,yBAAf,YACA,kBAACwQ,EAAA,EAAD,CACEC,QAAQ,wBACRzQ,GAAG,2BACH2L,MAAO9G,EAAM2b,GACb9P,SAAU,SAACpH,GAAD,OAAOzE,EAAM+b,QAAQtX,EAAE8B,OAAOO,QACxCiF,aAAa,GACbjN,MAAM,YAEN,kBAAC2J,EAAA,EAAD,CAAUrD,IAAI,aAAa0B,MAAM,cAAjC,WAGA,kBAAC2B,EAAA,EAAD,CAAUrD,IAAI,aAAa0B,MAAM,cAAjC,mBAQV,kBAAChE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC+I,GAAA,EAAD,CACErL,MAAM,yBACNmb,qBAAsBhQ,EACtBiQ,OAAK,GAEL,kBAACrU,GAAA,EAAD,CAAYvM,KAAK,SAAS2Q,SAAUA,EAAUxH,QAAS0J,GACrD,kBAAC,KAAD,SAIN,kBAACpL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC+I,GAAA,EAAD,CACErL,MAAM,yCACNmb,qBAAsBhQ,EACtBiQ,OAAK,GAEL,kBAACrU,GAAA,EAAD,CAAYvM,KAAK,YAAY2Q,SAAUA,EAAUxH,QAAS0J,GACxD,kBAAC,KAAD,SAIN,kBAACpL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC+I,GAAA,EAAD,CACErL,MAAM,qCACNmb,qBAAsBhQ,EACtBiQ,OAAK,GAEL,kBAACrU,GAAA,EAAD,CAAYvM,KAAK,UAAU2Q,SAAUA,EAAUxH,QAAS0J,GACtD,kBAAC,KAAD,WAMV,kBAACpL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACsI,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWoR,aAAKtR,EAAQ5L,YAAa4L,EAAQ6P,aAE7C,kBAAC/O,GAAA,EAAD,CAAYvQ,GAAG,8BAAf,UACA,kBAACwQ,EAAA,EAAD,CACEC,QAAQ,6BACRzQ,GAAG,uBACH2L,MAAO9G,EAAMgO,OACbnC,SAAU,SAACpH,GAAD,OAAOzE,EAAMyO,SAAShK,EAAE8B,OAAOO,QACzCiF,aAAa,GACbjN,MAAM,UAEN,kBAAC2J,EAAA,EAAD,CAAU3B,MAAM,GAAGkF,UAAQ,GACzB,qCAEDhM,EAAM6M,QAAQxH,KAAI,SAACnC,GAAD,OACjB,kBAACuF,EAAA,EAAD,CAAUrD,IAAKlC,EAAKwL,YAAa5H,MAAO5D,EAAKyL,WAC1CzL,EAAKwL,kBAKd,kBAACjD,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWoR,aAAKtR,EAAQ5L,YAAa4L,EAAQ8P,cAE7C,kBAAChP,GAAA,EAAD,CAAYvQ,GAAG,+BAAf,WACA,kBAACwQ,EAAA,EAAD,CACEC,QAAQ,8BACRzQ,GAAG,wBACH2L,MAAO9G,EAAMsN,QACbzB,SAAU,SAACpH,GAAD,OAAOzE,EAAM4O,UAAUnK,EAAE8B,OAAOO,QAC1CiF,aAAa,GACbjN,MAAM,WAEN,kBAAC2J,EAAA,EAAD,CAAU3B,MAAM,GAAGkF,UAAQ,GACzB,qCAEDhM,EAAM+M,SAAS1H,KAAI,SAACnC,GAAD,OAClB,kBAACuF,EAAA,EAAD,CAAUrD,IAAG,kBAAalC,EAAK6J,UAAYjG,MAAO5D,EAAK6J,UACpD7J,EAAK6J,eAKd,kBAACtB,GAAA,EAAD,CACElH,QAAQ,WACRtE,KAAK,QACL6K,UAAWoR,aAAKtR,EAAQ5L,YAAa4L,EAAQ8P,cAE7C,kBAAChP,GAAA,EAAD,cACA,kBAACC,EAAA,EAAD,CACE7M,MAAM,QACNgI,MAAOyQ,EACP1L,SA/NY,SAACvF,GAAD,OAAWwU,EAASxU,EAAMC,OAAOO,QAgO7CiF,aAAa,IAEb,kBAACtD,EAAA,EAAD,CAAU3B,OAAQ,EAAGkF,UAAQ,GAC3B,qCAED2L,EAAOtS,KAAI,SAACnC,GAAD,OACV,kBAACuF,EAAA,EAAD,CAAU3B,MAAO5D,EAAK+U,SAAU7S,IAAKlC,EAAK+U,UACvC/U,EAAK+U,gBAMhB,kBAACnV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG2H,UAAWF,EAAQ+P,OACnC,kBAACtM,GAAA,EAAD,CAAmBvH,MAAO9G,EAAMiK,QAAS4B,SAAU,SAACpH,GAAD,OAAOzE,EAAMwE,QAAQC,KACtE,kBAAC+J,GAAA,EAAD,CACErT,GAAG,oBACHE,KAAK,WACLyL,MAAM,oBACN7G,KAAK,SAJP,mBAQA,kBAACuO,GAAA,EAAD,CACErT,GAAG,wBACHE,KAAK,MACLyL,MAAM,wBACN7G,KAAK,SAJP,uBAYR,kBAAC,GAAD,CAAcyK,OAAQA,EAAQrC,QAASuT,IACvC,kBAAC,GAAD,CACEzT,KAAM4S,EACN1f,KAAM+f,EACN/S,QAzQc,kBAAM2S,GAAUD,IA0Q9BX,cA5Qc,kBAAMc,GAAUD,QCrDhCzO,GAAoB,CACxB1G,cAAc,EACdC,cAAc,GAGVoW,GAAY,CAChB3e,YAAa,OACbL,aAAc,UAGV+R,GAAaC,IAAMC,YAAW,SAClCpP,EACAqP,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASrP,OAkXhC0M,GA/WiC,SAAC1M,GAAgB,IAAD,EAC1Bb,mBAAiB,WADS,mBACvDkM,EADuD,KAC3CsB,EAD2C,OAEhCxN,mBAAiB,qBAFe,mBAEvD8K,EAFuD,KAE9C2C,EAF8C,OAGhCzN,mBAAmB,IAHa,mBAGvD0N,EAHuD,KAG9CC,EAH8C,OAI9B3N,mBAAmB,IAJW,mBAIvD4N,EAJuD,KAI7CC,EAJ6C,OAK1C7N,mBAAiB,cALyB,mBAKvDwc,EALuD,KAKnDS,EALmD,OAMxCjd,mBAAe,CAAEgB,EAAGH,EAAM6G,IAAKvG,EAAGN,EAAM8G,QANA,mBAMvDb,EANuD,KAMlDgH,EANkD,OAOlC9N,mBAAoB,IAPc,mBAOvD+N,EAPuD,KAO/CC,EAP+C,OAQhChO,mBAASqN,IARuB,mBAQvD3H,EARuD,KAQ9CC,EAR8C,OASlC3F,mBAAc,IAToB,mBASvDmL,EATuD,KAS/C8C,EAT+C,QAUpCjO,oBAAkB,GAVkB,qBAUvD6H,GAVuD,MAUhDqG,GAVgD,SAWpClO,mBAAiB,CAAEC,MAAO,MAAO1B,OAAQ,QAXL,qBAWvD2e,GAXuD,MAWhDC,GAXgD,SAYhCnd,oBAAS,GAZuB,qBAYvDoU,GAZuD,MAY9CgJ,GAZ8C,MAaxD3R,GAAUlO,IACV8f,GAAUC,iBAAY,MACtBzX,GAAYhF,EAAME,KAAK+K,WACvBhG,GAAyB,GACzBwC,GAAazH,EAAME,KAAKpB,MAE9BU,qBAAU,WACRtD,IACG0G,MAAK,SAAC/G,GACLiR,EAAWjR,EAAIqE,MACfF,EAAMyO,SAAS5S,EAAIqE,KAAK,GAAGyO,cAE5B9L,OAAM,SAACgL,GAAD,OAAcf,EAAW,SAEjC,CAAC9M,EAAM0c,UAAWf,IAErBnc,qBAAU,WACJ0N,EAAOpD,OAAS,GAClBtO,EAAS,CACPkG,SAAU1B,EAAM0B,SAChBwL,OAAQA,EACRI,QAAStN,EAAMsN,UAEd1K,MAAK,SAAC/G,GACL0O,OAAOC,KAAK3O,EAAIqE,MAAMqN,SAAQ,SAAC/E,GAC7B,IAAIgF,EAAgB3R,EAAIqE,KAAKsI,GAAT,KAChBiF,EAAiB,GACjBC,EAAsB,GACtBC,EAAiB,GAGP,SAAVH,GACF3R,EAAIqE,KAAKsI,GAAT,KAAqB+E,SAAQ,SAACrK,EAAgB6G,GAC5C0D,EAAKG,KAAK7D,EAAM,GAChB2D,EAAUE,KAAK1K,EAAK,IACpByK,EAAKC,KAAK1K,EAAK,OAGjBkK,GAAU,SAACvD,GAAD,mBAAC,eACNA,GADK,kBAEPrB,EAAK,CACJnI,QAASoN,EACTlN,QAASmN,EACT/M,UAAWgN,EACXnN,KAAMgN,EACN3M,MAAOhF,EAAIqE,KAAKsI,GAAT,aAGQ,cAAVgF,GACTJ,GAAU,SAACvD,GAAD,mBAAC,eACNA,GADK,kBAEPrB,EAAK,CACJnI,QAASxE,EAAIqE,KAAKsI,GAAT,KACThI,KAAMgN,EACN3M,MAAOhF,EAAIqE,KAAKsI,GAAT,kBAMhB3F,OAAM,WACLuK,EAAU,SAGf,CAACpN,EAAM0B,SAAU1B,EAAMsN,QAASJ,IAEnC1N,qBAAU,WACR,IAAIuO,EACoB,KAAtB/N,EAAMwF,YAAqBxF,EAAMwF,YAAc,GAE3C/J,EAAS,CACbqS,cAAe7H,EAAI9F,EACnB4N,mBACAC,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,SAGjBlR,EAAUX,GACPmH,MAAK,SAAC/G,GAAD,OAAcsR,EAAUtR,EAAIqE,SACjC2C,OAAM,kBAAMsK,EAAU,SACxB,CAACnN,EAAMwF,cAEVhG,qBAAU,WACRnD,EAAS,CAAEsgB,SAAUhB,IAAM9Y,OAAM,SAACgL,GAAD,OAASuO,EAAM,iBAChDxP,EAAW,uBACV,CAAC+O,IAEJnc,qBAAU,WACR,IAAMoX,EAAS,uCAAG,8BAAAlb,EAAA,sEAERD,EAAS,CAAEuS,OAAQhO,EAAMgO,QAFjB,SAGSrS,GAAMC,KAAK,oBAAqBH,GAHzC,OAGRyX,EAHQ,OAKdlG,EAAYkG,EAAShT,MACrBF,EAAM4O,UAAUsE,EAAShT,KAAK,GAAG6M,UANnB,gDAQdC,EAAY,IARE,yDAAH,qDAWE,KAAjBhN,EAAMgO,QAAiB4I,MACtB,CAAC5W,EAAMgO,SAEVxO,qBAAU,WACJQ,EAAME,KAAK+K,WAAWnB,OAAS,GACjCmD,EAAO,CACL9M,EAAGH,EAAME,KAAK+K,WAAW,GAAGgD,SAC5B3N,EAAGN,EAAME,KAAK+K,WAAW,GAAGnE,UAE/B,CAAC9G,EAAME,OAEVV,qBAAU,WACR,GAAIgd,GAAS,CACX,IAAIvc,EAAOP,OAAOkd,iBAAiBJ,GAAQK,SAC3CP,GAAS,CAAEld,MAAOa,EAAKb,MAAO1B,OAAQuC,EAAKvC,YAE5C,CAAC8e,GAASlS,IAEb,IAaM4D,GAAc,SAAC5H,GACnB,GAAIA,EAAO,CACT,IAAM7K,EAAS,CACbqS,cAAexH,EAAM6H,OAAO,GAAGhO,EAC/B4N,iBAAkB/N,EAAM0F,IACxBsI,OAAQhO,EAAMgO,OACdV,QAAStN,EAAMsN,SAGjBL,EAAO,CAAE9M,EAAGmG,EAAM6H,OAAO,GAAGhO,EAAGG,EAAGgG,EAAM6H,OAAO,GAAG7N,IAClDlE,EAAUX,GACPmH,MAAK,SAAC/G,GAAD,OAAcsR,EAAUtR,EAAIqE,SACjC2C,OAAM,SAACgL,GAAD,OAAcV,EAAU,SAIrC,OACE,oCACE,kBAAC9C,EAAA,EAAD,CACEgF,IAAKmN,GACL1R,UAAWF,GAAQrN,gBACnBuG,MAAO,CAAEjF,SAAU,WAEnB,kBAACiE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAAShG,QAAS,GAC5D,kBAAC6f,GAAD,CACEnB,GAAIA,EACJ3N,OAAQhO,EAAMgO,OACdnB,QAASA,EACTS,QAAStN,EAAMsN,QACfP,SAAUA,EACV9C,QAASA,EACTpD,IAAKZ,EAAI9F,EACTuF,IAA2B,KAAtB1F,EAAMwF,YAAqBxF,EAAMwF,YAAcxF,EAAM0F,IAC1DwH,OAAQA,EACR4O,UAAW,kBAAM9b,EAAM8b,aACvBC,QAAS,SAACjV,GAAD,OAAmBsV,EAAMtV,IAClC2H,SAAU,SAAC3H,GAAD,OAAmB9G,EAAMyO,SAAS3H,IAC5C8H,UAAW,SAAC9H,GAAD,OAAmB9G,EAAM4O,UAAU9H,IAC9CtC,QA9CiB,SAAC8B,GAC1BA,EAAMgI,iBADmC,MAEpBhI,EAAM5B,cAAnBvJ,EAFiC,EAEjCA,GAAIE,EAF6B,EAE7BA,KAEZuR,EAAWzR,GACX6E,EAAMuO,WAAWlT,MA2CX,kBAACyH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGW,MAAOqY,IACvB,kBAAChS,EAAA,EAAD,CAAMrG,MAAO,CAAEpG,OAAO,QAAD,OAAU2e,GAAM3e,OAAhB,aACnB,kBAAC2M,EAAA,EAAD,KACE,kBAACvH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS/F,QAAS,GACxC,kBAAC6F,EAAA,EAAD,CACEI,MAAI,EACJC,GAAI,GACJW,MAAO,CAAEiF,UAAW,SAAUxK,SAAU,aAExC,kBAACyK,EAAA,EAAD,CACElF,MAAO,CACL/E,SAAU,GACVge,WAAY,SAGD,sBAAZ9S,EAAA,oCANH,yBAWA,kBAAC,GAAD,CACE7J,OAAQJ,EAAME,KACduP,WAAYzP,EAAMI,OAClByE,QAASA,EACTwG,WAAYA,EACZ3F,IAAK1F,EAAMwF,YACXyG,KAAMjM,EAAMiM,KACZlB,QAAQ,EACR8D,UAjFA,SAACvI,GAAgB,IAAD,EACRA,EAAM5B,cAAxBrJ,EAD0B,EAC1BA,KAAMwJ,EADoB,EACpBA,QACdC,GAAW,SAAC+E,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCxO,EAAOwJ,QAgFjCmG,QAAS,kBAAMuR,IAAW,IAC1BhQ,UAAW,kBAAMc,IAAUrG,KAC3B8E,MAAO,SAAChF,GAAD,OAAgB9G,EAAM8L,MAAMhF,IACnCwE,aAAc,SAAC7G,GAAD,OACZkI,EAAclI,EAAEC,cAAcrJ,UAIpB,YAAfgQ,EACC,kBAACvI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEjD,KAAMF,EAAMI,OACZ0O,SAAU9O,EAAM8O,SAChBC,YAAa/O,EAAM+O,YACnBlI,IAAK7G,EAAM6G,IACXnB,IACwB,KAAtB1F,EAAMwF,YACFxF,EAAMwF,YACNxF,EAAM0F,IAEZoB,MAAO9G,EAAM8G,MACbE,MAAOA,GACPgI,UAAU,EACVC,OAAO,EACPjK,UAAWhF,EAAMI,OAAO6K,WACxBhG,aAAcA,GACdwC,WAAYA,GACZ5C,QAASA,EACT5E,KAAMoc,GACN9I,SAAS,EACT/O,QAAS0J,MAIb,kBAACpL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEjD,KAAMF,EAAME,KACZ4O,SAAU9O,EAAM8O,SAChBC,YAAa/O,EAAM+O,YACnBlI,IAAKZ,EAAI9F,EACTuF,IACwB,KAAtB1F,EAAMwF,YACFxF,EAAMwF,YACNxF,EAAM0F,IAEZoB,MAAO9G,EAAM8G,MACbkI,UAAU,EACVC,OAAO,EACPjK,UAAWA,GACXC,aAAcA,GACdmB,WAAYqB,GACZxB,IAAKA,EACLhG,KAAMoc,GACNxX,QAASA,EACT0O,SAAS,EACT/O,QAAS0J,UAQJ,IAAlBhB,EAAOpD,QAAgB,kBAAChH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACtCoH,OAAOC,KAAKF,GAAQR,OAAS,GAC5B,kBAAC,GAAD,CACEQ,OAAQA,EACRL,QAASA,EACTvI,SAAU1B,EAAM0B,SAChBzB,KAAMoc,OAKb9I,IACC,kBAAC7C,GAAA,EAAD,CACEvI,KAAMoL,GACN5C,oBAAqBzB,GACrB7G,QAAS,kBAAMkU,IAAW,IAC1B5H,WAAY,CACV7Q,MAAO,CACLpG,OAAoD,IAA5CqJ,WAAWsV,GAAMjd,MAAMoU,QAAQ,KAAM,KAC7CvV,SAAsD,GAA5C8I,WAAWsV,GAAMjd,MAAMoU,QAAQ,KAAM,KAC/CzW,SAAsD,GAA5CgK,WAAWsV,GAAMjd,MAAMoU,QAAQ,KAAM,QAInD,kBAAC3C,EAAA,EAAD,MACA,kBAAC,KAAD,KACE,kBAAC7H,EAAA,EAAD,CAAYO,UAAU,SAAShF,QAAQ,MACxB,sBAAZ0F,EAAA,oCADH,yBAMA,kBAACrC,GAAA,EAAD,CACEsB,aAAW,QACX4B,UAAWF,GAAQtM,eACnBkG,QAAS,kBAAM+X,IAAW,KAE1B,kBAACzL,GAAA,EAAD,QAGJ,6BACA,kBAACC,GAAA,EAAD,KACkB,YAAf1F,EACC,kBAACvI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEjD,KAAMF,EAAMI,OACZ0O,SAAU9O,EAAM8O,SAChBC,YAAa/O,EAAM+O,YACnBlI,IAAK7G,EAAM6G,IACXnB,IAA2B,KAAtB1F,EAAMwF,YAAqBxF,EAAMwF,YAAcxF,EAAM0F,IAC1DoB,MAAO9G,EAAM8G,MACbE,MAAOA,GACPgI,UAAU,EACVC,OAAO,EACPjK,UAAWhF,EAAMI,OAAO6K,WACxBhG,aAAcA,GACdwC,WAAYA,GACZ5C,QAASA,EACT5E,KAAMoc,GACN9I,SAAS,EACT/O,QAAS0J,MAIb,kBAACpL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEjD,KAAMF,EAAME,KACZ4O,SAAU9O,EAAM8O,SAChBC,YAAa/O,EAAM+O,YACnBlI,IAAK7G,EAAM6G,IACXnB,IAA2B,KAAtB1F,EAAMwF,YAAqBxF,EAAMwF,YAAcxF,EAAM0F,IAC1DoB,MAAO9G,EAAM8G,MACbkI,UAAU,EACVC,OAAO,EACPjK,UAAWA,GACXC,aAAcA,GACdmB,WAAYqB,GACZxB,IAAKA,EACLhG,KAAMoc,GACNxX,QAASA,EACT0O,SAAS,EACT/O,QAAS0J,UCpRZ8O,GAxHU,WAAO,IAAD,EACD7d,mBAAS,IADR,mBACtBiB,EADsB,KACduC,EADc,OAEOxD,mBAAS,IAFhB,mBAEtBsQ,EAFsB,KAEVC,EAFU,OAGDvQ,mBAAiB,GAHhB,mBAGtB6O,EAHsB,KAGd2B,EAHc,OAICxQ,mBAAiB,GAJlB,mBAItBmO,EAJsB,KAIbsC,EAJa,OAKSzQ,mBAAiB,IAL1B,mBAKtBqG,EALsB,KAKTqK,EALS,OAML1Q,mBAAqB,IANhB,mBAMtB8M,EANsB,KAMhB6D,EANgB,OAOG3Q,mBAAiB,YAPpB,mBAOtBuC,EAPsB,KAOZqO,EAPY,OAQK5Q,oBAAkB,GARvB,mBAQtBud,EARsB,KAQXO,EARW,OASK9d,oBAAkB,GATvB,mBAStB6Q,EATsB,KASXC,EATW,OAUS9Q,mBAAS,GAVlB,mBAUtB4P,EAVsB,KAUTmB,GAVS,QAWL/Q,mBAAiB,IAXZ,qBAWtBgR,GAXsB,MAWhBC,GAXgB,MAavBC,GADW,mBACOnO,MAAM,KAAK,GAE7B0I,GAAUlO,IAEhB8C,qBAAU,WACR4Q,GAAQ,IACRnU,EAAa,CACXuE,KANgB,UAOhBwN,OAAQA,EACRV,QAASA,EACT5L,aAECkB,MAAK,SAAC/G,GAUL,GATA8G,EAAU9G,EAAIqE,KAAKA,MACnBwP,EAAc7T,EAAIqE,KAAKA,MACvBgQ,GAAerU,EAAIqE,KAAK6O,aACxBqB,GAAQvU,EAAIqE,KAAKiQ,MAMb5F,OAAOC,KAAK3O,EAAIqE,KAAKA,MAAMyI,SAAS,cAAe,CACrD,IAAI2H,EAAWzU,EAAIqE,KAAKA,KAAK+K,WAAW5F,KAAI,SAACnC,GAAD,OAAeA,EAAI,eAC3DqN,EAAuB,aAAQ,IAAIC,IAAIF,IAC3CR,EAAQS,EAAYE,YAUvB7N,MAAK,WACJqN,GAAa,MAEjBgN,GAAa,KACZ,CAACjP,EAAQV,EAAS5L,EAAUgb,IAE/Bld,qBAAU,WACR,GAAI+K,OAAOC,KAAKiF,GAAY9G,SAAS,cAAe,CAClD,IAAIoF,EAAoD,KAAhBvI,EAAqBA,EAAc,GACvEtF,EAAOuP,EAAWxE,WAAWrF,QAC/B,SAAC1C,GAAD,OAAeA,EAAKsC,cAAgBuI,KAEtCpL,GAAU,SAACkH,GAAD,mBAAC,eAAyBA,GAA1B,IAAqCoB,WAAY/K,UAE5D,CAACsF,IAYJ,OACE,kBAAC1C,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACkP,EAAA,EAAD,CAAW1I,UAAU,OAAOtL,SAAS,MACnC,kBAACkM,EAAA,EAAD,CAAMW,UAAWF,GAAQtN,UACvB,kBAACuT,EAAA,EAAD,MACA,kBAACqB,EAAA,EAAD,CACErR,MACE,kBAACmI,EAAA,EAAD,CAAYO,UAAU,KAAKhF,QAAQ,KAAKT,MAAO,CAAE7E,OAAQ,IAAzD,yBAIF6E,MAAO,CAAEnG,gBAAiBib,KAAK,KAAMxb,MAAO,OAAQwB,UAAW,WAE/DoR,GAEE,kBAAC,GAAD,CACElB,SAAU,SAAC3O,EAAQG,EAAQ2Q,GAAjB,OAAqC9Q,GAC/C4O,YAAaA,EACblI,IAAKtL,EACLmK,IAAKnK,EACLuL,MAAOvL,EACP2E,KAAME,EACNA,OAAQqP,EACR/N,SAAUA,EACVwP,aAAcb,GACdF,KAAMA,GACNnC,OAAQA,EACRV,QAASA,EACT9H,YAAaA,EACbyG,KAAMA,EACNyQ,UAAWA,EACXZ,UAAW,kBAAMmB,GAAa,IAC9BnR,MAAO,SAAChF,GAAD,OAAgB+I,EAAe/I,IACtC2H,SAAU,SAAC3H,GAAD,OAAgB6I,EAAU7I,IACpC8H,UAAW,SAAC9H,GAAD,OAAgB8I,EAAW9I,IACtCyH,WAAY,SAACzH,GAAD,OAAgBiJ,EAAYjJ,UCvFzCoW,OAvBf,WACI,IAAMtS,EAAUlO,IAEhB,OACI,kBAACuV,EAAA,EAAD,CAAW1I,UAAU,OAAOtL,SAAS,MACjC,kBAAC4S,EAAA,EAAD,MACA,kBAAC1G,EAAA,EAAD,CAAMW,UAAWF,EAAQ/N,UACrB,kBAACqV,EAAA,EAAD,CACIrR,MACI,kBAACmI,EAAA,EAAD,CAAYO,UAAU,KAAKhF,QAAQ,MAAnC,6BAKR,kBAAC8F,EAAA,EAAD,KACI,kHAEJ,kBAAC,IAAD,CAAM8S,GAAG,IAAIrS,UAAWF,EAAQ1N,MAAhC,mBCTDkgB,GAdO,WACpB,OACE,kBAAC,IAAD,CAAkBC,OAAK,EAACC,SAAU,GAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjU,UAAWkU,KACjC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAAQjU,UAAWsI,KACrC,kBAAC,IAAD,CAAO2L,KAAK,IAAIjU,UAAW2T,SCVrCQ,IAASC,OAAO,kBAAC,GAAD,MAASrF,SAASC,eAAe,W","file":"static/js/main.593bb54a.chunk.js","sourcesContent":["import { MenuSelecter, DashParams } from 'src/types/constatnts';\r\n\r\n// export const BASE_URL = 'http://127.0.0.1:7000';\r\nexport const BASE_URL = 'http://20.80.240.57';\r\n\r\nexport const MENU_ITEMS: MenuSelecter = {\r\n  as_needed_handoff: [\r\n    { id: 0, dataset: 'coverage', name: 'Key Metrics' },\r\n    { id: 1, dataset: 'coverage', name: 'Running Average' },\r\n    { id: 2, dataset: 'coverage_histogram', name: 'Distribution' },\r\n    { id: 3, dataset: 'coverage_histogram', name: 'Statistics Chart' }\r\n  ],\r\n  maximum_powee_handoff: [\r\n    { id: 0, dataset: 'gap', name: 'Key Metrics' },\r\n    { id: 1, dataset: 'gap', name: 'Running Average' },\r\n    { id: 2, dataset: 'gap_histogram', name: 'Distribution' },\r\n    { id: 3, dataset: 'gap_histogram', name: 'Statistics Chart' }\r\n  ]\r\n};\r\n\r\nexport const INIT_PARAMS: DashParams = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 0,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100\r\n};\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport { BASE_URL } from 'src/constants';\r\n\r\nexport const getItems = async (params: any) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(BASE_URL + '/api/get-items', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getPlotItems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-plot');\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getCartItems = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-cart', { params });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getSystems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-systems');\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getSystemVersion = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(\r\n      BASE_URL + '/api/get-versions',\r\n      params\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getFileId = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-file-id', { params });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifySystems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-modify-systems');\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifyVersions = async (params: { [key: string]: number | string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-modify-versions', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifyAttrVersions = async (params: { [key: string]: number }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\r\n      BASE_URL + '/api/get-modify-attr-versions',\r\n      {\r\n        params\r\n      }\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifyModels = async (params: { [key: string]: number }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/get-modify-models', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const changeDB = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(BASE_URL + '/api/change-db', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const createSystem = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(BASE_URL + '/api/create-system', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const createVersion = async (params: { [key: string]: number | string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(BASE_URL + '/api/create-version', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const createModel = async (params: { [key: string]: number | string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(BASE_URL + '/api/create-model', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const processing = async (formData: FormData) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    const res: AxiosResponse = await axios.post(\r\n      BASE_URL + '/api/processing',\r\n      formData,\r\n      config\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  authcard: {\r\n    marginTop: \"10vh\",\r\n    minWidth: \"30vw\",\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  link: {\r\n    paddingRight: theme.spacing(2),\r\n    color: \"#3385ff\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  cartCard: {\r\n    padding: 0,\r\n  },\r\n\r\n  cartCardContent: {\r\n    paddingRight: 0,\r\n    paddingLeft: 0,\r\n    overflowX: \"hidden\",\r\n    height: \"82vh\",\r\n    backgroundColor: grey[50]\r\n  },\r\n\r\n  chartCard: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  searchSelect: {\r\n    textAlignLast: \"center\",\r\n  },\r\n\r\n  tooltip: {\r\n    maxWidth: \"500px\",\r\n  },\r\n\r\n  dialogDeep: {\r\n    minWidth: \"43vw !important\",\r\n    height: \"90vh !important\",\r\n    maxWidth: \"40vw !important\",\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n\r\n  dashDialogDeep: {\r\n    height: \"93vh !important\",\r\n    minWidth: \"80vw !important\",\r\n    maxWidth: \"80vw !important\",\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n\r\n  dialogModify: {\r\n    minWidth: \"40vw !important\",\r\n    maxWidth: \"40vw !important\",\r\n  },\r\n\r\n  dialogCloseBtn: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    zIndex: 100,\r\n  },\r\n\r\n  contentSection: {\r\n    backgroundColor: grey[500],\r\n    height: \"100%\",\r\n    maxHeight: \"55vh\",\r\n    overflow: \"auto\",\r\n  },\r\n\r\n  label: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined as any,\r\n    height: undefined as any,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction LineChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.yTraces,\r\n          name: \"Gap Event Duration\",\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          marker: { color: \"red\" },\r\n        },\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.avgTraces,\r\n          name: \"Running Average\",\r\n          type: \"scatter\",\r\n          marker: { color: \"blue\" },\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.source.title}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title:\r\n            props.dataType === \"coverage\"\r\n              ? \"Coverage Event Number\"\r\n              : \"Gap Event Number\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title:\r\n            props.dataType === \"coverage\"\r\n              ? \"Coverage Duration (Sec.)\"\r\n              : \"Gap Duration (Sec.)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction HistogramChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          name: \"Duration\",\r\n          type: \"histogram\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split('_').join(' ')}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Occurances\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistogramChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction BoxChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.xTraces,\r\n          boxpoints: 'all',\r\n          name: \"\",\r\n          type: \"box\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split(\" \")[0]} Statistics</b>`,\r\n        width: size.width * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        yaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BoxChartSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { Grid, Button, Box } from \"@material-ui/core\";\r\n\r\nimport { getPlotItems } from \"../../../API\";\r\n\r\nconst INIT_SOURCE = {\r\n  heatmap: {},\r\n  intrpl: {},\r\n};\r\n\r\nfunction TerrestrialHeatMap() {\r\n  const [mode, setMode] = useState(\"heatmap\");\r\n  const [source, setSource] = useState(INIT_SOURCE as any);\r\n\r\n  useEffect(() => {\r\n    getPlotItems()\r\n      .then((res: any) => {\r\n        setSource(res.data);\r\n      })\r\n      .catch(() => setSource(INIT_SOURCE));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        {mode === \"heatmap\" ? (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.heatmap.x,\r\n                    y: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.heatmap.x,\r\n                    lon: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"densitymapbox\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.intrpl.x,\r\n                    y: source.intrpl.y,\r\n                    z: source.intrpl.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.intrpl.x,\r\n                    lon: source.intrpl.x,\r\n                    z: source.intrpl.z,\r\n                    type: \"densitymapbox\",\r\n                    hoverinfo: \"skip\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <Box\r\n          borderColor=\"primary.main\"\r\n          border={2}\r\n          borderRadius={5}\r\n          padding={2}\r\n          style={{ zIndex: 1000 }}\r\n        >\r\n          <Button\r\n            name=\"heatmap\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\", marginRight: \"4%\" }}\r\n          >\r\n            {\"Non-Interpolated\"}\r\n          </Button>\r\n          <Button\r\n            name=\"intrpl\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\" }}\r\n          >\r\n            {\"Interpolated\"}\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TerrestrialHeatMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useWindowSize } from \"../../../../utils/util\";\r\n\r\nfunction TwoViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const size: any = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row: any) {\r\n      return row[key];\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"lines\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc, props.dot]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: \"closest\",\r\n        width: size * 0.37,\r\n        height: size * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15,\r\n        },\r\n        xaxis: {\r\n          title: `Altitude (km), Inclination=${props.inc} deg`,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = \"pointer\")}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = \"crosshair\")}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport { useWindowSize } from '../../../../utils/util';\r\n\r\nfunction ThreeViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const size: any = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, 'altitude'),\r\n          y: unpack(plot_rows, 'inclination'),\r\n          z: unpack(plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: unpack(surface_rows, 'altitude'),\r\n          y: unpack(surface_rows, 'inclination'),\r\n          z: unpack(surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, 'altitude'),\r\n          y: unpack(plot_rows, 'inclination'),\r\n          z: unpack(plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === true && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: unpack(surface_rows, 'altitude'),\r\n          y: unpack(surface_rows, 'inclination'),\r\n          z: unpack(surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: 'mesh3d'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: 'markers',\r\n          type: 'scatter3d'\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.reset, props.alt, props.inc, props.value]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: size * 0.37,\r\n        height: size * 0.37,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1\r\n            }\r\n          },\r\n          xaxis: {\r\n            title: 'Altitude (km)',\r\n            type: 'linear',\r\n            range: [Math.max(...unpack(surface_rows, 'altitude')), 0],\r\n            zeroline: false\r\n          },\r\n          yaxis: {\r\n            title: 'Inclination (deg)',\r\n            type: 'linear',\r\n            range: [90, 0],\r\n            zeroline: false\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: 'linear',\r\n            range: [\r\n              Math.min(...unpack(surface_rows, 'value')),\r\n              Math.max(...unpack(surface_rows, 'value'))\r\n            ],\r\n            zeroline: false\r\n          }\r\n        },\r\n        showlegend: false\r\n      }}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThreeViewSection;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction MinusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={() => props.onSelected(props.id)}>\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MinusAddon;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport * as Constants from \"../../constants\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nfunction Selection(props: any) {\r\n  return (\r\n    <Menu\r\n      anchorEl={props.anchorEl}\r\n      keepMounted\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={() => props.onAnchorEl(null)}\r\n    >\r\n      {Constants.MENU_ITEMS[\"as_needed_handoff\"].map((el: any) => (\r\n        <MenuItem\r\n          id={el.id}\r\n          key={el.id}\r\n          onClick={() => props.onSelected(el.id)}\r\n          style={{ backgroundColor: props.selected.includes(el.id) ? grey[300] : \"\" }}\r\n        >\r\n          {el.name}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Divider } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Selection from \"../Select\";\r\n\r\nfunction PlusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={(e) => props.onAnchorEl(e.currentTarget)}>\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n          <Selection\r\n            selected={props.selected}\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PlusAddon;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\n\r\nimport LineChartSection from \"../../../../chart-panel/line-chart-section\";\r\nimport HistogramChartSection from \"../../../../chart-panel/histogram-chart-section\";\r\nimport BoxChartSection from \"../../../../chart-panel/box-chart-section\";\r\n\r\nfunction createData(name: String, value: String) {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Average (sec)\", \"xx\"),\r\n  createData(\"Time-Averaged Gap\", \"xx\"),\r\n  createData(\"Median (sec)\", \"xx\"),\r\n  createData(\"Maximum (minutes)\", \"xx\"),\r\n  createData(\"Minimum (sec)\", \"xx\"),\r\n  createData(\"Average # Gaps Per Orbit\", \"xx\"),\r\n  createData(\"Average # Gaps Per Day\", \"xx\"),\r\n];\r\n\r\nfunction SelectedChartSection(props: any) {\r\n  return (\r\n    <>\r\n      {props.id === 0 && (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={10} style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h6\">{`Key Metrics`}</Typography>\r\n          </Grid>\r\n          <Grid item md={10}>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{`Gap Statistic`}</TableCell>\r\n                  <TableCell>{`Value`}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row: any) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.value}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {props.id === 1 && (\r\n        <LineChartSection source={props.data} dataType={props.dataType} />\r\n      )}\r\n      {props.id === 2 && <HistogramChartSection {...props.data} />}\r\n      {props.id === 3 && <BoxChartSection {...props.data} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectedChartSection;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\n\r\nimport MinusAddon from \"../../../../components/Button/MinusAddon\";\r\nimport PlusAddon from \"../../../../components/Button/PlusAddon\";\r\nimport SelectedChartSection from \"./selected-chart-section\";\r\nimport * as Constants from \"../../../../constants\";\r\n\r\nfunction ChartsLibsSection(props: any) {\r\n  const [selected, setSelected] = useState([1, 2, 3] as any);\r\n  const [anchorEl, setAnchorEl] = useState(null as any);\r\n\r\n  const handleSelected = (id: any, type: string) => {\r\n    if (!selected.includes(id) && type === \"add\") {\r\n      setSelected((prevState: any) => [...prevState, id]);\r\n    } else if (type === \"remove\") {\r\n      setSelected(selected.filter((item: any) => item !== id));\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.length === 0 && (\r\n        <PlusAddon\r\n          type={0}\r\n          selected={selected}\r\n          anchorEl={anchorEl}\r\n          onAnchorEl={(value: any) => setAnchorEl(value)}\r\n          onSelected={(value: any) => handleSelected(value, \"add\")}\r\n        />\r\n      )}\r\n      {selected.map((item: any, idx: number) => {\r\n        let dset = Constants.MENU_ITEMS[props.dataSet][item].dataset;\r\n        return (\r\n          <React.Fragment key={item}>\r\n            <MinusAddon\r\n              id={item}\r\n              type={0}\r\n              selected={selected}\r\n              anchorEl={anchorEl}\r\n              onAnchorEl={(value: any) => setAnchorEl(value)}\r\n              onSelected={(value: any) => handleSelected(value, \"remove\")}\r\n            />\r\n            <Grid item md={12}>\r\n              <Card style={{ marginLeft: \"2.5rem\", marginRight: \"2.5rem\" }}>\r\n                <CardContent>\r\n                  {props.traces[dset] &&\r\n                    Object.keys(props.traces[dset]).length > 0 && (\r\n                      <SelectedChartSection\r\n                        id={item}\r\n                        data={props.traces[dset]}\r\n                        dataType={props.dataType}\r\n                      />\r\n                    )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            {idx === selected.length - 1 && (\r\n              <PlusAddon\r\n                type={0}\r\n                selected={selected}\r\n                anchorEl={anchorEl}\r\n                onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                onSelected={(value: any) => handleSelected(value, \"add\")}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartsLibsSection;\r\n","import React, { useState } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nfunction OptionAddon (props: any) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={4}>\r\n        <Typography\r\n          component=\"p\"\r\n          style={{\r\n            textAlign: \"end\",\r\n            position: \"absolute\",\r\n            left: 10,\r\n            top: 10,\r\n          }}\r\n        >\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"mt-2 mb-2\"\r\n            style={{ fontSize: 11 }}\r\n          >\r\n            {`Graph Options`}\r\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </IconButton>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={6} />\r\n      {props.isDash && (\r\n        <Grid item md={1}>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 10,\r\n              top: 10,\r\n            }}\r\n            onClick={() => props.onChart()}\r\n          >\r\n            <LaunchIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 50,\r\n              top: 12,\r\n            }}\r\n          >\r\n            <CSVLink\r\n              data={props.source.plot_value}\r\n              filename={`Plot-${Date.now()}.csv`}\r\n              className=\"btn btn-primary\"\r\n              target=\"_blank\"\r\n            >\r\n              <Typography component=\"p\" variant=\"body2\">\r\n                {\"csv\"}\r\n              </Typography>\r\n            </CSVLink>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n      {isOpen && (\r\n        <Grid item md={11}>\r\n          <Box\r\n            borderColor=\"primary.main\"\r\n            border={2}\r\n            borderRadius={5}\r\n            padding={2}\r\n          >\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={3}>\r\n                <Grid\r\n                  container\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"2d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        backgroundColor:\r\n                          props.viewMethod !== \"3d_view\"\r\n                            ? grey[300]\r\n                            : \"inherit\",\r\n                      }}\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"2D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      name=\"3d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        backgroundColor:\r\n                          props.viewMethod === \"3d_view\"\r\n                            ? grey[300]\r\n                            : \"inherit\",\r\n                      }}\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"3D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={5} style={{ marginRight: 15 }}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.formControl}\r\n                  fullWidth\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">{`Inclination`}</InputLabel>\r\n                  <Select\r\n                    labelId=\"inclination-label\"\r\n                    id=\"inclination-label\"\r\n                    value={props.inc}\r\n                    onChange={(e) => props.onInc(e.target.value)}\r\n                    label=\"Inclination\"\r\n                    defaultValue=\"\"\r\n                    disabled={props.viewMethod === \"3d_view\"}\r\n                  >\r\n                    <MenuItem value=\"\" disabled>\r\n                      <em>{`None`}</em>\r\n                    </MenuItem>\r\n                    {props.incs.map((item: number) => (\r\n                      <MenuItem key={`inclination-${item}`} value={item}>\r\n                        {item}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={3}>\r\n                <Tooltip\r\n                  title={\r\n                    <Typography\r\n                      gutterBottom\r\n                      component=\"p\"\r\n                      variant=\"body1\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: \"Reset 3D plot\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  placement=\"top-start\"\r\n                  classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"Reset\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled={props.viewMethod === \"2d_view\" ? true : false}\r\n                      onClick={() => props.resetPlot()}\r\n                      fullWidth\r\n                    >\r\n                      {\"Reset\"}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OptionAddon;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent\r\n} from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport TwoViewSection from './two-view-section';\r\nimport ThreeViewSection from './three-view-section';\r\nimport ChartsLibsSection from './charts-libs-section';\r\nimport OptionAddon from '../../../components/Button/OptionAddon';\r\nimport { getItems, getSystems, getSystemVersion, getFileId } from '../../../API';\r\nimport useStyles from '../../../utils/styles';\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true\r\n};\r\n\r\nconst INIT_FILE_ID = [{ id: 1620 }, { id: 1729 }];\r\n\r\nfunction AnalyzeRegressionSection(props: any) {\r\n  const [viewMethod, setViewMethod] = useState('2d_view');\r\n  const [dataSet, setDataSet] = useState('as_needed_handoff' as any);\r\n  const [systems, setSystems] = useState([] as any);\r\n  const [versions, setVersions] = useState([] as any);\r\n  const [dot, setDot] = useState({ x: props.alt, y: props.value } as any);\r\n  const [fileId, setFileId] = useState(INIT_FILE_ID);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [reset, setReset] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n  const classes = useStyles();\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: Array<any> = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    if (fileId.length > 0)\r\n      getItems({\r\n        dataType: props.dataType,\r\n        fileId: fileId,\r\n        version: props.version\r\n      })\r\n        .then((res) => {\r\n          Object.keys(res.data).forEach((el) => {\r\n            let ctype: String = res.data[el]['type'];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === 'line') {\r\n              res.data[el]['data'].forEach((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            } else if (ctype === 'histogram') {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el]['data'],\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [props.dataType, props.version, fileId]);\r\n\r\n  useEffect(() => {\r\n    getSystems()\r\n      .then((res: any) => setSystems(res.data))\r\n      .catch((err: any) => setSystems([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.inclination !== '') {\r\n      const params = {\r\n        user_altitude: dot.x,\r\n        user_inclination: props.inclination,\r\n        system: props.system,\r\n        version: props.version\r\n      };\r\n\r\n      getFileId(params)\r\n        .then((res: any) => setFileId(res.data))\r\n        .catch((err: any) => setFileId([]));\r\n    }\r\n  }, [props.inclination, dot, props.system, props.version]);\r\n\r\n  useEffect(() => {\r\n    setDot({\r\n      x: props.data.plot_value[0].altitude,\r\n      y: props.data.plot_value[0].value\r\n    });\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (props.system !== '') {\r\n      getSystemVersion({ system: props.system })\r\n        .then((res: any) => setVersions(res.data))\r\n        .catch((err: any) => setVersions([]));\r\n    }\r\n  }, [props.system]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n\r\n    setDataSet(id);\r\n    props.onDataType(name);\r\n  };\r\n\r\n  const handleClick = (event: any) => {\r\n    if (event) {\r\n      const params = {\r\n        user_altitude: event.points[0].x,\r\n        user_inclination: props.inc,\r\n        system: props.system,\r\n        version: props.version\r\n      };\r\n\r\n      setDot({ x: event.points[0].x, y: event.points[0].y });\r\n      getFileId(params)\r\n        .then((res: any) => setFileId(res.data))\r\n        .catch((err: any) => setFileId([]));\r\n    }\r\n    setSelected(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={12}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          style={{\r\n            backgroundColor: grey[300],\r\n            minHeight: '10vh'\r\n          }}\r\n        >\r\n          <Grid item md={5} style={{ marginLeft: 15 }}>\r\n            <ToggleButtonGroup value={dataSet} onChange={handleDataSetClick}>\r\n              <ToggleButton\r\n                id=\"as_needed_handoff\"\r\n                name=\"coverage\"\r\n                value=\"as_needed_handoff\"\r\n                size=\"small\"\r\n              >\r\n                {`RF Coverage (%)`}\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                id=\"maximum_powee_handoff\"\r\n                name=\"gap\"\r\n                value=\"maximum_powee_handoff\"\r\n                size=\"small\"\r\n              >\r\n                {`No Coverage (%)`}\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item md={3} style={{ marginLeft: '15px' }}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n              disabled={viewMethod === '3d_view'}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`System`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.system}\r\n                onChange={(e) => props.onSystem(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"System\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {systems.map((item: any) => (\r\n                  <MenuItem key={item.system_name} value={item.system_id}>\r\n                    {item.system_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`Version`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.version}\r\n                onChange={(e) => props.onVersion(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"Version\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {versions.map((item: any) => (\r\n                  <MenuItem key={`version_${item.versions}`} value={item.versions}>\r\n                    {item.versions}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item md={12} style={{ textAlign: 'center', position: 'relative' }}>\r\n        <Typography variant=\"h6\">\r\n          {dataSet === 'as_needed_handoff'\r\n            ? `RF Coverage (%) vs. User Inclination`\r\n            : `No Coverage (%) vs. User Inclination`}\r\n        </Typography>\r\n        <OptionAddon\r\n          source={props.data}\r\n          checked={checked}\r\n          viewMethod={viewMethod}\r\n          inc={props.inclination}\r\n          incs={props.incs}\r\n          isDash={false}\r\n          onInc={(value: any) => props.onInc(value)}\r\n          onChecked={handleCheck}\r\n          resetPlot={() => setReset(!reset)}\r\n          onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n        />\r\n      </Grid>\r\n\r\n      {/* FIXME: check at the process of cart integration.\r\n      <Grid item md={12} style={{ zIndex: 1000 }}>\r\n        <MathJax.Provider>\r\n          <MathJax.Node formula={props.text} />\r\n        </MathJax.Provider>\r\n      </Grid> */}\r\n\r\n      <Grid item md={12}>\r\n        <Card style={{ marginLeft: '2.5rem', marginRight: '2.5rem' }}>\r\n          <CardContent>\r\n            {viewMethod === '3d_view' ? (\r\n              <Grid item md={12}>\r\n                <ThreeViewSection\r\n                  data={props.source}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  reset={reset}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={props.source.plot_value}\r\n                  surface_rows={surface_rows}\r\n                  zAxisLabel={zAxisLabel}\r\n                  checked={checked}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <Grid item md={12}>\r\n                <TwoViewSection\r\n                  data={props.data}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={plot_rows}\r\n                  surface_rows={surface_rows}\r\n                  yAxisLabel={zAxisLabel}\r\n                  dot={dot}\r\n                  checked={checked}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {selected && <></>}\r\n      {Object.keys(traces).length > 0 && (\r\n        <ChartsLibsSection traces={traces} dataSet={dataSet} dataType={props.dataType} />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CssBaseline,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { getCartItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport AnalyzeRegressionSection from \"./analyze-regression-section\";\r\n\r\nconst INIT_PARAMS = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 0,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CartPanel(props: any) {\r\n  const [source, setSource] = useState({} as any);\r\n  const [dataSource, setDataSource] = useState({} as any);\r\n  const [system, setSystem] = useState(5 as any);\r\n  const [version, setVersion] = useState(3 as any);\r\n  const [inclination, setInclination] = useState(\"\");\r\n  const [incs, setIncs] = useState([] as any);\r\n  const [dataType, setDataType] = useState(\"coverage\" as any);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n  const deepDive = \"system1/coverage\";\r\n  const metric = deepDive.split(\"/\")[1];\r\n  const missionType = \"orbital\";\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    getCartItems({\r\n      type: missionType,\r\n      system: system,\r\n      version: version,\r\n      dataType,\r\n    })\r\n      .then((res: any) => {\r\n        setSource(res.data.data);\r\n        setDataSource(res.data.data);\r\n        setMaxAltitude(res.data.maxAltitude);\r\n        setText(res.data.text);\r\n\r\n        // TODO: active when used\r\n        // setTerrestrial(res.data.terrestrial);\r\n        // setCoefficients(res.data.coefficients);\r\n\r\n        if (Object.keys(res.data.data).includes(\"plot_value\")) {\r\n          let tmp = res.data.data.plot_value.map(\r\n            (item: any) => item[\"inclination\"]\r\n          );\r\n          let uniqueArray: Array<any> = [...new Set(tmp)  as any];\r\n          setIncs(uniqueArray.sort());\r\n        }\r\n\r\n        // FIXME: there is no real data for it.\r\n        //\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [system, version, dataType]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataSource).includes(\"plot_value\")) {\r\n      let data = dataSource.plot_value.filter(\r\n        (item: any) => item.inclination === inclination\r\n      );\r\n      setSource((prevState: any) => ({ ...prevState, plot_value: data }));\r\n    }\r\n  }, [inclination, dataSource]);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // FIXME: activate in integration of cart.\r\n    //\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={() => props.onClose()}\r\n      classes={{ paper: classes.dialogDeep }}\r\n    >\r\n      <CssBaseline />\r\n      <MuiDialogTitle>\r\n        <Typography component=\"strong\" variant=\"h6\">\r\n          {\"Cart Integration Panel\"}\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.dialogCloseBtn}\r\n          onClick={() => props.onClose()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      <DialogContent\r\n        dividers={true}\r\n        style={{ paddingRight: 0, paddingLeft: 0, overflowX: \"hidden\" }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={12}>\r\n            {!isLoading &&\r\n              (missionType === \"orbital\" ? (\r\n                <AnalyzeRegressionSection\r\n                  equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                  maxAltitude={maxAltitude}\r\n                  alt={INIT_PARAMS.altitude}\r\n                  inc={INIT_PARAMS.inclination}\r\n                  value={INIT_PARAMS.value}\r\n                  data={source}\r\n                  source={dataSource}\r\n                  dataType={dataType}\r\n                  selectedItem={metric}\r\n                  text={text}\r\n                  system={system}\r\n                  version={version}\r\n                  inclination={inclination}\r\n                  incs={incs}\r\n                  onInc={(value: any) => setInclination(value)}\r\n                  onSystem={(value: any) => setSystem(value)}\r\n                  onVersion={(value: any) => setVersion(value)}\r\n                  onDataType={(value: any) => setDataType(value)}\r\n                />\r\n              ) : (\r\n                <></>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CartPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { getItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport LineChartSection from \"./line-chart-section\";\r\nimport HistogramChartSection from \"./histogram-chart-section\";\r\nimport BoxChartSection from \"./box-chart-section\";\r\nimport TerrestrialHeatMap from \"./terrestrial-heatmap-chart\";\r\nimport CartPanel from \"../cart-panel\";\r\n\r\nconst INIT_MENUS = [\r\n  { id: \"as_needed_handoff\", name: \"Power below threshold handoff\" },\r\n  { id: \"maximum_powee_handoff\", name: \"Maximum power immediate handoff\" },\r\n];\r\n\r\nconst TabPanel = (props: any) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction ChartPanel() {\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"none\");\r\n  const [tab, setTab] = useState(0);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (selected !== \"none\")\r\n      getItems(selected)\r\n        .then((res) => {\r\n          Object.keys(res.data).forEach((el) => {\r\n            let ctype: string = res.data[el][\"type\"];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === \"line\") {\r\n              res.data[el][\"data\"].forEach((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            } else if (ctype === \"histogram\") {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el][\"data\"],\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [selected]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <CssBaseline />\r\n          <Card className={classes.chartCard}>\r\n            <CardHeader\r\n              title={\r\n                <Typography component=\"h1\" variant=\"h5\" className=\"m-3\">\r\n                  {`CART Data Statistics Dashboard (Prototype)`}\r\n                </Typography>\r\n              }\r\n              action={\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setIsOpen(true)}\r\n                >\r\n                  {\"Open Chart\"}\r\n                </Button>\r\n              }\r\n            />\r\n            <CardContent className=\"ml-3 mr-3\">\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={(e, val) => setTab(val)}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab label=\"Data Statistics Dashboard\" {...a11yProps(0)} />\r\n                  <Tab label=\"Heat Map\" {...a11yProps(1)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={tab}\r\n                onChangeIndex={(index: any) => setTab(index)}\r\n              >\r\n                <TabPanel value={tab} index={0}>\r\n                  <Grid\r\n                    container\r\n                    spacing={3}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item md={4}>\r\n                      <Select\r\n                        name=\"\"\r\n                        value={selected}\r\n                        onChange={(e: any) => setSelected(e.target.value)}\r\n                        className={classes.searchSelect}\r\n                        style={selected === \"none\" ? { color: grey[500] } : {}}\r\n                        defaultValue=\"\"\r\n                        fullWidth\r\n                      >\r\n                        <MenuItem\r\n                          value=\"none\"\r\n                          style={{ opacity: 0.87 }}\r\n                          disabled\r\n                        >\r\n                          {\"Select Data Set…\"}\r\n                        </MenuItem>\r\n                        {INIT_MENUS.map((item) => (\r\n                          <MenuItem value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    <Grid item md={8}></Grid>\r\n                    {Object.keys(traces).map((item) => (\r\n                      <Grid item md={6} key={item}>\r\n                        <Grid container spacing={3}>\r\n                          {traces[item].type === \"line\" && (\r\n                            <Grid item md={12}>\r\n                              <LineChartSection\r\n                                source={traces[item]}\r\n                                dataType={`coverage`}\r\n                              />\r\n                            </Grid>\r\n                          )}\r\n                          {traces[item].type === \"histogram\" && (\r\n                            <>\r\n                              <Grid item md={12}>\r\n                                <HistogramChartSection {...traces[item]} />\r\n                              </Grid>\r\n                              <Grid item md={12}>\r\n                                <BoxChartSection {...traces[item]} />\r\n                              </Grid>\r\n                            </>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={12}>\r\n                      <TerrestrialHeatMap />\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Grid>\r\n      <CartPanel isOpen={isOpen} onClose={() => setIsOpen(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartPanel;\r\n","import axios from 'axios';\r\nimport { BASE_URL } from 'src/constants';\r\n\r\nconst axiosConfig = {\r\n  baseURL: BASE_URL,\r\n  timeout: 30000\r\n};\r\n\r\nconst axiosInstance = axios.create(axiosConfig);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) =>\r\n    Promise.reject((error.response && error.response.data) || 'Something went wrong')\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst TwoViewSection: React.FC<any> = (props: any) => {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => rows.map((row: any) => row[key]);\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter((row: any) => row.inclination === inclination);\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, 'altitude'),\r\n          y: unpack(new_plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          color: 'rgb(23, 190, 207)'\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, 'altitude'),\r\n          y: unpack(new_surface_rows, 'value'),\r\n          name: 'Model curve',\r\n          mode: 'lines',\r\n          line: {\r\n            color: 'rgb(252, 154, 7)'\r\n          }\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, 'altitude'),\r\n          y: unpack(new_plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          color: 'rgb(23, 190, 207)'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'markers',\r\n          type: 'scatter'\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === true && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, 'altitude'),\r\n          y: unpack(new_surface_rows, 'value'),\r\n          name: 'Model curve',\r\n          mode: 'lines',\r\n          line: {\r\n            color: 'rgb(252, 154, 7)'\r\n          }\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'markers',\r\n          type: 'scatter'\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'lines'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'markers',\r\n          type: 'scatter'\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc, props.dot]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: 'closest',\r\n        width: props.isChart\r\n          ? parseFloat(props.size.width.replace('px', '')) * 0.55\r\n          : parseFloat(props.size.width.replace('px', '')) * 0.4,\r\n        height: props.isChart\r\n          ? parseFloat(props.size.height.replace('px', '')) * 0.55\r\n          : parseFloat(props.size.height.replace('px', '')) * 0.3,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15\r\n        },\r\n        xaxis: {\r\n          title: `Altitude ${props.alt}(km), Inclination=${props.inc} deg`,\r\n          type: 'linear',\r\n          zeroline: false\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: 'linear',\r\n          zeroline: false\r\n        }\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = 'pointer')}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = 'crosshair')}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst ThreeViewSection: React.FC<any> = (props: any) => {\r\n  const [config, setConfig] = useState([]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (props.checked.show_surface === true && props.checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(props.plot_rows, 'altitude'),\r\n          y: unpack(props.plot_rows, 'inclination'),\r\n          z: unpack(props.plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: unpack(props.surface_rows, 'altitude'),\r\n          y: unpack(props.surface_rows, 'inclination'),\r\n          z: unpack(props.surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (\r\n      props.checked.show_surface === false &&\r\n      props.checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(props.plot_rows, 'altitude'),\r\n          y: unpack(props.plot_rows, 'inclination'),\r\n          z: unpack(props.plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (\r\n      props.checked.show_surface === true &&\r\n      props.checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(props.surface_rows, 'altitude'),\r\n          y: unpack(props.surface_rows, 'inclination'),\r\n          z: unpack(props.surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (\r\n      props.checked.show_surface === false &&\r\n      props.checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: 'mesh3d'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: 'markers',\r\n          type: 'scatter3d'\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [\r\n    props.checked,\r\n    props.plot_rows,\r\n    props.surface_rows,\r\n    props.reset,\r\n    props.alt,\r\n    props.inc,\r\n    props.value\r\n  ]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: props.isChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.55\r\n          : Number(props.size.width.replace('px', '')) * 0.4,\r\n        height: props.isChart\r\n          ? Number(props.size.height.replace('px', '')) * 0.4\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1\r\n            }\r\n          },\r\n          xaxis: {\r\n            title: 'Altitude (km)',\r\n            type: 'linear',\r\n            range: [Math.max(...unpack(props.surface_rows, 'altitude')), 0],\r\n            zeroline: false\r\n          },\r\n          yaxis: {\r\n            title: 'Inclination (deg)',\r\n            type: 'linear',\r\n            range: [90, 0],\r\n            zeroline: false\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: 'linear',\r\n            range: [\r\n              Math.min(...unpack(props.surface_rows, 'value')),\r\n              Math.max(...unpack(props.surface_rows, 'value'))\r\n            ],\r\n            zeroline: false\r\n          }\r\n        },\r\n        showlegend: false\r\n      }}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThreeViewSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport Selection from \"../Select\";\r\n\r\ninterface IDataSource {\r\n  xTrace: number;\r\n  yTrace?: number;\r\n  avgTrace?: number;\r\n}\r\n\r\nconst DashAddon: React.FC<any> = (props: any) => {\r\n  const [dataSource, setDataSource] = useState<IDataSource[]>([]);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.source) {\r\n      let data: Array<any> = [];\r\n      let csvTitle: string = props.source.title.split(\" \").join(\"-\");\r\n\r\n      if (props.source.type === \"line\") {\r\n        data = props.source.xTraces.map((item: number, idx: number) => {\r\n          return {\r\n            xTrace: item,\r\n            yTrace: props.source.yTraces[idx],\r\n            avgTrace: props.source.avgTraces[idx],\r\n          };\r\n        });\r\n      } else {\r\n        data = props.source.xTraces.map((item: number) => {\r\n          return {\r\n            xTrace: item,\r\n          };\r\n        });\r\n      }\r\n      setTitle(csvTitle);\r\n      setDataSource(data);\r\n    }\r\n  }, [props.source]);\r\n\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid\r\n        container\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <Grid item md={1}>\r\n          <IconButton\r\n            id={props.index}\r\n            onClick={(e) => {\r\n              props.onAnchorEl(e.currentTarget);\r\n              props.onIndex(e.currentTarget.id);\r\n            }}\r\n            style={{ padding: 0 }}\r\n          >\r\n            <DehazeIcon />\r\n          </IconButton>\r\n          <Selection\r\n            selected={props.selected}\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={10} />\r\n        <Grid item md={1}>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 0,\r\n              top: 10,\r\n            }}\r\n            onClick={() => props.onSubChart(props.index)}\r\n          >\r\n            <LaunchIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 50,\r\n              top: 12,\r\n            }}\r\n          >\r\n            {props.source && (\r\n              <CSVLink\r\n                data={dataSource}\r\n                filename={`${title}-${Date.now()}.csv`}\r\n                className=\"btn btn-primary\"\r\n                target=\"_blank\"\r\n              >\r\n                <Typography component=\"p\" variant=\"body2\">\r\n                  {\"csv\"}\r\n                </Typography>\r\n              </CSVLink>\r\n            )}\r\n            {!props.source && (\r\n              <Typography component=\"p\" variant=\"body2\">\r\n                {\"csv\"}\r\n              </Typography>\r\n            )}\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DashAddon;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst LineChart: React.FC<any> = (props: any) => {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.yTraces,\r\n          name: 'Gap Event Duration',\r\n          type: 'scatter',\r\n          mode: 'lines+markers',\r\n          marker: { color: 'red' }\r\n        },\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.avgTraces,\r\n          name: 'Running Average',\r\n          type: 'scatter',\r\n          marker: { color: 'blue' }\r\n        }\r\n      ]}\r\n      layout={{\r\n        title: {\r\n          text: `<b>${props.source.title}</b>`,\r\n          font: {\r\n            family: 'Roboto',\r\n            size: 15\r\n          }\r\n        },\r\n        width: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.52\r\n          : Number(props.size.width.replace('px', '')) * 0.38,\r\n        height: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.33\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'center',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          }\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        xaxis: {\r\n          title:\r\n            props.dataType === 'coverage' ? 'Coverage Event Number' : 'Gap Event Number',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title:\r\n            props.dataType === 'coverage'\r\n              ? 'Coverage Duration (Sec.)'\r\n              : 'Gap Duration (Sec.)',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        }\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst HistogramChartSection: React.FC<any> = (props: any) => {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.source.xTraces,\r\n          name: 'Duration',\r\n          type: 'histogram'\r\n        }\r\n      ]}\r\n      layout={{\r\n        title: {\r\n          text: `<b>${props.source.title.split('_').join(' ')}</b>`,\r\n          font: {\r\n            family: 'Roboto',\r\n            size: 15\r\n          }\r\n        },\r\n        width: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.56\r\n          : Number(props.size.width.replace('px', '')) * 0.4,\r\n        height: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.33\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'center',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          }\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        xaxis: {\r\n          title: 'Duration',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title: 'Occurances',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        }\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HistogramChartSection;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst BoxChart: React.FC<any> = (props: any) => {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.source.xTraces,\r\n          boxpoints: 'all',\r\n          name: '',\r\n          type: 'box'\r\n        }\r\n      ]}\r\n      layout={{\r\n        title: {\r\n          text: `<b>${props.source.title.split(' ')[0]} Statistics</b>`,\r\n          font: {\r\n            family: 'Roboto',\r\n            size: 15\r\n          }\r\n        },\r\n        width: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.56\r\n          : Number(props.size.width.replace('px', '')) * 0.38,\r\n        height: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.33\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        yaxis: {\r\n          title: 'Duration',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        }\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BoxChart;\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core';\r\nimport LineChartSection from './LineChart';\r\nimport HistogramChartSection from './HistogramChart';\r\nimport BoxChartSection from './BoxChart';\r\nimport { useWindowSize } from '../../../../utils/util';\r\n\r\ninterface TRowAttribute {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nconst createData: (name: string, value: string) => TRowAttribute = (\r\n  name: string,\r\n  value: string\r\n) => {\r\n  return { name, value };\r\n};\r\n\r\nconst rows = [\r\n  createData('Average (sec)', 'xx'),\r\n  createData('Time-Averaged Gap', 'xx'),\r\n  createData('Median (sec)', 'xx'),\r\n  createData('Maximum (minutes)', 'xx'),\r\n  createData('Minimum (sec)', 'xx'),\r\n  createData('Average # Gaps Per Orbit', 'xx'),\r\n  createData('Average # Gaps Per Day', 'xx')\r\n];\r\n\r\nconst SelectedChart: React.FC<any> = (props: any) => {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      {props.id === 0 && (\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n            height: size.width ? (props.isSubChart ? '100%' : size.width * 0.11) : '100%',\r\n            overflow: 'auto'\r\n          }}\r\n        >\r\n          <Grid item md={10}>\r\n            <Typography variant=\"h6\" style={{ textAlign: 'center' }}>\r\n              {`Key Metrics`}\r\n            </Typography>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{`Gap Statistic`}</TableCell>\r\n                  <TableCell>{`Value`}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row: any) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.value}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {props.id === 1 && (\r\n        <LineChartSection\r\n          source={props.data}\r\n          dataType={props.dataType}\r\n          size={props.size}\r\n          isSubChart={props.isSubChart}\r\n        />\r\n      )}\r\n      {props.id === 2 && (\r\n        <HistogramChartSection\r\n          source={props.data}\r\n          size={props.size}\r\n          isSubChart={props.isSubChart}\r\n        />\r\n      )}\r\n      {props.id === 3 && (\r\n        <BoxChartSection\r\n          source={props.data}\r\n          size={props.size}\r\n          isSubChart={props.isSubChart}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedChart;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  CssBaseline,\r\n  DialogTitle as MuiDialogTitle,\r\n  Typography,\r\n  IconButton,\r\n  DialogContent,\r\n  Slide\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nimport DashAddon from '../../../../components/Button/DashAddon';\r\nimport SelectedChartSection from './SelectedChart';\r\nimport { MENU_ITEMS } from '../../../../constants';\r\nimport useStyles from '../../../../utils/styles';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst MultiCharts: React.FC<any> = (props: {\r\n  dataSet: string;\r\n  size: { width: string; height: string };\r\n  traces: any;\r\n  dataType: string;\r\n}) => {\r\n  const [selected, setSelected] = useState<number[]>([1, 2, 3]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [subChart, setSubChart] = useState<number | null>(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [index, setIndex] = useState<number>(0);\r\n  const classes = useStyles();\r\n\r\n  const handleSelected = (id: any) => {\r\n    setSelected(\r\n      selected.map((item: any, idx: any) => {\r\n        if (idx === Number(index)) item = id;\r\n        return item;\r\n      })\r\n    );\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.map((item: number, idx: number) => {\r\n        let dset = MENU_ITEMS[props.dataSet][item].dataset;\r\n\r\n        return (\r\n          <Grid\r\n            item\r\n            md={6}\r\n            key={item}\r\n            style={{\r\n              paddingLeft: '2rem',\r\n              paddingRight: idx % 2 === 0 ? '2rem' : '0.8rem'\r\n            }}\r\n          >\r\n            <Card style={{ height: `calc(${props.size.height} * 0.4)` }}>\r\n              <CardContent>\r\n                <DashAddon\r\n                  type={1}\r\n                  selected={selected}\r\n                  anchorEl={anchorEl}\r\n                  index={idx}\r\n                  source={\r\n                    props.traces[dset] && Object.keys(props.traces[dset]).length > 0\r\n                      ? props.traces[dset]\r\n                      : null\r\n                  }\r\n                  onIndex={(value: any) => setIndex(value)}\r\n                  onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                  onSelected={(value: any) => handleSelected(value)}\r\n                  onSubChart={(value: any) => {\r\n                    setSubChart(value);\r\n                    setIsOpen(true);\r\n                  }}\r\n                />\r\n                <Grid item md={12}>\r\n                  {props.traces[dset] && Object.keys(props.traces[dset]).length > 0 && (\r\n                    <SelectedChartSection\r\n                      id={item}\r\n                      size={props.size}\r\n                      data={props.traces[dset]}\r\n                      dataType={props.dataType}\r\n                      isSubChart={false}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n      {selected.length % 2 === 0 && <Grid item md={6} />}\r\n      {subChart !== null && (\r\n        <Dialog\r\n          open={isOpen}\r\n          TransitionComponent={Transition}\r\n          onClose={() => setIsOpen(false)}\r\n          PaperProps={{\r\n            style: {\r\n              height: Number(props.size.width.replace('px', '')) * 0.42,\r\n              maxWidth: Number(props.size.width.replace('px', '')) * 0.6,\r\n              minWidth: Number(props.size.width.replace('px', '')) * 0.6\r\n            }\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <MuiDialogTitle>\r\n            <Typography component=\"strong\" variant=\"h6\">\r\n              {MENU_ITEMS[props.dataSet][subChart].name}\r\n            </Typography>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              className={classes.dialogCloseBtn}\r\n              onClick={() => setIsOpen(false)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </MuiDialogTitle>\r\n          <hr />\r\n          <DialogContent>\r\n            {props.traces[MENU_ITEMS[props.dataSet][selected[subChart]].dataset] &&\r\n              Object.keys(\r\n                props.traces[MENU_ITEMS[props.dataSet][selected[subChart]].dataset]\r\n              ).length > 0 && (\r\n                <SelectedChartSection\r\n                  id={selected[subChart]}\r\n                  size={props.size}\r\n                  dataType={props.dataType}\r\n                  isSubChart={true}\r\n                  data={\r\n                    props.traces[MENU_ITEMS[props.dataSet][selected[subChart]].dataset]\r\n                  }\r\n                />\r\n              )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultiCharts;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Slide,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport axios from 'src/utils/axios';\r\n\r\ninterface CreateSystemModelProps {\r\n  open: boolean;\r\n  onClose(): void;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CreateSystemModel: React.FC<CreateSystemModelProps> = ({ open, onClose }) => {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  const handleChange = (event) => setValue(event.currentTarget.value);\r\n\r\n  const handleClick = async () => {\r\n    const params = { system: value };\r\n    await axios.post('/api/create-system', params);\r\n    setValue('');\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={onClose}>\r\n      <DialogContent>\r\n        <TextField label=\"System\" value={value} onChange={handleChange} required />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button color=\"primary\" disabled={value.length < 3} onClick={handleClick}>\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateSystemModel;\r\n","import MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport const Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0\r\n    },\r\n    '&:before': {\r\n      display: 'none'\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto'\r\n    }\r\n  },\r\n  expanded: {}\r\n})(MuiAccordion);\r\n\r\nexport const AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 20,\r\n    '&$expanded': {\r\n      minHeight: 20\r\n    }\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0'\r\n    }\r\n  },\r\n  expanded: {}\r\n})(MuiAccordionSummary);\r\n\r\nexport const AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiAccordionDetails);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport CreateSystemModel from './CreateSystemModal';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from './CustomAccordion';\r\n\r\ninterface ISystemDetailsProps {\r\n  expanded: string;\r\n  system: number;\r\n  onChange(param: string): void;\r\n  onChangeSystem(param: number): void;\r\n}\r\n\r\ninterface ISystem {\r\n  SYSTEM_ID: number;\r\n  SYSTEM_NAME: string;\r\n}\r\n\r\ninterface IVersion {\r\n  SYSTEM_VERSION: number;\r\n}\r\n\r\ninterface IAttrVersion {\r\n  SYSTEM_ATTRIBUTE_VERSION_ID: number;\r\n}\r\n\r\ninterface StateValues {\r\n  threshold: number | string;\r\n  type: string;\r\n  version: number;\r\n  attrVersion: number;\r\n}\r\n\r\nconst INIT_STATE = {\r\n  threshold: '',\r\n  type: 'stk',\r\n  version: -1,\r\n  attrVersion: -1\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  font: {\r\n    fontSize: '14px'\r\n  }\r\n}));\r\n\r\nconst SystemDetails: React.FC<ISystemDetailsProps> = (props) => {\r\n  const [values, setValues] = useState<StateValues>(INIT_STATE);\r\n  const [systems, setSystems] = useState<ISystem[]>([]);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [versions, setVersions] = useState<IVersion[]>([]);\r\n  const [attrVersions, setAttrVersions] = useState<IAttrVersion[]>([]);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchSystem();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const name = systems.find((item) => item.SYSTEM_ID === props.system)?.SYSTEM_NAME;\r\n    const fetchData = async () => {\r\n      try {\r\n        const params = { system_id: props.system, system_name: name };\r\n        const response = await axios.get('/api/get-modify-versions', { params });\r\n        const value = response.data.length > 0 ? response.data[0].SYSTEM_VERSION : -1;\r\n\r\n        setVersions(response.data);\r\n        setValues((prevState) => ({ ...prevState, version: value }));\r\n      } catch (error) {\r\n        setVersions([]);\r\n      }\r\n    };\r\n    props.system > 0 && name && fetchData();\r\n  }, [props.system, systems]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const params = { system: props.system, version: values.version };\r\n        const response = await axios.get('/api/get-modify-attr-versions', { params });\r\n        const value =\r\n          response.data.length > 0 ? response.data[0].SYSTEM_ATTRIBUTE_VERSION_ID : -1;\r\n\r\n        setAttrVersions(response.data);\r\n        setValues((prevState) => ({ ...prevState, attrVersion: value }));\r\n      } catch (error) {\r\n        setAttrVersions([]);\r\n      }\r\n    };\r\n\r\n    props.system > 0 && values.version > 0 && fetchData();\r\n  }, [props.system, values.version, versions, systems]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n    fetchSystem();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setValues((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const fetchSystem = async () => {\r\n    try {\r\n      const response = await axios.get('/api/get-modify-systems');\r\n      const value = response.data.length > 0 ? response.data[0].SYSTEM_ID : -1;\r\n\r\n      setSystems(response.data);\r\n      props.onChangeSystem(value);\r\n    } catch (error) {\r\n      setSystems([]);\r\n    }\r\n  };\r\n\r\n  const handleCreateVersion = async () => {\r\n    const name = systems.find((item) => item.SYSTEM_ID === props.system)?.SYSTEM_NAME;\r\n    if (name) {\r\n      const params = { system_id: props.system, system_name: name };\r\n      await axios.post('/api/create-version', params);\r\n      fetchSystem();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={props.expanded === 'panel1'}\r\n        onChange={() => props.onChange('panel1')}\r\n      >\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography>{'1. System Details'}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            <Grid item md={8}>\r\n              <Typography className={classes.font}>a. Select type of file</Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>File Type</InputLabel>\r\n                <Select\r\n                  name=\"type\"\r\n                  value={values.type}\r\n                  label=\"File Type\"\r\n                  defaultValue=\"\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value=\"stk\">STK</MenuItem>\r\n                  <MenuItem value=\"ns3\">NS3</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              <Typography className={classes.font}>\r\n                b. Select the applicable system or enter new to enter a new system\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>System</InputLabel>\r\n                <Select\r\n                  value={props.system}\r\n                  label=\"System\"\r\n                  defaultValue=\"\"\r\n                  onChange={(e: any) => props.onChangeSystem(e.target.value as number)}\r\n                >\r\n                  <MenuItem value={-1} disabled>{`Choose System`}</MenuItem>\r\n                  {systems.map((item: ISystem) => (\r\n                    <MenuItem\r\n                      value={item.SYSTEM_ID}\r\n                      key={`${item.SYSTEM_NAME}-${item.SYSTEM_ID}`}\r\n                    >\r\n                      {item.SYSTEM_NAME}\r\n                    </MenuItem>\r\n                  ))}\r\n                  <MenuItem value={-2} onClick={handleClose}>\r\n                    {`New`}\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              <Typography className={classes.font}>\r\n                c. Select the applicable system version or select new for a new version to\r\n                be automatically assigned.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>Version</InputLabel>\r\n                <Select\r\n                  name=\"version\"\r\n                  value={values.version}\r\n                  label=\"Version\"\r\n                  defaultValue=\"\"\r\n                  disabled={values.type === 'ns3'}\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value={-1} disabled>\r\n                    Choose Version\r\n                  </MenuItem>\r\n                  {versions.map((item: IVersion) => (\r\n                    <MenuItem\r\n                      value={item.SYSTEM_VERSION}\r\n                      key={`version-${props.system}-${item.SYSTEM_VERSION}`}\r\n                    >\r\n                      {item.SYSTEM_VERSION}\r\n                    </MenuItem>\r\n                  ))}\r\n                  {systems.length > 0 && (\r\n                    <MenuItem value={-2} onClick={handleCreateVersion}>\r\n                      New\r\n                    </MenuItem>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              <Typography className={classes.font}>\r\n                d. Select the applicable CART attribute version.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>{`Attribute Version`}</InputLabel>\r\n                <Select\r\n                  name=\"attrVersion\"\r\n                  value={values.attrVersion}\r\n                  label=\"Attribute Version\"\r\n                  defaultValue=\"\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value={-1} disabled>{`Choose Attribute Version`}</MenuItem>\r\n                  {attrVersions.map((item: IAttrVersion) => (\r\n                    <MenuItem\r\n                      value={item.SYSTEM_ATTRIBUTE_VERSION_ID}\r\n                      key={`attr-version-${props.system}-${values.version}-${item.SYSTEM_ATTRIBUTE_VERSION_ID}`}\r\n                    >\r\n                      {item.SYSTEM_ATTRIBUTE_VERSION_ID}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              <Typography className={classes.font}>\r\n                e. Select Power threshold value(Prec)\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <TextField\r\n                name=\"threshold\"\r\n                label=\"Power Threshold\"\r\n                value={values.threshold}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <CreateSystemModel open={open} onClose={handleClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SystemDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from './CustomAccordion';\r\n\r\ninterface IModelDetailsProps {\r\n  expanded: string;\r\n  system: number;\r\n  onChangeSystem(param: number): void;\r\n  onChange(parameter: string): void;\r\n}\r\n\r\ninterface Model {\r\n  MODEL_ID: number;\r\n  BEAM_TYPE_STK: string;\r\n}\r\n\r\ninterface Beam {\r\n  BEAM_TYPE_STK: string;\r\n}\r\n\r\ninterface StateValue {\r\n  beam: string;\r\n  model: number;\r\n}\r\n\r\nconst INIT_VALUES = { beam: '', model: -1 };\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  font: {\r\n    fontSize: '14px'\r\n  }\r\n}));\r\n\r\nconst ModelDetails: React.FC<IModelDetailsProps> = (props) => {\r\n  const [values, setValues] = useState<StateValue>(INIT_VALUES);\r\n  const [beams, setBeams] = useState<Beam[]>([]);\r\n  const [models, setModels] = useState<Model[]>([]);\r\n  const [isNew, setIsNew] = useState<boolean>(false);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchModels();\r\n    fetchBeams();\r\n  }, [props.system]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setValues((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const fetchModels = async () => {\r\n    try {\r\n      const params = { system: props.system };\r\n      const response = await axios.get('/api/get-modify-models', { params });\r\n      const value = response.data.length > 0 ? response.data[0].MODEL_ID : -1;\r\n\r\n      setModels(response.data);\r\n      setValues((prevState) => ({ ...prevState, model: value }));\r\n      fetchSystem();\r\n    } catch (error) {\r\n      setModels([]);\r\n    }\r\n  };\r\n\r\n  const fetchBeams = async () => {\r\n    try {\r\n      const response = await axios.get('/api/get-modify-beams');\r\n      const value =\r\n        response.data.length > 0 &&\r\n        response.data.find((item: Beam) => Boolean(item.BEAM_TYPE_STK)).BEAM_TYPE_STK;\r\n\r\n      setBeams(response.data);\r\n      setValues((prevState) => ({ ...prevState, beam: value }));\r\n      fetchSystem();\r\n    } catch (error) {\r\n      setBeams([]);\r\n    }\r\n  };\r\n\r\n  const fetchSystem = async () => {\r\n    const response = await axios.get('/api/get-modify-systems');\r\n    const value = response.data.length > 0 ? response.data[0].SYSTEM_ID : -1;\r\n    props.onChangeSystem(value);\r\n  };\r\n\r\n  const handleCreateModel = async () => {\r\n    const beam = models.find((item) => item.MODEL_ID === values.model)?.BEAM_TYPE_STK;\r\n    if (beam) {\r\n      const params = { system_id: props.system, beam };\r\n      await axios.post('/api/create-model', params);\r\n      fetchModels();\r\n      setIsNew(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      expanded={props.expanded === 'panel2'}\r\n      onChange={() => props.onChange('panel2')}\r\n    >\r\n      <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n        <Typography>{'2. Model Details'}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item md={8}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              a. Select the applicable model ID or select new for a new version to be\r\n              automatically assigned.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel>{`Model`}</InputLabel>\r\n              <Select\r\n                name=\"model\"\r\n                value={values.model}\r\n                label=\"Model\"\r\n                defaultValue=\"\"\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={-1} disabled>{`Choose Model`}</MenuItem>\r\n                {models.map((item: Model) => (\r\n                  <MenuItem value={item.MODEL_ID} key={`${item.MODEL_ID}`}>\r\n                    {item.MODEL_ID}\r\n                  </MenuItem>\r\n                ))}\r\n                <MenuItem value={-2} onClick={handleCreateModel}>\r\n                  New\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={8}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              b. Select STK model type.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel>Beam forming</InputLabel>\r\n              <Select\r\n                name=\"beam\"\r\n                value={values.beam}\r\n                label=\"Beam forming\"\r\n                defaultValue=\"\"\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value=\"\" disabled>{`Choose Beam`}</MenuItem>\r\n                {beams.map((item: Beam) => (\r\n                  <MenuItem value={item.BEAM_TYPE_STK} key={`${item.BEAM_TYPE_STK}`}>\r\n                    {item.BEAM_TYPE_STK}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={8}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              c. Download new model for uploading to Bit Bucket.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Button name=\"load_model\" size=\"small\" variant=\"outlined\" disabled={!isNew}>\r\n              Load Model\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ModelDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from './CustomAccordion';\r\n\r\ninterface ModelDetailsProps {\r\n  expanded: string;\r\n  uploadedItems: File[];\r\n  onChangeUploadedItems(param: File): void;\r\n  onChange(param: string): void;\r\n}\r\n\r\nconst NewData: React.FC<ModelDetailsProps> = (props) => {\r\n  const handleUploadFile = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    event.preventDefault();\r\n    const element: HTMLElement | null = document.getElementById('upload');\r\n    element && element.click();\r\n  };\r\n\r\n  const handleUploadedFile = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    event.preventDefault();\r\n    const element = document.getElementById('upload') as HTMLInputElement;\r\n    const files: FileList | null = element?.files;\r\n\r\n    if (files && files[0]) {\r\n      props.onChangeUploadedItems(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      expanded={props.expanded === 'panel3'}\r\n      onChange={() => props.onChange('panel3')}\r\n    >\r\n      <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n        <Typography>{'3. New Data'}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item md={9}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              {`a. Data to be downloaded (Select files or drop files in square)`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Button\r\n              name=\"file_select_btn\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              onClick={handleUploadFile}\r\n            >\r\n              {'Select Files'}\r\n            </Button>\r\n            <input\r\n              id=\"upload\"\r\n              type=\"file\"\r\n              accept=\"*\"\r\n              onChange={handleUploadedFile}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Box\r\n              border={1}\r\n              style={{ height: '6rem', borderColor: blue[500], overflow: 'auto' }}\r\n            >\r\n              <Table size=\"small\" aria-label=\"uploaded files table\">\r\n                <TableBody>\r\n                  {props.uploadedItems.map((row: File) => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.size}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default NewData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Slide,\r\n  IconButton,\r\n  Grid,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport SystemDetailsSection from './SystemDetails';\r\nimport ModelDetailsSection from './ModelDetails';\r\nimport useStyles from 'src/utils/styles';\r\nimport NewDataSection from './NewData';\r\nimport { processing } from 'src/API';\r\nimport { BASE_URL } from 'src/constants';\r\n\r\ninterface ProcessModalProps {\r\n  isOpen: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface ISource {\r\n  name: string;\r\n  size: number;\r\n  status: string;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ProcessModal: React.FC<ProcessModalProps> = (props) => {\r\n  const [system, setSystem] = useState<number>(-1);\r\n  const [expanded, setExpanded] = useState<string>('panel1');\r\n  const [uploadedItems, setUploadedItems] = useState<File[]>([]);\r\n  const [listening, setListening] = useState<boolean>(false);\r\n  const [source, setSource] = useState<Array<any>>([]);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!listening) {\r\n      const events = new EventSource(BASE_URL + '/api/events');\r\n      events.onmessage = (event) => {\r\n        const parsedData = JSON.parse(event.data);\r\n        setSource((nests) => nests.concat(parsedData));\r\n      };\r\n\r\n      setListening(true);\r\n    }\r\n  }, [listening, source]);\r\n\r\n  const handleClick = () => {\r\n    const formData = new FormData();\r\n\r\n    uploadedItems.forEach((file: File) => {\r\n      formData.append('upload', file);\r\n    });\r\n\r\n    processing(formData);\r\n    setListening(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={() => props.onClose()}\r\n      aria-labelledby=\"modify-slide-title\"\r\n      aria-describedby=\"modify-slide-description\"\r\n      classes={{ paper: classes.dialogModify }}\r\n    >\r\n      <DialogTitle\r\n        disableTypography\r\n        style={{ backgroundColor: blue[700], color: '#fff', fontSize: 20 }}\r\n      >\r\n        {`Add or Modify Data`}\r\n        <IconButton\r\n          onClick={() => props.onClose()}\r\n          style={{ position: 'absolute', right: 10, padding: 0 }}\r\n        >\r\n          <HighlightOffIcon style={{ color: '#fff' }} />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item md={12}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item md={12}>\r\n                <SystemDetailsSection\r\n                  expanded={expanded}\r\n                  system={system}\r\n                  onChange={(value: string) => setExpanded(value)}\r\n                  onChangeSystem={(value: number) => setSystem(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item md={12}>\r\n                <ModelDetailsSection\r\n                  system={system}\r\n                  expanded={expanded}\r\n                  onChangeSystem={(value: number) => setSystem(value)}\r\n                  onChange={(value: string) => setExpanded(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item md={12}>\r\n                <NewDataSection\r\n                  expanded={expanded}\r\n                  uploadedItems={uploadedItems}\r\n                  onChange={(value: string) => setExpanded(value)}\r\n                  onChangeUploadedItems={(file: File) =>\r\n                    setUploadedItems((prevState) => [...prevState, file])\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Box\r\n              border={1}\r\n              style={{\r\n                height: '10rem',\r\n                backgroundColor: '#000',\r\n                overflow: 'auto'\r\n              }}\r\n            >\r\n              <Table size=\"small\" aria-label=\"status table\">\r\n                <TableBody>\r\n                  {source.map((row: ISource, idx: number) => (\r\n                    <TableRow key={row.name + idx}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{ color: '#fff', borderBottom: 0 }}\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" style={{ color: '#fff', borderBottom: 0 }}>\r\n                        {row.size}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" style={{ color: '#fff', borderBottom: 0 }}>\r\n                        {row.status}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose()} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleClick} color=\"primary\">\r\n          Process\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProcessModal;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\ninterface ConfirmModalProps {\r\n  open: boolean;\r\n  name: string;\r\n  onClose(): void;\r\n  onChangeAgree(): void;\r\n}\r\n\r\nconst statement = [\r\n  { name: 'delete', value: 'Are you sure to delete selected records?' },\r\n  { name: 'deleteAll', value: 'Are you sure to delete all records for selected system?' },\r\n  { name: 'migrate', value: 'Are you sure to transfer all records to production database?' }\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ConfrimModal: FC<ConfirmModalProps> = ({\r\n  open,\r\n  name,\r\n  onClose,\r\n  onChangeAgree\r\n}) => {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (name) {\r\n      const des = statement.find((el) => el.name === name);\r\n      setValue(des.value);\r\n    }\r\n  }, [name]);\r\n\r\n  const handleClick = () => {\r\n    onChangeAgree();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} TransitionComponent={Transition}>\r\n      <DialogTitle>Confirm</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{value}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleClick} color=\"primary\" autoFocus>\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfrimModal;\r\n","import React, { useState, FC, useEffect, MouseEvent } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Grid,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Tooltip,\r\n  IconButton,\r\n  colors,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport DeleteSweepOutlinedIcon from '@material-ui/icons/DeleteSweepOutlined';\r\nimport ShopTwoOutlinedIcon from '@material-ui/icons/ShopTwoOutlined';\r\nimport axios from 'src/utils/axios';\r\nimport ProcessModal from './ProcessModal';\r\nimport ConfrimModal from './ConfirmModal';\r\n\r\ninterface IModel {\r\n  MODEL_ID: number;\r\n  BEAM_TYPE_STK: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: colors.grey[300],\r\n    minHeight: '6vh'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  systemForm: {\r\n    width: '40%'\r\n  },\r\n  versionForm: {\r\n    width: '20%',\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  space: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  uploadBtn: {\r\n    backgroundColor: colors.blue[500],\r\n    color: '#fff',\r\n    padding: '0.3rem',\r\n    borderRadius: 6\r\n  }\r\n}));\r\n\r\nconst HeaderSection: FC<any> = (props: any) => {\r\n  const [model, setModel] = useState<number>(-1);\r\n  const [models, setModels] = useState<IModel[]>([]);\r\n  const [isOpen, setOpen] = useState<boolean>(false);\r\n  const [isModal, setModal] = useState<boolean>(false);\r\n  const [isAgree, setAgree] = useState<boolean>(false);\r\n  const [disabled, setDisabled] = useState<boolean>(false);\r\n  const [feature, setFeature] = useState<string | null>(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isAgree) {\r\n      if (feature === 'delete') {\r\n        handleDelete();\r\n      } else if (feature === 'deteteAll') {\r\n        handleAlldelete();\r\n      } else {\r\n        handleMigrate();\r\n      }\r\n      setFeature(null);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isAgree]);\r\n\r\n  useEffect(() => {\r\n    setDisabled(props.db === 'product_db');\r\n  }, [props.db]);\r\n\r\n  useEffect(() => {\r\n    fetchModels();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.system]);\r\n\r\n  const handleOpen = () => setOpen(!isOpen);\r\n\r\n  const handleAgree = () => setAgree(!isAgree);\r\n\r\n  const handleModal = () => setModal(!isModal);\r\n\r\n  const handleChangeModel = (event) => setModel(event.target.value);\r\n\r\n  const handleClick = (event: MouseEvent) => {\r\n    const name = event.currentTarget.getAttribute('name');\r\n    setFeature(name);\r\n    setModal(!isModal);\r\n  };\r\n\r\n  const fetchModels = async () => {\r\n    try {\r\n      const params = { system: props.system };\r\n      const response = await axios.get('/api/get-modify-models', { params });\r\n      const model = response.data.length > 0 ? response.data[0].MODEL_ID : -1;\r\n\r\n      setModels(response.data);\r\n      setModel(model);\r\n    } catch (error) {\r\n      setModels([]);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (): Promise<void> => {\r\n    const params = {\r\n      system: props.system,\r\n      version: props.version,\r\n      alt: props.alt,\r\n      inc: props.inc,\r\n      fileId: props.fileId\r\n    };\r\n\r\n    try {\r\n      await axios.post('/api/delete-record', params);\r\n      enqueueSnackbar('Selected record deleted successfully!', {\r\n        variant: 'success'\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Failed to remove record', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      props.onRefresh();\r\n    }\r\n  };\r\n\r\n  const handleAlldelete = async (): Promise<void> => {\r\n    const params = {\r\n      system: props.system,\r\n      version: props.version\r\n    };\r\n\r\n    try {\r\n      await axios.post('/api/delete-all', params);\r\n      enqueueSnackbar('All records deleted successfully for selected system!', {\r\n        variant: 'success'\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Failed to remove all records', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      props.onRefresh();\r\n    }\r\n  };\r\n\r\n  const handleMigrate = async (): Promise<void> => {\r\n    const params = {\r\n      system: props.system,\r\n      version: props.version\r\n    };\r\n\r\n    try {\r\n      await axios.post('/api/migrate', params);\r\n      enqueueSnackbar('Transfer Successful!', {\r\n        variant: 'success'\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Failed to transfer', {\r\n        variant: 'error'\r\n      });\r\n    } finally {\r\n      props.onRefresh();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item md={12}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          className={classes.root}\r\n        >\r\n          <Grid item md={2} className={classes.space}>\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={3}>\r\n                <IconButton onClick={handleOpen}>\r\n                  <CloudUploadIcon fontSize=\"large\" className={classes.uploadBtn} />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item md={9}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.formControl}\r\n                  fullWidth\r\n                >\r\n                  <InputLabel id=\"database-select-label\">{`DataBase`}</InputLabel>\r\n                  <Select\r\n                    labelId=\"database-select-label\"\r\n                    id=\"database-select-outlined\"\r\n                    value={props.db}\r\n                    onChange={(e) => props.onSetDB(e.target.value)}\r\n                    defaultValue=\"\"\r\n                    label=\"DataBase\"\r\n                  >\r\n                    <MenuItem key=\"staging_db\" value=\"staging_db\">\r\n                      Staging\r\n                    </MenuItem>\r\n                    <MenuItem key=\"product_db\" value=\"product_db\">\r\n                      Production\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={1}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item md={4}>\r\n                <Tooltip\r\n                  title=\"Delete selected record\"\r\n                  disableHoverListener={disabled}\r\n                  arrow\r\n                >\r\n                  <IconButton name=\"delete\" disabled={disabled} onClick={handleClick}>\r\n                    <DeleteOutlinedIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Tooltip\r\n                  title=\"Delete all records for selected system\"\r\n                  disableHoverListener={disabled}\r\n                  arrow\r\n                >\r\n                  <IconButton name=\"deleteAll\" disabled={disabled} onClick={handleClick}>\r\n                    <DeleteSweepOutlinedIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Tooltip\r\n                  title=\"Transfer all records to Production\"\r\n                  disableHoverListener={disabled}\r\n                  arrow\r\n                >\r\n                  <IconButton name=\"migrate\" disabled={disabled} onClick={handleClick}>\r\n                    <ShopTwoOutlinedIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={clsx(classes.formControl, classes.systemForm)}\r\n            >\r\n              <InputLabel id=\"header-select-system-label\">System</InputLabel>\r\n              <Select\r\n                labelId=\"header-select-system-label\"\r\n                id=\"header-select-system\"\r\n                value={props.system}\r\n                onChange={(e) => props.onSystem(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"System\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {props.systems.map((item: any) => (\r\n                  <MenuItem key={item.system_name} value={item.system_id}>\r\n                    {item.system_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={clsx(classes.formControl, classes.versionForm)}\r\n            >\r\n              <InputLabel id=\"header-select-version-label\">{`Version`}</InputLabel>\r\n              <Select\r\n                labelId=\"header-select-version-label\"\r\n                id=\"header-select-version\"\r\n                value={props.version}\r\n                onChange={(e) => props.onVersion(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"Version\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {props.versions.map((item: any) => (\r\n                  <MenuItem key={`version_${item.versions}`} value={item.versions}>\r\n                    {item.versions}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={clsx(classes.formControl, classes.versionForm)}\r\n            >\r\n              <InputLabel>Model</InputLabel>\r\n              <Select\r\n                label=\"Model\"\r\n                value={model}\r\n                onChange={handleChangeModel}\r\n                defaultValue=\"\"\r\n              >\r\n                <MenuItem value={-1} disabled>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                {models.map((item: any) => (\r\n                  <MenuItem value={item.MODEL_ID} key={item.MODEL_ID}>\r\n                    {item.MODEL_ID}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={3} className={classes.space}>\r\n            <ToggleButtonGroup value={props.dataSet} onChange={(e) => props.onClick(e)}>\r\n              <ToggleButton\r\n                id=\"as_needed_handoff\"\r\n                name=\"coverage\"\r\n                value=\"as_needed_handoff\"\r\n                size=\"small\"\r\n              >\r\n                RF Coverage (%)\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                id=\"maximum_powee_handoff\"\r\n                name=\"gap\"\r\n                value=\"maximum_powee_handoff\"\r\n                size=\"small\"\r\n              >\r\n                No Coverage (%)\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <ProcessModal isOpen={isOpen} onClose={handleOpen} />\r\n      <ConfrimModal\r\n        open={isModal}\r\n        name={feature}\r\n        onClose={handleModal}\r\n        onChangeAgree={handleAgree}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderSection;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Slide,\r\n  Dialog,\r\n  DialogContent,\r\n  CssBaseline,\r\n  DialogTitle as MuiDialogTitle,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport axios from 'src/utils/axios';\r\nimport TwoViewSection from './TwoViewChart';\r\nimport ThreeViewSection from './ThreeViewChart';\r\nimport MultiCharts from './MultiCharts';\r\nimport Header from './Header';\r\nimport OptionAddon from '../../../components/Button/OptionAddon';\r\nimport { getItems, getSystems, getFileId, changeDB } from '../../../API';\r\nimport useStyles from '../../../utils/styles';\r\n\r\ninterface IDot {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ICount {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\ninterface IFileId {\r\n  id: number;\r\n}\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true\r\n};\r\n\r\nconst viewStyle = {\r\n  paddingLeft: '2rem',\r\n  paddingRight: '0.8rem'\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst AnalyzeRegressionSection: React.FC<any> = (props: any) => {\r\n  const [viewMethod, setViewMethod] = useState<string>('2d_view');\r\n  const [dataSet, setDataSet] = useState<string>('as_needed_handoff');\r\n  const [systems, setSystems] = useState<string[]>([]);\r\n  const [versions, setVersions] = useState<number[]>([]);\r\n  const [db, setDB] = useState<string>('staging_db');\r\n  const [dot, setDot] = useState<IDot>({ x: props.alt, y: props.value });\r\n  const [fileId, setFileId] = useState<IFileId[]>([]);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState<any>({});\r\n  const [reset, setReset] = useState<boolean>(false);\r\n  const [count, setCount] = useState<ICount>({ width: '0px', height: '0px' });\r\n  const [isChart, setIsChart] = useState(false);\r\n  const classes = useStyles();\r\n  const chartEl = useRef<any>(null);\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: number[] = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    getSystems()\r\n      .then((res: any) => {\r\n        setSystems(res.data);\r\n        props.onSystem(res.data[1].system_id);\r\n      })\r\n      .catch((err: any) => setSystems([]));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.isRefresh, db]);\r\n\r\n  useEffect(() => {\r\n    if (fileId.length > 0) {\r\n      getItems({\r\n        dataType: props.dataType,\r\n        fileId: fileId,\r\n        version: props.version\r\n      })\r\n        .then((res) => {\r\n          Object.keys(res.data).forEach((el: string) => {\r\n            let ctype: string = res.data[el]['type'];\r\n            let gaps: number[] = [];\r\n            let durations: number[] = [];\r\n            let avgs: number[] = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === 'line') {\r\n              res.data[el]['data'].forEach((item: number[], idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            } else if (ctype === 'histogram') {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el]['data'],\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n    }\r\n  }, [props.dataType, props.version, fileId]);\r\n\r\n  useEffect(() => {\r\n    let user_inclination: number | string =\r\n      props.inclination !== '' ? props.inclination : 30;\r\n\r\n    const params = {\r\n      user_altitude: dot.x,\r\n      user_inclination,\r\n      system: props.system,\r\n      version: props.version\r\n    };\r\n\r\n    getFileId(params)\r\n      .then((res: any) => setFileId(res.data))\r\n      .catch(() => setFileId([]));\r\n  }, [props.inclination]);\r\n\r\n  useEffect(() => {\r\n    changeDB({ database: db }).catch((err) => setDB('staging_db'));\r\n    setDataSet('as_needed_handoff');\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const params = { system: props.system };\r\n        const response = await axios.post('/api/get-versions', params);\r\n\r\n        setVersions(response.data);\r\n        props.onVersion(response.data[0].versions);\r\n      } catch (error) {\r\n        setVersions([]);\r\n      }\r\n    };\r\n    props.system !== '' && fetchData();\r\n  }, [props.system]);\r\n\r\n  useEffect(() => {\r\n    if (props.data.plot_value.length > 0)\r\n      setDot({\r\n        x: props.data.plot_value[0].altitude,\r\n        y: props.data.plot_value[0].value\r\n      });\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (chartEl) {\r\n      let size = window.getComputedStyle(chartEl.current);\r\n      setCount({ width: size.width, height: size.height });\r\n    }\r\n  }, [chartEl, traces]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n\r\n    setDataSet(id);\r\n    props.onDataType(name);\r\n  };\r\n\r\n  const handleClick = (event: any) => {\r\n    if (event) {\r\n      const params = {\r\n        user_altitude: event.points[0].x,\r\n        user_inclination: props.inc,\r\n        system: props.system,\r\n        version: props.version\r\n      };\r\n\r\n      setDot({ x: event.points[0].x, y: event.points[0].y });\r\n      getFileId(params)\r\n        .then((res: any) => setFileId(res.data))\r\n        .catch((err: any) => setFileId([]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardContent\r\n        ref={chartEl}\r\n        className={classes.cartCardContent}\r\n        style={{ overflow: 'hidden' }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Header\r\n            db={db}\r\n            system={props.system}\r\n            systems={systems}\r\n            version={props.version}\r\n            versions={versions}\r\n            dataSet={dataSet}\r\n            alt={dot.x}\r\n            inc={props.inclination !== '' ? props.inclination : props.inc}\r\n            fileId={fileId}\r\n            onRefresh={() => props.onRefresh()}\r\n            onSetDB={(value: string) => setDB(value)}\r\n            onSystem={(value: number) => props.onSystem(value)}\r\n            onVersion={(value: number) => props.onVersion(value)}\r\n            onClick={handleDataSetClick}\r\n          />\r\n          <Grid item md={6} style={viewStyle}>\r\n            <Card style={{ height: `calc(${count.height} * 0.4)` }}>\r\n              <CardContent>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                  <Grid\r\n                    item\r\n                    md={12}\r\n                    style={{ textAlign: 'center', position: 'relative' }}\r\n                  >\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 15,\r\n                        fontWeight: 'bold'\r\n                      }}\r\n                    >\r\n                      {dataSet === 'as_needed_handoff'\r\n                        ? `RF Coverage (%)`\r\n                        : `No Coverage (%)`}\r\n                      {` vs. User Inclination`}\r\n                    </Typography>\r\n                    <OptionAddon\r\n                      source={props.data}\r\n                      dataSource={props.source}\r\n                      checked={checked}\r\n                      viewMethod={viewMethod}\r\n                      inc={props.inclination}\r\n                      incs={props.incs}\r\n                      isDash={true}\r\n                      onChecked={handleCheck}\r\n                      onChart={() => setIsChart(true)}\r\n                      resetPlot={() => setReset(!reset)}\r\n                      onInc={(value: any) => props.onInc(value)}\r\n                      onViewMethod={(e: any) =>\r\n                        setViewMethod(e.currentTarget.name)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  {viewMethod === '3d_view' ? (\r\n                    <Grid item md={12}>\r\n                      <ThreeViewSection\r\n                        data={props.source}\r\n                        equation={props.equation}\r\n                        maxAltitude={props.maxAltitude}\r\n                        alt={props.alt}\r\n                        inc={\r\n                          props.inclination !== ''\r\n                            ? props.inclination\r\n                            : props.inc\r\n                        }\r\n                        value={props.value}\r\n                        reset={reset}\r\n                        isLegend={false}\r\n                        isSub={true}\r\n                        plot_rows={props.source.plot_value}\r\n                        surface_rows={surface_rows}\r\n                        zAxisLabel={zAxisLabel}\r\n                        checked={checked}\r\n                        size={count}\r\n                        isChart={false}\r\n                        onClick={handleClick}\r\n                      />\r\n                    </Grid>\r\n                  ) : (\r\n                    <Grid item md={12}>\r\n                      <TwoViewSection\r\n                        data={props.data}\r\n                        equation={props.equation}\r\n                        maxAltitude={props.maxAltitude}\r\n                        alt={dot.x}\r\n                        inc={\r\n                          props.inclination !== ''\r\n                            ? props.inclination\r\n                            : props.inc\r\n                        }\r\n                        value={props.value}\r\n                        isLegend={false}\r\n                        isSub={true}\r\n                        plot_rows={plot_rows}\r\n                        surface_rows={surface_rows}\r\n                        yAxisLabel={zAxisLabel}\r\n                        dot={dot}\r\n                        size={count}\r\n                        checked={checked}\r\n                        isChart={false}\r\n                        onClick={handleClick}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {fileId.length === 0 && <Grid item md={6} />}\r\n          {Object.keys(traces).length > 0 && (\r\n            <MultiCharts\r\n              traces={traces}\r\n              dataSet={dataSet}\r\n              dataType={props.dataType}\r\n              size={count}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </CardContent>\r\n      {isChart && (\r\n        <Dialog\r\n          open={isChart}\r\n          TransitionComponent={Transition}\r\n          onClose={() => setIsChart(true)}\r\n          PaperProps={{\r\n            style: {\r\n              height: parseFloat(count.width.replace('px', '')) * 0.42,\r\n              maxWidth: parseFloat(count.width.replace('px', '')) * 0.6,\r\n              minWidth: parseFloat(count.width.replace('px', '')) * 0.6\r\n            }\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <MuiDialogTitle>\r\n            <Typography component=\"strong\" variant=\"h6\">\r\n              {dataSet === 'as_needed_handoff'\r\n                ? `RF Coverage (%)`\r\n                : `No Coverage (%)`}\r\n              {` vs. User Inclination`}\r\n            </Typography>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              className={classes.dialogCloseBtn}\r\n              onClick={() => setIsChart(false)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </MuiDialogTitle>\r\n          <hr />\r\n          <DialogContent>\r\n            {viewMethod === '3d_view' ? (\r\n              <Grid item md={12}>\r\n                <ThreeViewSection\r\n                  data={props.source}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  reset={reset}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={props.source.plot_value}\r\n                  surface_rows={surface_rows}\r\n                  zAxisLabel={zAxisLabel}\r\n                  checked={checked}\r\n                  size={count}\r\n                  isChart={true}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <Grid item md={12}>\r\n                <TwoViewSection\r\n                  data={props.data}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={plot_rows}\r\n                  surface_rows={surface_rows}\r\n                  yAxisLabel={zAxisLabel}\r\n                  dot={dot}\r\n                  size={count}\r\n                  checked={checked}\r\n                  isChart={true}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { getCartItems } from 'src/API';\r\nimport useStyles from 'src/utils/styles';\r\nimport { INIT_PARAMS } from 'src/constants';\r\nimport AnalyzeRegressionSection from './analyze-regression-section';\r\n\r\nconst Caesar: React.FC = () => {\r\n  const [source, setSource] = useState({});\r\n  const [dataSource, setDataSource] = useState({} as any);\r\n  const [system, setSystem] = useState<number>(4);\r\n  const [version, setVersion] = useState<number>(1);\r\n  const [inclination, setInclination] = useState<string>('');\r\n  const [incs, setIncs] = useState<Array<any>>([]);\r\n  const [dataType, setDataType] = useState<string>('coverage');\r\n  const [isRefresh, setIsRefresh] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [text, setText] = useState<string>('');\r\n  const deepDive = 'system1/coverage';\r\n  const metric = deepDive.split('/')[1];\r\n  const missionType = 'orbital';\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText('');\r\n    getCartItems({\r\n      type: missionType,\r\n      system: system,\r\n      version: version,\r\n      dataType\r\n    })\r\n      .then((res: any) => {\r\n        setSource(res.data.data);\r\n        setDataSource(res.data.data);\r\n        setMaxAltitude(res.data.maxAltitude);\r\n        setText(res.data.text);\r\n\r\n        // TODO: active when used\r\n        // setTerrestrial(res.data.terrestrial);\r\n        // setCoefficients(res.data.coefficients);\r\n\r\n        if (Object.keys(res.data.data).includes('plot_value')) {\r\n          let tmp: any = res.data.data.plot_value.map((item: any) => item['inclination']);\r\n          let uniqueArray: Array<any> = [...(new Set(tmp) as any)];\r\n          setIncs(uniqueArray.sort());\r\n        }\r\n\r\n        // TODO: this is for \"cart system\".\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n    setIsRefresh(false);\r\n  }, [system, version, dataType, isRefresh]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataSource).includes('plot_value')) {\r\n      let user_inclination: number | string = inclination !== '' ? inclination : 30;\r\n      let data = dataSource.plot_value.filter(\r\n        (item: any) => item.inclination === user_inclination\r\n      );\r\n      setSource((prevState: any) => ({ ...prevState, plot_value: data }));\r\n    }\r\n  }, [inclination]);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // TODO: this is for \"cart system\".\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Container component=\"main\" maxWidth=\"xl\">\r\n        <Card className={classes.cartCard}>\r\n          <CssBaseline />\r\n          <CardHeader\r\n            title={\r\n              <Typography component=\"h1\" variant=\"h6\" style={{ margin: 5 }}>\r\n                {`CAESAR Data Dashboard`}\r\n              </Typography>\r\n            }\r\n            style={{ backgroundColor: blue[700], color: '#fff', maxHeight: '4rem' }}\r\n          />\r\n          {!isLoading &&\r\n            (missionType === 'orbital' ? (\r\n              <AnalyzeRegressionSection\r\n                equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                maxAltitude={maxAltitude}\r\n                alt={INIT_PARAMS.altitude}\r\n                inc={INIT_PARAMS.inclination}\r\n                value={INIT_PARAMS.value}\r\n                data={source}\r\n                source={dataSource}\r\n                dataType={dataType}\r\n                selectedItem={metric}\r\n                text={text}\r\n                system={system}\r\n                version={version}\r\n                inclination={inclination}\r\n                incs={incs}\r\n                isRefresh={isRefresh}\r\n                onRefresh={() => setIsRefresh(true)}\r\n                onInc={(value: any) => setInclination(value)}\r\n                onSystem={(value: any) => setSystem(value)}\r\n                onVersion={(value: any) => setVersion(value)}\r\n                onDataType={(value: any) => setDataType(value)}\r\n              />\r\n            ) : (\r\n              <></>\r\n            ))}\r\n        </Card>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Caesar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction NoMatch() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <Card className={classes.authcard}>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {`404 | Page not found :(`}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <p>{`Maybe the page you are looking for has been removed, or you typed in the wrong URL`}</p>\r\n                </CardContent>\r\n                <Link to=\"/\" className={classes.link}>{`Back To Home`}</Link>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport ChartPanel from './views/chart-panel';\r\nimport CartDashPanel from './views/caesar';\r\nimport NoMatch from './views/auth-panel/NoMatch';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <SnackbarProvider dense maxSnack={3}>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={CartDashPanel} />\r\n          <Route exact path=\"/home\" component={ChartPanel} />\r\n          <Route path=\"*\" component={NoMatch} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </SnackbarProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}